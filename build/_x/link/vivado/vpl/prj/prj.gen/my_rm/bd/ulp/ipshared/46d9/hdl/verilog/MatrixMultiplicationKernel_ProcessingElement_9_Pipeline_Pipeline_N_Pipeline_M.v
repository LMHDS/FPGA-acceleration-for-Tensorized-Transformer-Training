// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMultiplicationKernel_ProcessingElement_9_Pipeline_Pipeline_N_Pipeline_M (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        aPipes_8_dout,
        aPipes_8_num_data_valid,
        aPipes_8_fifo_cap,
        aPipes_8_empty_n,
        aPipes_8_read,
        aPipes_9_din,
        aPipes_9_num_data_valid,
        aPipes_9_fifo_cap,
        aPipes_9_full_n,
        aPipes_9_write,
        bPipes_8_dout,
        bPipes_8_num_data_valid,
        bPipes_8_fifo_cap,
        bPipes_8_empty_n,
        bPipes_8_read,
        bPipes_9_din,
        bPipes_9_num_data_valid,
        bPipes_9_fifo_cap,
        bPipes_9_full_n,
        bPipes_9_write,
        m0,
        cBuffer_address0,
        cBuffer_ce0,
        cBuffer_we0,
        cBuffer_d0,
        cBuffer_address1,
        cBuffer_ce1,
        cBuffer_q1,
        cmp111,
        size_m,
        cond90,
        aBuffer_address0,
        aBuffer_ce0,
        aBuffer_we0,
        aBuffer_d0,
        aBuffer_address1,
        aBuffer_ce1,
        aBuffer_q1,
        mul,
        cond,
        size_n,
        brmerge282
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] aPipes_8_dout;
input  [2:0] aPipes_8_num_data_valid;
input  [2:0] aPipes_8_fifo_cap;
input   aPipes_8_empty_n;
output   aPipes_8_read;
output  [31:0] aPipes_9_din;
input  [2:0] aPipes_9_num_data_valid;
input  [2:0] aPipes_9_fifo_cap;
input   aPipes_9_full_n;
output   aPipes_9_write;
input  [255:0] bPipes_8_dout;
input  [2:0] bPipes_8_num_data_valid;
input  [2:0] bPipes_8_fifo_cap;
input   bPipes_8_empty_n;
output   bPipes_8_read;
output  [255:0] bPipes_9_din;
input  [2:0] bPipes_9_num_data_valid;
input  [2:0] bPipes_9_fifo_cap;
input   bPipes_9_full_n;
output   bPipes_9_write;
input  [22:0] m0;
output  [9:0] cBuffer_address0;
output   cBuffer_ce0;
output   cBuffer_we0;
output  [255:0] cBuffer_d0;
output  [9:0] cBuffer_address1;
output   cBuffer_ce1;
input  [255:0] cBuffer_q1;
input  [0:0] cmp111;
input  [31:0] size_m;
input  [4:0] cond90;
output  [4:0] aBuffer_address0;
output   aBuffer_ce0;
output   aBuffer_we0;
output  [31:0] aBuffer_d0;
output  [4:0] aBuffer_address1;
output   aBuffer_ce1;
input  [31:0] aBuffer_q1;
input  [26:0] mul;
input  [4:0] cond;
input  [31:0] size_n;
input  [0:0] brmerge282;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
reg   [0:0] and_ln80_1_reg_1115;
reg   [0:0] icmp_ln85_reg_1119;
reg    ap_predicate_op67_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_371_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bPipes_8_blk_n;
wire    ap_block_pp0_stage0;
reg    bPipes_9_blk_n;
reg    aPipes_8_blk_n;
reg    aPipes_9_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_391_p2;
reg   [0:0] icmp_ln67_reg_1104;
wire   [6:0] select_ln64_fu_397_p3;
reg   [6:0] select_ln64_reg_1109;
reg   [6:0] select_ln64_reg_1109_pp0_iter2_reg;
reg   [6:0] select_ln64_reg_1109_pp0_iter3_reg;
reg   [6:0] select_ln64_reg_1109_pp0_iter4_reg;
reg   [6:0] select_ln64_reg_1109_pp0_iter5_reg;
reg   [6:0] select_ln64_reg_1109_pp0_iter6_reg;
wire   [0:0] and_ln80_1_fu_442_p2;
wire   [0:0] icmp_ln85_fu_448_p2;
wire   [4:0] select_ln64_1_fu_474_p3;
reg   [4:0] select_ln64_1_reg_1123;
wire   [3:0] empty_160_fu_481_p1;
reg   [3:0] empty_160_reg_1129;
reg   [3:0] empty_160_reg_1129_pp0_iter3_reg;
reg   [3:0] empty_160_reg_1129_pp0_iter4_reg;
reg   [3:0] empty_160_reg_1129_pp0_iter5_reg;
reg   [3:0] empty_160_reg_1129_pp0_iter6_reg;
wire   [0:0] inBoundsN_fu_521_p2;
reg   [0:0] inBoundsN_reg_1139;
reg   [0:0] inBoundsN_reg_1139_pp0_iter4_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter5_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter6_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter7_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter8_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter9_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter10_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter11_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter12_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter13_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter14_reg;
reg   [0:0] inBoundsN_reg_1139_pp0_iter15_reg;
reg   [31:0] aVal_reg_1151;
wire   [31:0] trunc_ln170_fu_526_p1;
reg   [31:0] trunc_ln170_reg_1156;
reg   [31:0] tmp_s_reg_1161;
reg   [31:0] tmp_16_reg_1166;
reg   [31:0] tmp_18_reg_1171;
reg   [31:0] tmp_20_reg_1176;
reg   [31:0] tmp_22_reg_1181;
reg   [31:0] tmp_24_reg_1186;
reg   [31:0] tmp_26_reg_1191;
wire   [31:0] bitcast_ln32_fu_600_p1;
reg   [9:0] cBuffer_addr_reg_1248;
reg   [9:0] cBuffer_addr_reg_1248_pp0_iter8_reg;
reg   [9:0] cBuffer_addr_reg_1248_pp0_iter9_reg;
reg   [9:0] cBuffer_addr_reg_1248_pp0_iter10_reg;
reg   [9:0] cBuffer_addr_reg_1248_pp0_iter11_reg;
reg   [9:0] cBuffer_addr_reg_1248_pp0_iter12_reg;
reg   [9:0] cBuffer_addr_reg_1248_pp0_iter13_reg;
reg   [9:0] cBuffer_addr_reg_1248_pp0_iter14_reg;
reg   [9:0] cBuffer_addr_reg_1248_pp0_iter15_reg;
wire   [0:0] inBoundsM_fu_676_p2;
reg   [0:0] inBoundsM_reg_1254;
reg   [0:0] inBoundsM_reg_1254_pp0_iter8_reg;
reg   [0:0] inBoundsM_reg_1254_pp0_iter9_reg;
reg   [0:0] inBoundsM_reg_1254_pp0_iter10_reg;
reg   [0:0] inBoundsM_reg_1254_pp0_iter11_reg;
reg   [0:0] inBoundsM_reg_1254_pp0_iter12_reg;
reg   [0:0] inBoundsM_reg_1254_pp0_iter13_reg;
reg   [0:0] inBoundsM_reg_1254_pp0_iter14_reg;
reg   [0:0] inBoundsM_reg_1254_pp0_iter15_reg;
wire   [0:0] inBoundsM_8_fu_690_p2;
reg   [0:0] inBoundsM_8_reg_1259;
reg   [0:0] inBoundsM_8_reg_1259_pp0_iter8_reg;
reg   [0:0] inBoundsM_8_reg_1259_pp0_iter9_reg;
reg   [0:0] inBoundsM_8_reg_1259_pp0_iter10_reg;
reg   [0:0] inBoundsM_8_reg_1259_pp0_iter11_reg;
reg   [0:0] inBoundsM_8_reg_1259_pp0_iter12_reg;
reg   [0:0] inBoundsM_8_reg_1259_pp0_iter13_reg;
reg   [0:0] inBoundsM_8_reg_1259_pp0_iter14_reg;
reg   [0:0] inBoundsM_8_reg_1259_pp0_iter15_reg;
wire   [0:0] inBoundsM_9_fu_704_p2;
reg   [0:0] inBoundsM_9_reg_1264;
reg   [0:0] inBoundsM_9_reg_1264_pp0_iter8_reg;
reg   [0:0] inBoundsM_9_reg_1264_pp0_iter9_reg;
reg   [0:0] inBoundsM_9_reg_1264_pp0_iter10_reg;
reg   [0:0] inBoundsM_9_reg_1264_pp0_iter11_reg;
reg   [0:0] inBoundsM_9_reg_1264_pp0_iter12_reg;
reg   [0:0] inBoundsM_9_reg_1264_pp0_iter13_reg;
reg   [0:0] inBoundsM_9_reg_1264_pp0_iter14_reg;
reg   [0:0] inBoundsM_9_reg_1264_pp0_iter15_reg;
wire   [0:0] inBoundsM_10_fu_718_p2;
reg   [0:0] inBoundsM_10_reg_1269;
reg   [0:0] inBoundsM_10_reg_1269_pp0_iter8_reg;
reg   [0:0] inBoundsM_10_reg_1269_pp0_iter9_reg;
reg   [0:0] inBoundsM_10_reg_1269_pp0_iter10_reg;
reg   [0:0] inBoundsM_10_reg_1269_pp0_iter11_reg;
reg   [0:0] inBoundsM_10_reg_1269_pp0_iter12_reg;
reg   [0:0] inBoundsM_10_reg_1269_pp0_iter13_reg;
reg   [0:0] inBoundsM_10_reg_1269_pp0_iter14_reg;
reg   [0:0] inBoundsM_10_reg_1269_pp0_iter15_reg;
wire   [0:0] inBoundsM_11_fu_732_p2;
reg   [0:0] inBoundsM_11_reg_1274;
reg   [0:0] inBoundsM_11_reg_1274_pp0_iter8_reg;
reg   [0:0] inBoundsM_11_reg_1274_pp0_iter9_reg;
reg   [0:0] inBoundsM_11_reg_1274_pp0_iter10_reg;
reg   [0:0] inBoundsM_11_reg_1274_pp0_iter11_reg;
reg   [0:0] inBoundsM_11_reg_1274_pp0_iter12_reg;
reg   [0:0] inBoundsM_11_reg_1274_pp0_iter13_reg;
reg   [0:0] inBoundsM_11_reg_1274_pp0_iter14_reg;
reg   [0:0] inBoundsM_11_reg_1274_pp0_iter15_reg;
wire   [0:0] inBoundsM_12_fu_746_p2;
reg   [0:0] inBoundsM_12_reg_1279;
reg   [0:0] inBoundsM_12_reg_1279_pp0_iter8_reg;
reg   [0:0] inBoundsM_12_reg_1279_pp0_iter9_reg;
reg   [0:0] inBoundsM_12_reg_1279_pp0_iter10_reg;
reg   [0:0] inBoundsM_12_reg_1279_pp0_iter11_reg;
reg   [0:0] inBoundsM_12_reg_1279_pp0_iter12_reg;
reg   [0:0] inBoundsM_12_reg_1279_pp0_iter13_reg;
reg   [0:0] inBoundsM_12_reg_1279_pp0_iter14_reg;
reg   [0:0] inBoundsM_12_reg_1279_pp0_iter15_reg;
wire   [0:0] inBoundsM_13_fu_760_p2;
reg   [0:0] inBoundsM_13_reg_1284;
reg   [0:0] inBoundsM_13_reg_1284_pp0_iter8_reg;
reg   [0:0] inBoundsM_13_reg_1284_pp0_iter9_reg;
reg   [0:0] inBoundsM_13_reg_1284_pp0_iter10_reg;
reg   [0:0] inBoundsM_13_reg_1284_pp0_iter11_reg;
reg   [0:0] inBoundsM_13_reg_1284_pp0_iter12_reg;
reg   [0:0] inBoundsM_13_reg_1284_pp0_iter13_reg;
reg   [0:0] inBoundsM_13_reg_1284_pp0_iter14_reg;
reg   [0:0] inBoundsM_13_reg_1284_pp0_iter15_reg;
wire   [0:0] inBoundsM_14_fu_774_p2;
reg   [0:0] inBoundsM_14_reg_1289;
reg   [0:0] inBoundsM_14_reg_1289_pp0_iter8_reg;
reg   [0:0] inBoundsM_14_reg_1289_pp0_iter9_reg;
reg   [0:0] inBoundsM_14_reg_1289_pp0_iter10_reg;
reg   [0:0] inBoundsM_14_reg_1289_pp0_iter11_reg;
reg   [0:0] inBoundsM_14_reg_1289_pp0_iter12_reg;
reg   [0:0] inBoundsM_14_reg_1289_pp0_iter13_reg;
reg   [0:0] inBoundsM_14_reg_1289_pp0_iter14_reg;
reg   [0:0] inBoundsM_14_reg_1289_pp0_iter15_reg;
wire   [31:0] grp_fu_321_p2;
reg   [31:0] res_35_reg_1294;
wire   [31:0] trunc_ln170_2_fu_786_p1;
reg   [31:0] trunc_ln170_2_reg_1299;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] res_36_reg_1304;
reg   [31:0] tmp_15_reg_1309;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] res_37_reg_1314;
reg   [31:0] tmp_17_reg_1319;
wire   [31:0] grp_fu_333_p2;
reg   [31:0] res_38_reg_1324;
reg   [31:0] tmp_19_reg_1329;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] res_39_reg_1334;
reg   [31:0] tmp_21_reg_1339;
wire   [31:0] grp_fu_341_p2;
reg   [31:0] res_40_reg_1344;
reg   [31:0] tmp_23_reg_1349;
wire   [31:0] grp_fu_345_p2;
reg   [31:0] res_41_reg_1354;
reg   [31:0] tmp_25_reg_1359;
wire   [31:0] grp_fu_349_p2;
reg   [31:0] res_42_reg_1364;
reg   [31:0] tmp_27_reg_1369;
wire   [31:0] bitcast_ln32_2_fu_860_p1;
reg   [31:0] bitcast_ln32_2_reg_1374;
reg   [31:0] bitcast_ln32_2_reg_1374_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_2_reg_1374_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_2_reg_1374_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_2_reg_1374_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_2_reg_1374_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_2_reg_1374_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_4_fu_864_p1;
reg   [31:0] bitcast_ln32_4_reg_1380;
reg   [31:0] bitcast_ln32_4_reg_1380_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_4_reg_1380_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_4_reg_1380_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_4_reg_1380_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_4_reg_1380_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_4_reg_1380_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_6_fu_868_p1;
reg   [31:0] bitcast_ln32_6_reg_1386;
reg   [31:0] bitcast_ln32_6_reg_1386_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_6_reg_1386_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_6_reg_1386_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_6_reg_1386_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_6_reg_1386_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_6_reg_1386_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_8_fu_872_p1;
reg   [31:0] bitcast_ln32_8_reg_1392;
reg   [31:0] bitcast_ln32_8_reg_1392_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_8_reg_1392_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_8_reg_1392_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_8_reg_1392_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_8_reg_1392_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_8_reg_1392_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_10_fu_876_p1;
reg   [31:0] bitcast_ln32_10_reg_1398;
reg   [31:0] bitcast_ln32_10_reg_1398_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_10_reg_1398_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_10_reg_1398_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_10_reg_1398_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_10_reg_1398_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_10_reg_1398_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_12_fu_880_p1;
reg   [31:0] bitcast_ln32_12_reg_1404;
reg   [31:0] bitcast_ln32_12_reg_1404_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_12_reg_1404_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_12_reg_1404_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_12_reg_1404_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_12_reg_1404_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_12_reg_1404_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_14_fu_884_p1;
reg   [31:0] bitcast_ln32_14_reg_1410;
reg   [31:0] bitcast_ln32_14_reg_1410_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_14_reg_1410_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_14_reg_1410_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_14_reg_1410_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_14_reg_1410_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_14_reg_1410_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_16_fu_888_p1;
reg   [31:0] bitcast_ln32_16_reg_1416;
reg   [31:0] bitcast_ln32_16_reg_1416_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_16_reg_1416_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_16_reg_1416_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_16_reg_1416_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_16_reg_1416_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_16_reg_1416_pp0_iter15_reg;
wire   [31:0] grp_fu_289_p2;
reg   [31:0] res_reg_1422;
wire   [31:0] grp_fu_293_p2;
reg   [31:0] res_2_reg_1427;
wire   [31:0] grp_fu_297_p2;
reg   [31:0] res_4_reg_1432;
wire   [31:0] grp_fu_301_p2;
reg   [31:0] res_6_reg_1437;
wire   [31:0] grp_fu_305_p2;
reg   [31:0] res_8_reg_1442;
wire   [31:0] grp_fu_309_p2;
reg   [31:0] res_30_reg_1447;
wire   [31:0] grp_fu_313_p2;
reg   [31:0] res_32_reg_1452;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] res_34_reg_1457;
wire   [63:0] add_cast_fu_490_p1;
wire   [63:0] add91_cast_fu_507_p1;
wire   [63:0] add115_cast_fu_659_p1;
reg   [6:0] m1_fu_158;
wire   [6:0] add_ln67_fu_454_p2;
wire    ap_loop_init;
reg   [4:0] n1_3_fu_162;
reg   [10:0] indvar_flatten6_fu_166;
wire   [10:0] add_ln64_1_fu_377_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten6_load;
reg    aPipes_8_read_local;
reg    ap_block_pp0_stage0_01001;
reg    aPipes_9_write_local;
reg    bPipes_8_read_local;
reg    bPipes_9_write_local;
reg    aBuffer_we0_local;
reg    aBuffer_ce0_local;
reg    aBuffer_ce1_local;
reg    cBuffer_ce1_local;
reg    cBuffer_we0_local;
wire   [255:0] tmp_28_fu_1004_p9;
reg    cBuffer_ce0_local;
wire   [31:0] grp_fu_289_p0;
wire   [31:0] grp_fu_293_p0;
wire   [31:0] grp_fu_297_p0;
wire   [31:0] grp_fu_301_p0;
wire   [31:0] grp_fu_305_p0;
wire   [31:0] grp_fu_309_p0;
wire   [31:0] grp_fu_313_p0;
wire   [31:0] grp_fu_317_p0;
wire   [31:0] grp_fu_321_p1;
wire   [31:0] grp_fu_325_p1;
wire   [31:0] grp_fu_329_p1;
wire   [31:0] grp_fu_333_p1;
wire   [31:0] grp_fu_337_p1;
wire   [31:0] grp_fu_341_p1;
wire   [31:0] grp_fu_345_p1;
wire   [31:0] grp_fu_349_p1;
wire   [3:0] tmp_fu_405_p4;
wire   [1:0] tmp_3_fu_421_p4;
wire   [0:0] icmp_ln82_fu_415_p2;
wire   [0:0] and_ln80_fu_437_p2;
wire   [0:0] icmp_ln83_fu_431_p2;
wire   [4:0] add_ln64_fu_468_p2;
wire   [4:0] add_fu_485_p2;
wire   [4:0] add91_fu_503_p2;
wire   [26:0] zext_ln64_fu_500_p1;
wire   [26:0] add106_fu_512_p2;
wire   [31:0] add106_cast_fu_517_p1;
wire   [9:0] mul2_fu_643_p3;
wire   [9:0] zext_ln67_fu_650_p1;
wire   [9:0] add115_fu_653_p2;
wire   [5:0] empty_fu_664_p1;
wire   [31:0] add1_fu_667_p4;
wire   [31:0] or_ln_fu_681_p4;
wire   [31:0] or_ln125_1_fu_695_p4;
wire   [31:0] or_ln125_2_fu_709_p4;
wire   [31:0] or_ln125_3_fu_723_p4;
wire   [31:0] or_ln125_4_fu_737_p4;
wire   [31:0] or_ln125_5_fu_751_p4;
wire   [31:0] or_ln125_6_fu_765_p4;
wire   [255:0] cPrev_1_fu_779_p3;
wire   [0:0] inBounds_fu_892_p2;
wire   [31:0] select_ln296_fu_896_p3;
wire   [0:0] inBounds_8_fu_906_p2;
wire   [31:0] select_ln296_1_fu_910_p3;
wire   [0:0] inBounds_9_fu_920_p2;
wire   [31:0] select_ln296_2_fu_924_p3;
wire   [0:0] inBounds_10_fu_934_p2;
wire   [31:0] select_ln296_3_fu_938_p3;
wire   [0:0] inBounds_11_fu_948_p2;
wire   [31:0] select_ln296_4_fu_952_p3;
wire   [0:0] inBounds_12_fu_962_p2;
wire   [31:0] select_ln296_5_fu_966_p3;
wire   [0:0] inBounds_13_fu_976_p2;
wire   [31:0] select_ln296_6_fu_980_p3;
wire   [0:0] inBounds_14_fu_990_p2;
wire   [31:0] select_ln296_7_fu_994_p3;
wire   [31:0] bitcast_ln36_7_fu_1000_p1;
wire   [31:0] bitcast_ln36_6_fu_986_p1;
wire   [31:0] bitcast_ln36_5_fu_972_p1;
wire   [31:0] bitcast_ln36_4_fu_958_p1;
wire   [31:0] bitcast_ln36_3_fu_944_p1;
wire   [31:0] bitcast_ln36_2_fu_930_p1;
wire   [31:0] bitcast_ln36_1_fu_916_p1;
wire   [31:0] bitcast_ln36_fu_902_p1;
reg    grp_fu_289_ce;
reg    grp_fu_293_ce;
reg    grp_fu_297_ce;
reg    grp_fu_301_ce;
reg    grp_fu_305_ce;
reg    grp_fu_309_ce;
reg    grp_fu_313_ce;
reg    grp_fu_317_ce;
reg    grp_fu_321_ce;
reg    grp_fu_325_ce;
reg    grp_fu_329_ce;
reg    grp_fu_333_ce;
reg    grp_fu_337_ce;
reg    grp_fu_341_ce;
reg    grp_fu_345_ce;
reg    grp_fu_349_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op69_store_state3;
reg    ap_enable_operation_69;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_operation_79;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_operation_80;
reg    ap_enable_state5_pp0_iter4_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 m1_fu_158 = 7'd0;
#0 n1_3_fu_162 = 5'd0;
#0 indvar_flatten6_fu_166 = 11'd0;
#0 ap_done_reg = 1'b0;
end

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U547(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_289_p0),
    .din1(res_35_reg_1294),
    .ce(grp_fu_289_ce),
    .dout(grp_fu_289_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U548(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_293_p0),
    .din1(res_36_reg_1304),
    .ce(grp_fu_293_ce),
    .dout(grp_fu_293_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U549(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(res_37_reg_1314),
    .ce(grp_fu_297_ce),
    .dout(grp_fu_297_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U550(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_301_p0),
    .din1(res_38_reg_1324),
    .ce(grp_fu_301_ce),
    .dout(grp_fu_301_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U551(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_305_p0),
    .din1(res_39_reg_1334),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U552(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_309_p0),
    .din1(res_40_reg_1344),
    .ce(grp_fu_309_ce),
    .dout(grp_fu_309_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U553(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_313_p0),
    .din1(res_41_reg_1354),
    .ce(grp_fu_313_ce),
    .dout(grp_fu_313_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U554(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_317_p0),
    .din1(res_42_reg_1364),
    .ce(grp_fu_317_ce),
    .dout(grp_fu_317_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U555(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_600_p1),
    .din1(grp_fu_321_p1),
    .ce(grp_fu_321_ce),
    .dout(grp_fu_321_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U556(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_600_p1),
    .din1(grp_fu_325_p1),
    .ce(grp_fu_325_ce),
    .dout(grp_fu_325_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U557(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_600_p1),
    .din1(grp_fu_329_p1),
    .ce(grp_fu_329_ce),
    .dout(grp_fu_329_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U558(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_600_p1),
    .din1(grp_fu_333_p1),
    .ce(grp_fu_333_ce),
    .dout(grp_fu_333_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U559(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_600_p1),
    .din1(grp_fu_337_p1),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U560(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_600_p1),
    .din1(grp_fu_341_p1),
    .ce(grp_fu_341_ce),
    .dout(grp_fu_341_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U561(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_600_p1),
    .din1(grp_fu_345_p1),
    .ce(grp_fu_345_ce),
    .dout(grp_fu_345_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U562(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_600_p1),
    .din1(grp_fu_349_p1),
    .ce(grp_fu_349_ce),
    .dout(grp_fu_349_p2)
);

MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_371_p2 == 1'd0))) begin
            indvar_flatten6_fu_166 <= add_ln64_1_fu_377_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_166 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            m1_fu_158 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            m1_fu_158 <= add_ln67_fu_454_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            n1_3_fu_162 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            n1_3_fu_162 <= select_ln64_1_fu_474_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aVal_reg_1151 <= aBuffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln80_1_reg_1115 <= and_ln80_1_fu_442_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln67_reg_1104 <= icmp_ln67_fu_391_p2;
        icmp_ln85_reg_1119 <= icmp_ln85_fu_448_p2;
        select_ln64_reg_1109 <= select_ln64_fu_397_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        bitcast_ln32_10_reg_1398 <= bitcast_ln32_10_fu_876_p1;
        bitcast_ln32_10_reg_1398_pp0_iter10_reg <= bitcast_ln32_10_reg_1398;
        bitcast_ln32_10_reg_1398_pp0_iter11_reg <= bitcast_ln32_10_reg_1398_pp0_iter10_reg;
        bitcast_ln32_10_reg_1398_pp0_iter12_reg <= bitcast_ln32_10_reg_1398_pp0_iter11_reg;
        bitcast_ln32_10_reg_1398_pp0_iter13_reg <= bitcast_ln32_10_reg_1398_pp0_iter12_reg;
        bitcast_ln32_10_reg_1398_pp0_iter14_reg <= bitcast_ln32_10_reg_1398_pp0_iter13_reg;
        bitcast_ln32_10_reg_1398_pp0_iter15_reg <= bitcast_ln32_10_reg_1398_pp0_iter14_reg;
        bitcast_ln32_12_reg_1404 <= bitcast_ln32_12_fu_880_p1;
        bitcast_ln32_12_reg_1404_pp0_iter10_reg <= bitcast_ln32_12_reg_1404;
        bitcast_ln32_12_reg_1404_pp0_iter11_reg <= bitcast_ln32_12_reg_1404_pp0_iter10_reg;
        bitcast_ln32_12_reg_1404_pp0_iter12_reg <= bitcast_ln32_12_reg_1404_pp0_iter11_reg;
        bitcast_ln32_12_reg_1404_pp0_iter13_reg <= bitcast_ln32_12_reg_1404_pp0_iter12_reg;
        bitcast_ln32_12_reg_1404_pp0_iter14_reg <= bitcast_ln32_12_reg_1404_pp0_iter13_reg;
        bitcast_ln32_12_reg_1404_pp0_iter15_reg <= bitcast_ln32_12_reg_1404_pp0_iter14_reg;
        bitcast_ln32_14_reg_1410 <= bitcast_ln32_14_fu_884_p1;
        bitcast_ln32_14_reg_1410_pp0_iter10_reg <= bitcast_ln32_14_reg_1410;
        bitcast_ln32_14_reg_1410_pp0_iter11_reg <= bitcast_ln32_14_reg_1410_pp0_iter10_reg;
        bitcast_ln32_14_reg_1410_pp0_iter12_reg <= bitcast_ln32_14_reg_1410_pp0_iter11_reg;
        bitcast_ln32_14_reg_1410_pp0_iter13_reg <= bitcast_ln32_14_reg_1410_pp0_iter12_reg;
        bitcast_ln32_14_reg_1410_pp0_iter14_reg <= bitcast_ln32_14_reg_1410_pp0_iter13_reg;
        bitcast_ln32_14_reg_1410_pp0_iter15_reg <= bitcast_ln32_14_reg_1410_pp0_iter14_reg;
        bitcast_ln32_16_reg_1416 <= bitcast_ln32_16_fu_888_p1;
        bitcast_ln32_16_reg_1416_pp0_iter10_reg <= bitcast_ln32_16_reg_1416;
        bitcast_ln32_16_reg_1416_pp0_iter11_reg <= bitcast_ln32_16_reg_1416_pp0_iter10_reg;
        bitcast_ln32_16_reg_1416_pp0_iter12_reg <= bitcast_ln32_16_reg_1416_pp0_iter11_reg;
        bitcast_ln32_16_reg_1416_pp0_iter13_reg <= bitcast_ln32_16_reg_1416_pp0_iter12_reg;
        bitcast_ln32_16_reg_1416_pp0_iter14_reg <= bitcast_ln32_16_reg_1416_pp0_iter13_reg;
        bitcast_ln32_16_reg_1416_pp0_iter15_reg <= bitcast_ln32_16_reg_1416_pp0_iter14_reg;
        bitcast_ln32_2_reg_1374 <= bitcast_ln32_2_fu_860_p1;
        bitcast_ln32_2_reg_1374_pp0_iter10_reg <= bitcast_ln32_2_reg_1374;
        bitcast_ln32_2_reg_1374_pp0_iter11_reg <= bitcast_ln32_2_reg_1374_pp0_iter10_reg;
        bitcast_ln32_2_reg_1374_pp0_iter12_reg <= bitcast_ln32_2_reg_1374_pp0_iter11_reg;
        bitcast_ln32_2_reg_1374_pp0_iter13_reg <= bitcast_ln32_2_reg_1374_pp0_iter12_reg;
        bitcast_ln32_2_reg_1374_pp0_iter14_reg <= bitcast_ln32_2_reg_1374_pp0_iter13_reg;
        bitcast_ln32_2_reg_1374_pp0_iter15_reg <= bitcast_ln32_2_reg_1374_pp0_iter14_reg;
        bitcast_ln32_4_reg_1380 <= bitcast_ln32_4_fu_864_p1;
        bitcast_ln32_4_reg_1380_pp0_iter10_reg <= bitcast_ln32_4_reg_1380;
        bitcast_ln32_4_reg_1380_pp0_iter11_reg <= bitcast_ln32_4_reg_1380_pp0_iter10_reg;
        bitcast_ln32_4_reg_1380_pp0_iter12_reg <= bitcast_ln32_4_reg_1380_pp0_iter11_reg;
        bitcast_ln32_4_reg_1380_pp0_iter13_reg <= bitcast_ln32_4_reg_1380_pp0_iter12_reg;
        bitcast_ln32_4_reg_1380_pp0_iter14_reg <= bitcast_ln32_4_reg_1380_pp0_iter13_reg;
        bitcast_ln32_4_reg_1380_pp0_iter15_reg <= bitcast_ln32_4_reg_1380_pp0_iter14_reg;
        bitcast_ln32_6_reg_1386 <= bitcast_ln32_6_fu_868_p1;
        bitcast_ln32_6_reg_1386_pp0_iter10_reg <= bitcast_ln32_6_reg_1386;
        bitcast_ln32_6_reg_1386_pp0_iter11_reg <= bitcast_ln32_6_reg_1386_pp0_iter10_reg;
        bitcast_ln32_6_reg_1386_pp0_iter12_reg <= bitcast_ln32_6_reg_1386_pp0_iter11_reg;
        bitcast_ln32_6_reg_1386_pp0_iter13_reg <= bitcast_ln32_6_reg_1386_pp0_iter12_reg;
        bitcast_ln32_6_reg_1386_pp0_iter14_reg <= bitcast_ln32_6_reg_1386_pp0_iter13_reg;
        bitcast_ln32_6_reg_1386_pp0_iter15_reg <= bitcast_ln32_6_reg_1386_pp0_iter14_reg;
        bitcast_ln32_8_reg_1392 <= bitcast_ln32_8_fu_872_p1;
        bitcast_ln32_8_reg_1392_pp0_iter10_reg <= bitcast_ln32_8_reg_1392;
        bitcast_ln32_8_reg_1392_pp0_iter11_reg <= bitcast_ln32_8_reg_1392_pp0_iter10_reg;
        bitcast_ln32_8_reg_1392_pp0_iter12_reg <= bitcast_ln32_8_reg_1392_pp0_iter11_reg;
        bitcast_ln32_8_reg_1392_pp0_iter13_reg <= bitcast_ln32_8_reg_1392_pp0_iter12_reg;
        bitcast_ln32_8_reg_1392_pp0_iter14_reg <= bitcast_ln32_8_reg_1392_pp0_iter13_reg;
        bitcast_ln32_8_reg_1392_pp0_iter15_reg <= bitcast_ln32_8_reg_1392_pp0_iter14_reg;
        cBuffer_addr_reg_1248 <= add115_cast_fu_659_p1;
        cBuffer_addr_reg_1248_pp0_iter10_reg <= cBuffer_addr_reg_1248_pp0_iter9_reg;
        cBuffer_addr_reg_1248_pp0_iter11_reg <= cBuffer_addr_reg_1248_pp0_iter10_reg;
        cBuffer_addr_reg_1248_pp0_iter12_reg <= cBuffer_addr_reg_1248_pp0_iter11_reg;
        cBuffer_addr_reg_1248_pp0_iter13_reg <= cBuffer_addr_reg_1248_pp0_iter12_reg;
        cBuffer_addr_reg_1248_pp0_iter14_reg <= cBuffer_addr_reg_1248_pp0_iter13_reg;
        cBuffer_addr_reg_1248_pp0_iter15_reg <= cBuffer_addr_reg_1248_pp0_iter14_reg;
        cBuffer_addr_reg_1248_pp0_iter8_reg <= cBuffer_addr_reg_1248;
        cBuffer_addr_reg_1248_pp0_iter9_reg <= cBuffer_addr_reg_1248_pp0_iter8_reg;
        empty_160_reg_1129 <= empty_160_fu_481_p1;
        empty_160_reg_1129_pp0_iter3_reg <= empty_160_reg_1129;
        empty_160_reg_1129_pp0_iter4_reg <= empty_160_reg_1129_pp0_iter3_reg;
        empty_160_reg_1129_pp0_iter5_reg <= empty_160_reg_1129_pp0_iter4_reg;
        empty_160_reg_1129_pp0_iter6_reg <= empty_160_reg_1129_pp0_iter5_reg;
        inBoundsM_10_reg_1269 <= inBoundsM_10_fu_718_p2;
        inBoundsM_10_reg_1269_pp0_iter10_reg <= inBoundsM_10_reg_1269_pp0_iter9_reg;
        inBoundsM_10_reg_1269_pp0_iter11_reg <= inBoundsM_10_reg_1269_pp0_iter10_reg;
        inBoundsM_10_reg_1269_pp0_iter12_reg <= inBoundsM_10_reg_1269_pp0_iter11_reg;
        inBoundsM_10_reg_1269_pp0_iter13_reg <= inBoundsM_10_reg_1269_pp0_iter12_reg;
        inBoundsM_10_reg_1269_pp0_iter14_reg <= inBoundsM_10_reg_1269_pp0_iter13_reg;
        inBoundsM_10_reg_1269_pp0_iter15_reg <= inBoundsM_10_reg_1269_pp0_iter14_reg;
        inBoundsM_10_reg_1269_pp0_iter8_reg <= inBoundsM_10_reg_1269;
        inBoundsM_10_reg_1269_pp0_iter9_reg <= inBoundsM_10_reg_1269_pp0_iter8_reg;
        inBoundsM_11_reg_1274 <= inBoundsM_11_fu_732_p2;
        inBoundsM_11_reg_1274_pp0_iter10_reg <= inBoundsM_11_reg_1274_pp0_iter9_reg;
        inBoundsM_11_reg_1274_pp0_iter11_reg <= inBoundsM_11_reg_1274_pp0_iter10_reg;
        inBoundsM_11_reg_1274_pp0_iter12_reg <= inBoundsM_11_reg_1274_pp0_iter11_reg;
        inBoundsM_11_reg_1274_pp0_iter13_reg <= inBoundsM_11_reg_1274_pp0_iter12_reg;
        inBoundsM_11_reg_1274_pp0_iter14_reg <= inBoundsM_11_reg_1274_pp0_iter13_reg;
        inBoundsM_11_reg_1274_pp0_iter15_reg <= inBoundsM_11_reg_1274_pp0_iter14_reg;
        inBoundsM_11_reg_1274_pp0_iter8_reg <= inBoundsM_11_reg_1274;
        inBoundsM_11_reg_1274_pp0_iter9_reg <= inBoundsM_11_reg_1274_pp0_iter8_reg;
        inBoundsM_12_reg_1279 <= inBoundsM_12_fu_746_p2;
        inBoundsM_12_reg_1279_pp0_iter10_reg <= inBoundsM_12_reg_1279_pp0_iter9_reg;
        inBoundsM_12_reg_1279_pp0_iter11_reg <= inBoundsM_12_reg_1279_pp0_iter10_reg;
        inBoundsM_12_reg_1279_pp0_iter12_reg <= inBoundsM_12_reg_1279_pp0_iter11_reg;
        inBoundsM_12_reg_1279_pp0_iter13_reg <= inBoundsM_12_reg_1279_pp0_iter12_reg;
        inBoundsM_12_reg_1279_pp0_iter14_reg <= inBoundsM_12_reg_1279_pp0_iter13_reg;
        inBoundsM_12_reg_1279_pp0_iter15_reg <= inBoundsM_12_reg_1279_pp0_iter14_reg;
        inBoundsM_12_reg_1279_pp0_iter8_reg <= inBoundsM_12_reg_1279;
        inBoundsM_12_reg_1279_pp0_iter9_reg <= inBoundsM_12_reg_1279_pp0_iter8_reg;
        inBoundsM_13_reg_1284 <= inBoundsM_13_fu_760_p2;
        inBoundsM_13_reg_1284_pp0_iter10_reg <= inBoundsM_13_reg_1284_pp0_iter9_reg;
        inBoundsM_13_reg_1284_pp0_iter11_reg <= inBoundsM_13_reg_1284_pp0_iter10_reg;
        inBoundsM_13_reg_1284_pp0_iter12_reg <= inBoundsM_13_reg_1284_pp0_iter11_reg;
        inBoundsM_13_reg_1284_pp0_iter13_reg <= inBoundsM_13_reg_1284_pp0_iter12_reg;
        inBoundsM_13_reg_1284_pp0_iter14_reg <= inBoundsM_13_reg_1284_pp0_iter13_reg;
        inBoundsM_13_reg_1284_pp0_iter15_reg <= inBoundsM_13_reg_1284_pp0_iter14_reg;
        inBoundsM_13_reg_1284_pp0_iter8_reg <= inBoundsM_13_reg_1284;
        inBoundsM_13_reg_1284_pp0_iter9_reg <= inBoundsM_13_reg_1284_pp0_iter8_reg;
        inBoundsM_14_reg_1289 <= inBoundsM_14_fu_774_p2;
        inBoundsM_14_reg_1289_pp0_iter10_reg <= inBoundsM_14_reg_1289_pp0_iter9_reg;
        inBoundsM_14_reg_1289_pp0_iter11_reg <= inBoundsM_14_reg_1289_pp0_iter10_reg;
        inBoundsM_14_reg_1289_pp0_iter12_reg <= inBoundsM_14_reg_1289_pp0_iter11_reg;
        inBoundsM_14_reg_1289_pp0_iter13_reg <= inBoundsM_14_reg_1289_pp0_iter12_reg;
        inBoundsM_14_reg_1289_pp0_iter14_reg <= inBoundsM_14_reg_1289_pp0_iter13_reg;
        inBoundsM_14_reg_1289_pp0_iter15_reg <= inBoundsM_14_reg_1289_pp0_iter14_reg;
        inBoundsM_14_reg_1289_pp0_iter8_reg <= inBoundsM_14_reg_1289;
        inBoundsM_14_reg_1289_pp0_iter9_reg <= inBoundsM_14_reg_1289_pp0_iter8_reg;
        inBoundsM_8_reg_1259 <= inBoundsM_8_fu_690_p2;
        inBoundsM_8_reg_1259_pp0_iter10_reg <= inBoundsM_8_reg_1259_pp0_iter9_reg;
        inBoundsM_8_reg_1259_pp0_iter11_reg <= inBoundsM_8_reg_1259_pp0_iter10_reg;
        inBoundsM_8_reg_1259_pp0_iter12_reg <= inBoundsM_8_reg_1259_pp0_iter11_reg;
        inBoundsM_8_reg_1259_pp0_iter13_reg <= inBoundsM_8_reg_1259_pp0_iter12_reg;
        inBoundsM_8_reg_1259_pp0_iter14_reg <= inBoundsM_8_reg_1259_pp0_iter13_reg;
        inBoundsM_8_reg_1259_pp0_iter15_reg <= inBoundsM_8_reg_1259_pp0_iter14_reg;
        inBoundsM_8_reg_1259_pp0_iter8_reg <= inBoundsM_8_reg_1259;
        inBoundsM_8_reg_1259_pp0_iter9_reg <= inBoundsM_8_reg_1259_pp0_iter8_reg;
        inBoundsM_9_reg_1264 <= inBoundsM_9_fu_704_p2;
        inBoundsM_9_reg_1264_pp0_iter10_reg <= inBoundsM_9_reg_1264_pp0_iter9_reg;
        inBoundsM_9_reg_1264_pp0_iter11_reg <= inBoundsM_9_reg_1264_pp0_iter10_reg;
        inBoundsM_9_reg_1264_pp0_iter12_reg <= inBoundsM_9_reg_1264_pp0_iter11_reg;
        inBoundsM_9_reg_1264_pp0_iter13_reg <= inBoundsM_9_reg_1264_pp0_iter12_reg;
        inBoundsM_9_reg_1264_pp0_iter14_reg <= inBoundsM_9_reg_1264_pp0_iter13_reg;
        inBoundsM_9_reg_1264_pp0_iter15_reg <= inBoundsM_9_reg_1264_pp0_iter14_reg;
        inBoundsM_9_reg_1264_pp0_iter8_reg <= inBoundsM_9_reg_1264;
        inBoundsM_9_reg_1264_pp0_iter9_reg <= inBoundsM_9_reg_1264_pp0_iter8_reg;
        inBoundsM_reg_1254 <= inBoundsM_fu_676_p2;
        inBoundsM_reg_1254_pp0_iter10_reg <= inBoundsM_reg_1254_pp0_iter9_reg;
        inBoundsM_reg_1254_pp0_iter11_reg <= inBoundsM_reg_1254_pp0_iter10_reg;
        inBoundsM_reg_1254_pp0_iter12_reg <= inBoundsM_reg_1254_pp0_iter11_reg;
        inBoundsM_reg_1254_pp0_iter13_reg <= inBoundsM_reg_1254_pp0_iter12_reg;
        inBoundsM_reg_1254_pp0_iter14_reg <= inBoundsM_reg_1254_pp0_iter13_reg;
        inBoundsM_reg_1254_pp0_iter15_reg <= inBoundsM_reg_1254_pp0_iter14_reg;
        inBoundsM_reg_1254_pp0_iter8_reg <= inBoundsM_reg_1254;
        inBoundsM_reg_1254_pp0_iter9_reg <= inBoundsM_reg_1254_pp0_iter8_reg;
        inBoundsN_reg_1139 <= inBoundsN_fu_521_p2;
        inBoundsN_reg_1139_pp0_iter10_reg <= inBoundsN_reg_1139_pp0_iter9_reg;
        inBoundsN_reg_1139_pp0_iter11_reg <= inBoundsN_reg_1139_pp0_iter10_reg;
        inBoundsN_reg_1139_pp0_iter12_reg <= inBoundsN_reg_1139_pp0_iter11_reg;
        inBoundsN_reg_1139_pp0_iter13_reg <= inBoundsN_reg_1139_pp0_iter12_reg;
        inBoundsN_reg_1139_pp0_iter14_reg <= inBoundsN_reg_1139_pp0_iter13_reg;
        inBoundsN_reg_1139_pp0_iter15_reg <= inBoundsN_reg_1139_pp0_iter14_reg;
        inBoundsN_reg_1139_pp0_iter4_reg <= inBoundsN_reg_1139;
        inBoundsN_reg_1139_pp0_iter5_reg <= inBoundsN_reg_1139_pp0_iter4_reg;
        inBoundsN_reg_1139_pp0_iter6_reg <= inBoundsN_reg_1139_pp0_iter5_reg;
        inBoundsN_reg_1139_pp0_iter7_reg <= inBoundsN_reg_1139_pp0_iter6_reg;
        inBoundsN_reg_1139_pp0_iter8_reg <= inBoundsN_reg_1139_pp0_iter7_reg;
        inBoundsN_reg_1139_pp0_iter9_reg <= inBoundsN_reg_1139_pp0_iter8_reg;
        res_2_reg_1427 <= grp_fu_293_p2;
        res_30_reg_1447 <= grp_fu_309_p2;
        res_32_reg_1452 <= grp_fu_313_p2;
        res_34_reg_1457 <= grp_fu_317_p2;
        res_35_reg_1294 <= grp_fu_321_p2;
        res_36_reg_1304 <= grp_fu_325_p2;
        res_37_reg_1314 <= grp_fu_329_p2;
        res_38_reg_1324 <= grp_fu_333_p2;
        res_39_reg_1334 <= grp_fu_337_p2;
        res_40_reg_1344 <= grp_fu_341_p2;
        res_41_reg_1354 <= grp_fu_345_p2;
        res_42_reg_1364 <= grp_fu_349_p2;
        res_4_reg_1432 <= grp_fu_297_p2;
        res_6_reg_1437 <= grp_fu_301_p2;
        res_8_reg_1442 <= grp_fu_305_p2;
        res_reg_1422 <= grp_fu_289_p2;
        select_ln64_1_reg_1123 <= select_ln64_1_fu_474_p3;
        select_ln64_reg_1109_pp0_iter2_reg <= select_ln64_reg_1109;
        select_ln64_reg_1109_pp0_iter3_reg <= select_ln64_reg_1109_pp0_iter2_reg;
        select_ln64_reg_1109_pp0_iter4_reg <= select_ln64_reg_1109_pp0_iter3_reg;
        select_ln64_reg_1109_pp0_iter5_reg <= select_ln64_reg_1109_pp0_iter4_reg;
        select_ln64_reg_1109_pp0_iter6_reg <= select_ln64_reg_1109_pp0_iter5_reg;
        tmp_15_reg_1309 <= {{cPrev_1_fu_779_p3[63:32]}};
        tmp_16_reg_1166 <= {{bPipes_8_dout[95:64]}};
        tmp_17_reg_1319 <= {{cPrev_1_fu_779_p3[95:64]}};
        tmp_18_reg_1171 <= {{bPipes_8_dout[127:96]}};
        tmp_19_reg_1329 <= {{cPrev_1_fu_779_p3[127:96]}};
        tmp_20_reg_1176 <= {{bPipes_8_dout[159:128]}};
        tmp_21_reg_1339 <= {{cPrev_1_fu_779_p3[159:128]}};
        tmp_22_reg_1181 <= {{bPipes_8_dout[191:160]}};
        tmp_23_reg_1349 <= {{cPrev_1_fu_779_p3[191:160]}};
        tmp_24_reg_1186 <= {{bPipes_8_dout[223:192]}};
        tmp_25_reg_1359 <= {{cPrev_1_fu_779_p3[223:192]}};
        tmp_26_reg_1191 <= {{bPipes_8_dout[255:224]}};
        tmp_27_reg_1369 <= {{cPrev_1_fu_779_p3[255:224]}};
        tmp_s_reg_1161 <= {{bPipes_8_dout[63:32]}};
        trunc_ln170_2_reg_1299 <= trunc_ln170_2_fu_786_p1;
        trunc_ln170_reg_1156 <= trunc_ln170_fu_526_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce0_local = 1'b1;
    end else begin
        aBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce1_local = 1'b1;
    end else begin
        aBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_reg_1119 == 1'd1) & (1'd1 == and_ln80_1_reg_1115) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_we0_local = 1'b1;
    end else begin
        aBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_1_reg_1115) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_8_blk_n = aPipes_8_empty_n;
    end else begin
        aPipes_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_1_reg_1115) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_8_read_local = 1'b1;
    end else begin
        aPipes_8_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op67_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_9_blk_n = aPipes_9_full_n;
    end else begin
        aPipes_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op67_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_9_write_local = 1'b1;
    end else begin
        aPipes_9_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_371_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_166;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_8_blk_n = bPipes_8_empty_n;
    end else begin
        bPipes_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_8_read_local = 1'b1;
    end else begin
        bPipes_8_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_9_blk_n = bPipes_9_full_n;
    end else begin
        bPipes_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_9_write_local = 1'b1;
    end else begin
        bPipes_9_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce0_local = 1'b1;
    end else begin
        cBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce1_local = 1'b1;
    end else begin
        cBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_we0_local = 1'b1;
    end else begin
        cBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_289_ce = 1'b1;
    end else begin
        grp_fu_289_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_293_ce = 1'b1;
    end else begin
        grp_fu_293_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_297_ce = 1'b1;
    end else begin
        grp_fu_297_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_301_ce = 1'b1;
    end else begin
        grp_fu_301_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_309_ce = 1'b1;
    end else begin
        grp_fu_309_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_313_ce = 1'b1;
    end else begin
        grp_fu_313_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_317_ce = 1'b1;
    end else begin
        grp_fu_317_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_321_ce = 1'b1;
    end else begin
        grp_fu_321_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_325_ce = 1'b1;
    end else begin
        grp_fu_325_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_329_ce = 1'b1;
    end else begin
        grp_fu_329_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_333_ce = 1'b1;
    end else begin
        grp_fu_333_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_341_ce = 1'b1;
    end else begin
        grp_fu_341_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_345_ce = 1'b1;
    end else begin
        grp_fu_345_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_349_ce = 1'b1;
    end else begin
        grp_fu_349_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aBuffer_address0 = add_cast_fu_490_p1;

assign aBuffer_address1 = add91_cast_fu_507_p1;

assign aBuffer_ce0 = aBuffer_ce0_local;

assign aBuffer_ce1 = aBuffer_ce1_local;

assign aBuffer_d0 = aPipes_8_dout;

assign aBuffer_we0 = aBuffer_we0_local;

assign aPipes_8_read = aPipes_8_read_local;

assign aPipes_9_din = aPipes_8_dout;

assign aPipes_9_write = aPipes_9_write_local;

assign add106_cast_fu_517_p1 = add106_fu_512_p2;

assign add106_fu_512_p2 = (mul + zext_ln64_fu_500_p1);

assign add115_cast_fu_659_p1 = add115_fu_653_p2;

assign add115_fu_653_p2 = (mul2_fu_643_p3 + zext_ln67_fu_650_p1);

assign add1_fu_667_p4 = {{{m0}, {empty_fu_664_p1}}, {3'd0}};

assign add91_cast_fu_507_p1 = add91_fu_503_p2;

assign add91_fu_503_p2 = (select_ln64_1_reg_1123 + cond90);

assign add_cast_fu_490_p1 = add_fu_485_p2;

assign add_fu_485_p2 = (select_ln64_1_fu_474_p3 + cond);

assign add_ln64_1_fu_377_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 11'd1);

assign add_ln64_fu_468_p2 = (n1_3_fu_162 + 5'd1);

assign add_ln67_fu_454_p2 = (select_ln64_fu_397_p3 + 7'd1);

assign and_ln80_1_fu_442_p2 = (icmp_ln83_fu_431_p2 & and_ln80_fu_437_p2);

assign and_ln80_fu_437_p2 = (icmp_ln82_fu_415_p2 & brmerge282);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op67_write_state3 == 1'b1) & (1'b0 == aPipes_9_full_n)) | ((1'd1 == and_ln80_1_reg_1115) & (1'b0 == aPipes_8_empty_n)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((bPipes_9_full_n == 1'b0) | (bPipes_8_empty_n == 1'b0));
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_69 = (ap_predicate_op69_store_state3 == 1'b1);
end

assign ap_enable_operation_79 = (1'b1 == 1'b1);

assign ap_enable_operation_80 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op67_write_state3 = ((icmp_ln85_reg_1119 == 1'd0) & (1'd1 == and_ln80_1_reg_1115));
end

always @ (*) begin
    ap_predicate_op69_store_state3 = ((icmp_ln85_reg_1119 == 1'd1) & (1'd1 == and_ln80_1_reg_1115));
end

assign ap_ready = ap_ready_sig;

assign bPipes_8_read = bPipes_8_read_local;

assign bPipes_9_din = bPipes_8_dout;

assign bPipes_9_write = bPipes_9_write_local;

assign bitcast_ln32_10_fu_876_p1 = tmp_21_reg_1339;

assign bitcast_ln32_12_fu_880_p1 = tmp_23_reg_1349;

assign bitcast_ln32_14_fu_884_p1 = tmp_25_reg_1359;

assign bitcast_ln32_16_fu_888_p1 = tmp_27_reg_1369;

assign bitcast_ln32_2_fu_860_p1 = trunc_ln170_2_reg_1299;

assign bitcast_ln32_4_fu_864_p1 = tmp_15_reg_1309;

assign bitcast_ln32_6_fu_868_p1 = tmp_17_reg_1319;

assign bitcast_ln32_8_fu_872_p1 = tmp_19_reg_1329;

assign bitcast_ln32_fu_600_p1 = aVal_reg_1151;

assign bitcast_ln36_1_fu_916_p1 = select_ln296_1_fu_910_p3;

assign bitcast_ln36_2_fu_930_p1 = select_ln296_2_fu_924_p3;

assign bitcast_ln36_3_fu_944_p1 = select_ln296_3_fu_938_p3;

assign bitcast_ln36_4_fu_958_p1 = select_ln296_4_fu_952_p3;

assign bitcast_ln36_5_fu_972_p1 = select_ln296_5_fu_966_p3;

assign bitcast_ln36_6_fu_986_p1 = select_ln296_6_fu_980_p3;

assign bitcast_ln36_7_fu_1000_p1 = select_ln296_7_fu_994_p3;

assign bitcast_ln36_fu_902_p1 = select_ln296_fu_896_p3;

assign cBuffer_address0 = cBuffer_addr_reg_1248_pp0_iter15_reg;

assign cBuffer_address1 = add115_cast_fu_659_p1;

assign cBuffer_ce0 = cBuffer_ce0_local;

assign cBuffer_ce1 = cBuffer_ce1_local;

assign cBuffer_d0 = tmp_28_fu_1004_p9;

assign cBuffer_we0 = cBuffer_we0_local;

assign cPrev_1_fu_779_p3 = ((cmp111[0:0] == 1'b1) ? 256'd0 : cBuffer_q1);

assign empty_160_fu_481_p1 = select_ln64_1_fu_474_p3[3:0];

assign empty_fu_664_p1 = select_ln64_reg_1109_pp0_iter6_reg[5:0];

assign grp_fu_289_p0 = trunc_ln170_2_reg_1299;

assign grp_fu_293_p0 = tmp_15_reg_1309;

assign grp_fu_297_p0 = tmp_17_reg_1319;

assign grp_fu_301_p0 = tmp_19_reg_1329;

assign grp_fu_305_p0 = tmp_21_reg_1339;

assign grp_fu_309_p0 = tmp_23_reg_1349;

assign grp_fu_313_p0 = tmp_25_reg_1359;

assign grp_fu_317_p0 = tmp_27_reg_1369;

assign grp_fu_321_p1 = trunc_ln170_reg_1156;

assign grp_fu_325_p1 = tmp_s_reg_1161;

assign grp_fu_329_p1 = tmp_16_reg_1166;

assign grp_fu_333_p1 = tmp_18_reg_1171;

assign grp_fu_337_p1 = tmp_20_reg_1176;

assign grp_fu_341_p1 = tmp_22_reg_1181;

assign grp_fu_345_p1 = tmp_24_reg_1186;

assign grp_fu_349_p1 = tmp_26_reg_1191;

assign icmp_ln64_fu_371_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_391_p2 = ((m1_fu_158 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_415_p2 = ((tmp_fu_405_p4 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_431_p2 = ((tmp_3_fu_421_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_448_p2 = ((select_ln64_fu_397_p3 == 7'd8) ? 1'b1 : 1'b0);

assign inBoundsM_10_fu_718_p2 = ((or_ln125_2_fu_709_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_11_fu_732_p2 = ((or_ln125_3_fu_723_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_12_fu_746_p2 = ((or_ln125_4_fu_737_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_13_fu_760_p2 = ((or_ln125_5_fu_751_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_14_fu_774_p2 = ((or_ln125_6_fu_765_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_8_fu_690_p2 = ((or_ln_fu_681_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_9_fu_704_p2 = ((or_ln125_1_fu_695_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_fu_676_p2 = ((add1_fu_667_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsN_fu_521_p2 = ((add106_cast_fu_517_p1 < size_n) ? 1'b1 : 1'b0);

assign inBounds_10_fu_934_p2 = (inBoundsN_reg_1139_pp0_iter15_reg & inBoundsM_10_reg_1269_pp0_iter15_reg);

assign inBounds_11_fu_948_p2 = (inBoundsN_reg_1139_pp0_iter15_reg & inBoundsM_11_reg_1274_pp0_iter15_reg);

assign inBounds_12_fu_962_p2 = (inBoundsN_reg_1139_pp0_iter15_reg & inBoundsM_12_reg_1279_pp0_iter15_reg);

assign inBounds_13_fu_976_p2 = (inBoundsN_reg_1139_pp0_iter15_reg & inBoundsM_13_reg_1284_pp0_iter15_reg);

assign inBounds_14_fu_990_p2 = (inBoundsN_reg_1139_pp0_iter15_reg & inBoundsM_14_reg_1289_pp0_iter15_reg);

assign inBounds_8_fu_906_p2 = (inBoundsN_reg_1139_pp0_iter15_reg & inBoundsM_8_reg_1259_pp0_iter15_reg);

assign inBounds_9_fu_920_p2 = (inBoundsN_reg_1139_pp0_iter15_reg & inBoundsM_9_reg_1264_pp0_iter15_reg);

assign inBounds_fu_892_p2 = (inBoundsN_reg_1139_pp0_iter15_reg & inBoundsM_reg_1254_pp0_iter15_reg);

assign mul2_fu_643_p3 = {{empty_160_reg_1129_pp0_iter6_reg}, {6'd0}};

assign or_ln125_1_fu_695_p4 = {{{m0}, {empty_fu_664_p1}}, {3'd2}};

assign or_ln125_2_fu_709_p4 = {{{m0}, {empty_fu_664_p1}}, {3'd3}};

assign or_ln125_3_fu_723_p4 = {{{m0}, {empty_fu_664_p1}}, {3'd4}};

assign or_ln125_4_fu_737_p4 = {{{m0}, {empty_fu_664_p1}}, {3'd5}};

assign or_ln125_5_fu_751_p4 = {{{m0}, {empty_fu_664_p1}}, {3'd6}};

assign or_ln125_6_fu_765_p4 = {{{m0}, {empty_fu_664_p1}}, {3'd7}};

assign or_ln_fu_681_p4 = {{{m0}, {empty_fu_664_p1}}, {3'd1}};

assign select_ln296_1_fu_910_p3 = ((inBounds_8_fu_906_p2[0:0] == 1'b1) ? res_2_reg_1427 : bitcast_ln32_4_reg_1380_pp0_iter15_reg);

assign select_ln296_2_fu_924_p3 = ((inBounds_9_fu_920_p2[0:0] == 1'b1) ? res_4_reg_1432 : bitcast_ln32_6_reg_1386_pp0_iter15_reg);

assign select_ln296_3_fu_938_p3 = ((inBounds_10_fu_934_p2[0:0] == 1'b1) ? res_6_reg_1437 : bitcast_ln32_8_reg_1392_pp0_iter15_reg);

assign select_ln296_4_fu_952_p3 = ((inBounds_11_fu_948_p2[0:0] == 1'b1) ? res_8_reg_1442 : bitcast_ln32_10_reg_1398_pp0_iter15_reg);

assign select_ln296_5_fu_966_p3 = ((inBounds_12_fu_962_p2[0:0] == 1'b1) ? res_30_reg_1447 : bitcast_ln32_12_reg_1404_pp0_iter15_reg);

assign select_ln296_6_fu_980_p3 = ((inBounds_13_fu_976_p2[0:0] == 1'b1) ? res_32_reg_1452 : bitcast_ln32_14_reg_1410_pp0_iter15_reg);

assign select_ln296_7_fu_994_p3 = ((inBounds_14_fu_990_p2[0:0] == 1'b1) ? res_34_reg_1457 : bitcast_ln32_16_reg_1416_pp0_iter15_reg);

assign select_ln296_fu_896_p3 = ((inBounds_fu_892_p2[0:0] == 1'b1) ? res_reg_1422 : bitcast_ln32_2_reg_1374_pp0_iter15_reg);

assign select_ln64_1_fu_474_p3 = ((icmp_ln67_reg_1104[0:0] == 1'b1) ? add_ln64_fu_468_p2 : n1_3_fu_162);

assign select_ln64_fu_397_p3 = ((icmp_ln67_fu_391_p2[0:0] == 1'b1) ? 7'd0 : m1_fu_158);

assign tmp_28_fu_1004_p9 = {{{{{{{{bitcast_ln36_7_fu_1000_p1}, {bitcast_ln36_6_fu_986_p1}}, {bitcast_ln36_5_fu_972_p1}}, {bitcast_ln36_4_fu_958_p1}}, {bitcast_ln36_3_fu_944_p1}}, {bitcast_ln36_2_fu_930_p1}}, {bitcast_ln36_1_fu_916_p1}}, {bitcast_ln36_fu_902_p1}};

assign tmp_3_fu_421_p4 = {{select_ln64_fu_397_p3[6:5]}};

assign tmp_fu_405_p4 = {{select_ln64_fu_397_p3[6:3]}};

assign trunc_ln170_2_fu_786_p1 = cPrev_1_fu_779_p3[31:0];

assign trunc_ln170_fu_526_p1 = bPipes_8_dout[31:0];

assign zext_ln64_fu_500_p1 = select_ln64_1_reg_1123;

assign zext_ln67_fu_650_p1 = select_ln64_reg_1109_pp0_iter6_reg;

endmodule //MatrixMultiplicationKernel_ProcessingElement_9_Pipeline_Pipeline_N_Pipeline_M
