// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        aPipes_0_dout,
        aPipes_0_num_data_valid,
        aPipes_0_fifo_cap,
        aPipes_0_empty_n,
        aPipes_0_read,
        aPipes_1_din,
        aPipes_1_num_data_valid,
        aPipes_1_fifo_cap,
        aPipes_1_full_n,
        aPipes_1_write,
        bPipes_0_dout,
        bPipes_0_num_data_valid,
        bPipes_0_fifo_cap,
        bPipes_0_empty_n,
        bPipes_0_read,
        bPipes_1_din,
        bPipes_1_num_data_valid,
        bPipes_1_fifo_cap,
        bPipes_1_full_n,
        bPipes_1_write,
        m0,
        cBuffer_address0,
        cBuffer_ce0,
        cBuffer_we0,
        cBuffer_d0,
        cBuffer_address1,
        cBuffer_ce1,
        cBuffer_q1,
        cmp111,
        size_m,
        cond90,
        aBuffer_address0,
        aBuffer_ce0,
        aBuffer_we0,
        aBuffer_d0,
        aBuffer_address1,
        aBuffer_ce1,
        aBuffer_q1,
        mul,
        cond,
        size_n,
        brmerge282
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] aPipes_0_dout;
input  [2:0] aPipes_0_num_data_valid;
input  [2:0] aPipes_0_fifo_cap;
input   aPipes_0_empty_n;
output   aPipes_0_read;
output  [31:0] aPipes_1_din;
input  [2:0] aPipes_1_num_data_valid;
input  [2:0] aPipes_1_fifo_cap;
input   aPipes_1_full_n;
output   aPipes_1_write;
input  [255:0] bPipes_0_dout;
input  [2:0] bPipes_0_num_data_valid;
input  [2:0] bPipes_0_fifo_cap;
input   bPipes_0_empty_n;
output   bPipes_0_read;
output  [255:0] bPipes_1_din;
input  [2:0] bPipes_1_num_data_valid;
input  [2:0] bPipes_1_fifo_cap;
input   bPipes_1_full_n;
output   bPipes_1_write;
input  [22:0] m0;
output  [9:0] cBuffer_address0;
output   cBuffer_ce0;
output   cBuffer_we0;
output  [255:0] cBuffer_d0;
output  [9:0] cBuffer_address1;
output   cBuffer_ce1;
input  [255:0] cBuffer_q1;
input  [0:0] cmp111;
input  [31:0] size_m;
input  [4:0] cond90;
output  [4:0] aBuffer_address0;
output   aBuffer_ce0;
output   aBuffer_we0;
output  [31:0] aBuffer_d0;
output  [4:0] aBuffer_address1;
output   aBuffer_ce1;
input  [31:0] aBuffer_q1;
input  [26:0] mul;
input  [4:0] cond;
input  [31:0] size_n;
input  [0:0] brmerge282;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
reg   [0:0] and_ln80_reg_1089;
reg   [0:0] first_iter_1_reg_1085;
reg    ap_predicate_op64_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_363_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bPipes_0_blk_n;
wire    ap_block_pp0_stage0;
reg    bPipes_1_blk_n;
reg    aPipes_0_blk_n;
reg    aPipes_1_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_383_p2;
reg   [0:0] icmp_ln67_reg_1074;
wire   [6:0] select_ln64_fu_389_p3;
reg   [6:0] select_ln64_reg_1079;
reg   [6:0] select_ln64_reg_1079_pp0_iter2_reg;
reg   [6:0] select_ln64_reg_1079_pp0_iter3_reg;
reg   [6:0] select_ln64_reg_1079_pp0_iter4_reg;
reg   [6:0] select_ln64_reg_1079_pp0_iter5_reg;
reg   [6:0] select_ln64_reg_1079_pp0_iter6_reg;
wire   [0:0] first_iter_1_fu_397_p2;
wire   [0:0] and_ln80_fu_419_p2;
wire   [4:0] select_ln64_20_fu_444_p3;
reg   [4:0] select_ln64_20_reg_1093;
wire   [3:0] empty_260_fu_451_p1;
reg   [3:0] empty_260_reg_1099;
reg   [3:0] empty_260_reg_1099_pp0_iter3_reg;
reg   [3:0] empty_260_reg_1099_pp0_iter4_reg;
reg   [3:0] empty_260_reg_1099_pp0_iter5_reg;
reg   [3:0] empty_260_reg_1099_pp0_iter6_reg;
wire   [0:0] inBoundsN_fu_491_p2;
reg   [0:0] inBoundsN_reg_1109;
reg   [0:0] inBoundsN_reg_1109_pp0_iter4_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter5_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter6_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter7_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter8_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter9_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter10_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter11_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter12_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter13_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter14_reg;
reg   [0:0] inBoundsN_reg_1109_pp0_iter15_reg;
reg   [31:0] aVal_reg_1121;
wire   [31:0] trunc_ln170_fu_496_p1;
reg   [31:0] trunc_ln170_reg_1126;
reg   [31:0] tmp_s_reg_1131;
reg   [31:0] tmp_296_reg_1136;
reg   [31:0] tmp_298_reg_1141;
reg   [31:0] tmp_300_reg_1146;
reg   [31:0] tmp_302_reg_1151;
reg   [31:0] tmp_304_reg_1156;
reg   [31:0] tmp_306_reg_1161;
wire   [31:0] bitcast_ln32_fu_570_p1;
reg   [9:0] cBuffer_addr_reg_1218;
reg   [9:0] cBuffer_addr_reg_1218_pp0_iter8_reg;
reg   [9:0] cBuffer_addr_reg_1218_pp0_iter9_reg;
reg   [9:0] cBuffer_addr_reg_1218_pp0_iter10_reg;
reg   [9:0] cBuffer_addr_reg_1218_pp0_iter11_reg;
reg   [9:0] cBuffer_addr_reg_1218_pp0_iter12_reg;
reg   [9:0] cBuffer_addr_reg_1218_pp0_iter13_reg;
reg   [9:0] cBuffer_addr_reg_1218_pp0_iter14_reg;
reg   [9:0] cBuffer_addr_reg_1218_pp0_iter15_reg;
wire   [0:0] inBoundsM_fu_646_p2;
reg   [0:0] inBoundsM_reg_1224;
reg   [0:0] inBoundsM_reg_1224_pp0_iter8_reg;
reg   [0:0] inBoundsM_reg_1224_pp0_iter9_reg;
reg   [0:0] inBoundsM_reg_1224_pp0_iter10_reg;
reg   [0:0] inBoundsM_reg_1224_pp0_iter11_reg;
reg   [0:0] inBoundsM_reg_1224_pp0_iter12_reg;
reg   [0:0] inBoundsM_reg_1224_pp0_iter13_reg;
reg   [0:0] inBoundsM_reg_1224_pp0_iter14_reg;
reg   [0:0] inBoundsM_reg_1224_pp0_iter15_reg;
wire   [0:0] inBoundsM_148_fu_660_p2;
reg   [0:0] inBoundsM_148_reg_1229;
reg   [0:0] inBoundsM_148_reg_1229_pp0_iter8_reg;
reg   [0:0] inBoundsM_148_reg_1229_pp0_iter9_reg;
reg   [0:0] inBoundsM_148_reg_1229_pp0_iter10_reg;
reg   [0:0] inBoundsM_148_reg_1229_pp0_iter11_reg;
reg   [0:0] inBoundsM_148_reg_1229_pp0_iter12_reg;
reg   [0:0] inBoundsM_148_reg_1229_pp0_iter13_reg;
reg   [0:0] inBoundsM_148_reg_1229_pp0_iter14_reg;
reg   [0:0] inBoundsM_148_reg_1229_pp0_iter15_reg;
wire   [0:0] inBoundsM_149_fu_674_p2;
reg   [0:0] inBoundsM_149_reg_1234;
reg   [0:0] inBoundsM_149_reg_1234_pp0_iter8_reg;
reg   [0:0] inBoundsM_149_reg_1234_pp0_iter9_reg;
reg   [0:0] inBoundsM_149_reg_1234_pp0_iter10_reg;
reg   [0:0] inBoundsM_149_reg_1234_pp0_iter11_reg;
reg   [0:0] inBoundsM_149_reg_1234_pp0_iter12_reg;
reg   [0:0] inBoundsM_149_reg_1234_pp0_iter13_reg;
reg   [0:0] inBoundsM_149_reg_1234_pp0_iter14_reg;
reg   [0:0] inBoundsM_149_reg_1234_pp0_iter15_reg;
wire   [0:0] inBoundsM_150_fu_688_p2;
reg   [0:0] inBoundsM_150_reg_1239;
reg   [0:0] inBoundsM_150_reg_1239_pp0_iter8_reg;
reg   [0:0] inBoundsM_150_reg_1239_pp0_iter9_reg;
reg   [0:0] inBoundsM_150_reg_1239_pp0_iter10_reg;
reg   [0:0] inBoundsM_150_reg_1239_pp0_iter11_reg;
reg   [0:0] inBoundsM_150_reg_1239_pp0_iter12_reg;
reg   [0:0] inBoundsM_150_reg_1239_pp0_iter13_reg;
reg   [0:0] inBoundsM_150_reg_1239_pp0_iter14_reg;
reg   [0:0] inBoundsM_150_reg_1239_pp0_iter15_reg;
wire   [0:0] inBoundsM_151_fu_702_p2;
reg   [0:0] inBoundsM_151_reg_1244;
reg   [0:0] inBoundsM_151_reg_1244_pp0_iter8_reg;
reg   [0:0] inBoundsM_151_reg_1244_pp0_iter9_reg;
reg   [0:0] inBoundsM_151_reg_1244_pp0_iter10_reg;
reg   [0:0] inBoundsM_151_reg_1244_pp0_iter11_reg;
reg   [0:0] inBoundsM_151_reg_1244_pp0_iter12_reg;
reg   [0:0] inBoundsM_151_reg_1244_pp0_iter13_reg;
reg   [0:0] inBoundsM_151_reg_1244_pp0_iter14_reg;
reg   [0:0] inBoundsM_151_reg_1244_pp0_iter15_reg;
wire   [0:0] inBoundsM_152_fu_716_p2;
reg   [0:0] inBoundsM_152_reg_1249;
reg   [0:0] inBoundsM_152_reg_1249_pp0_iter8_reg;
reg   [0:0] inBoundsM_152_reg_1249_pp0_iter9_reg;
reg   [0:0] inBoundsM_152_reg_1249_pp0_iter10_reg;
reg   [0:0] inBoundsM_152_reg_1249_pp0_iter11_reg;
reg   [0:0] inBoundsM_152_reg_1249_pp0_iter12_reg;
reg   [0:0] inBoundsM_152_reg_1249_pp0_iter13_reg;
reg   [0:0] inBoundsM_152_reg_1249_pp0_iter14_reg;
reg   [0:0] inBoundsM_152_reg_1249_pp0_iter15_reg;
wire   [0:0] inBoundsM_153_fu_730_p2;
reg   [0:0] inBoundsM_153_reg_1254;
reg   [0:0] inBoundsM_153_reg_1254_pp0_iter8_reg;
reg   [0:0] inBoundsM_153_reg_1254_pp0_iter9_reg;
reg   [0:0] inBoundsM_153_reg_1254_pp0_iter10_reg;
reg   [0:0] inBoundsM_153_reg_1254_pp0_iter11_reg;
reg   [0:0] inBoundsM_153_reg_1254_pp0_iter12_reg;
reg   [0:0] inBoundsM_153_reg_1254_pp0_iter13_reg;
reg   [0:0] inBoundsM_153_reg_1254_pp0_iter14_reg;
reg   [0:0] inBoundsM_153_reg_1254_pp0_iter15_reg;
wire   [0:0] inBoundsM_154_fu_744_p2;
reg   [0:0] inBoundsM_154_reg_1259;
reg   [0:0] inBoundsM_154_reg_1259_pp0_iter8_reg;
reg   [0:0] inBoundsM_154_reg_1259_pp0_iter9_reg;
reg   [0:0] inBoundsM_154_reg_1259_pp0_iter10_reg;
reg   [0:0] inBoundsM_154_reg_1259_pp0_iter11_reg;
reg   [0:0] inBoundsM_154_reg_1259_pp0_iter12_reg;
reg   [0:0] inBoundsM_154_reg_1259_pp0_iter13_reg;
reg   [0:0] inBoundsM_154_reg_1259_pp0_iter14_reg;
reg   [0:0] inBoundsM_154_reg_1259_pp0_iter15_reg;
wire   [31:0] grp_fu_313_p2;
reg   [31:0] res_499_reg_1264;
wire   [31:0] trunc_ln170_22_fu_756_p1;
reg   [31:0] trunc_ln170_22_reg_1269;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] res_500_reg_1274;
reg   [31:0] tmp_295_reg_1279;
wire   [31:0] grp_fu_321_p2;
reg   [31:0] res_501_reg_1284;
reg   [31:0] tmp_297_reg_1289;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] res_502_reg_1294;
reg   [31:0] tmp_299_reg_1299;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] res_503_reg_1304;
reg   [31:0] tmp_301_reg_1309;
wire   [31:0] grp_fu_333_p2;
reg   [31:0] res_504_reg_1314;
reg   [31:0] tmp_303_reg_1319;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] res_505_reg_1324;
reg   [31:0] tmp_305_reg_1329;
wire   [31:0] grp_fu_341_p2;
reg   [31:0] res_506_reg_1334;
reg   [31:0] tmp_307_reg_1339;
wire   [31:0] bitcast_ln32_306_fu_830_p1;
reg   [31:0] bitcast_ln32_306_reg_1344;
reg   [31:0] bitcast_ln32_306_reg_1344_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_306_reg_1344_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_306_reg_1344_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_306_reg_1344_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_306_reg_1344_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_306_reg_1344_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_308_fu_834_p1;
reg   [31:0] bitcast_ln32_308_reg_1350;
reg   [31:0] bitcast_ln32_308_reg_1350_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_308_reg_1350_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_308_reg_1350_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_308_reg_1350_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_308_reg_1350_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_308_reg_1350_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_310_fu_838_p1;
reg   [31:0] bitcast_ln32_310_reg_1356;
reg   [31:0] bitcast_ln32_310_reg_1356_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_310_reg_1356_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_310_reg_1356_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_310_reg_1356_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_310_reg_1356_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_310_reg_1356_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_312_fu_842_p1;
reg   [31:0] bitcast_ln32_312_reg_1362;
reg   [31:0] bitcast_ln32_312_reg_1362_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_312_reg_1362_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_312_reg_1362_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_312_reg_1362_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_312_reg_1362_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_312_reg_1362_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_314_fu_846_p1;
reg   [31:0] bitcast_ln32_314_reg_1368;
reg   [31:0] bitcast_ln32_314_reg_1368_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_314_reg_1368_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_314_reg_1368_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_314_reg_1368_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_314_reg_1368_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_314_reg_1368_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_316_fu_850_p1;
reg   [31:0] bitcast_ln32_316_reg_1374;
reg   [31:0] bitcast_ln32_316_reg_1374_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_316_reg_1374_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_316_reg_1374_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_316_reg_1374_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_316_reg_1374_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_316_reg_1374_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_318_fu_854_p1;
reg   [31:0] bitcast_ln32_318_reg_1380;
reg   [31:0] bitcast_ln32_318_reg_1380_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_318_reg_1380_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_318_reg_1380_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_318_reg_1380_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_318_reg_1380_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_318_reg_1380_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_320_fu_858_p1;
reg   [31:0] bitcast_ln32_320_reg_1386;
reg   [31:0] bitcast_ln32_320_reg_1386_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_320_reg_1386_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_320_reg_1386_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_320_reg_1386_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_320_reg_1386_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_320_reg_1386_pp0_iter15_reg;
wire   [31:0] grp_fu_281_p2;
reg   [31:0] res_reg_1392;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] res_486_reg_1397;
wire   [31:0] grp_fu_289_p2;
reg   [31:0] res_488_reg_1402;
wire   [31:0] grp_fu_293_p2;
reg   [31:0] res_490_reg_1407;
wire   [31:0] grp_fu_297_p2;
reg   [31:0] res_492_reg_1412;
wire   [31:0] grp_fu_301_p2;
reg   [31:0] res_494_reg_1417;
wire   [31:0] grp_fu_305_p2;
reg   [31:0] res_496_reg_1422;
wire   [31:0] grp_fu_309_p2;
reg   [31:0] res_498_reg_1427;
wire   [63:0] add_cast_fu_460_p1;
wire   [63:0] add91_cast_fu_477_p1;
wire   [63:0] add115_cast_fu_629_p1;
reg   [6:0] m1_fu_150;
wire   [6:0] add_ln67_fu_424_p2;
wire    ap_loop_init;
reg   [4:0] n1_fu_154;
reg   [10:0] indvar_flatten6_fu_158;
wire   [10:0] add_ln64_fu_369_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten6_load;
reg    aPipes_0_read_local;
reg    ap_block_pp0_stage0_01001;
reg    aPipes_1_write_local;
reg    bPipes_0_read_local;
reg    bPipes_1_write_local;
reg    aBuffer_we0_local;
reg    aBuffer_ce0_local;
reg    aBuffer_ce1_local;
reg    cBuffer_ce1_local;
reg    cBuffer_we0_local;
wire   [255:0] tmp_308_fu_974_p9;
reg    cBuffer_ce0_local;
wire   [31:0] grp_fu_281_p0;
wire   [31:0] grp_fu_285_p0;
wire   [31:0] grp_fu_289_p0;
wire   [31:0] grp_fu_293_p0;
wire   [31:0] grp_fu_297_p0;
wire   [31:0] grp_fu_301_p0;
wire   [31:0] grp_fu_305_p0;
wire   [31:0] grp_fu_309_p0;
wire   [31:0] grp_fu_313_p1;
wire   [31:0] grp_fu_317_p1;
wire   [31:0] grp_fu_321_p1;
wire   [31:0] grp_fu_325_p1;
wire   [31:0] grp_fu_329_p1;
wire   [31:0] grp_fu_333_p1;
wire   [31:0] grp_fu_337_p1;
wire   [31:0] grp_fu_341_p1;
wire   [1:0] tmp_fu_403_p4;
wire   [0:0] icmp_ln83_fu_413_p2;
wire   [4:0] add_ln64_20_fu_438_p2;
wire   [4:0] add_fu_455_p2;
wire   [4:0] add91_fu_473_p2;
wire   [26:0] zext_ln64_fu_470_p1;
wire   [26:0] add106_fu_482_p2;
wire   [31:0] add106_cast_fu_487_p1;
wire   [9:0] mul14_fu_613_p3;
wire   [9:0] zext_ln67_fu_620_p1;
wire   [9:0] add115_fu_623_p2;
wire   [5:0] empty_fu_634_p1;
wire   [31:0] add4_fu_637_p4;
wire   [31:0] or_ln_fu_651_p4;
wire   [31:0] or_ln125_s_fu_665_p4;
wire   [31:0] or_ln125_88_fu_679_p4;
wire   [31:0] or_ln125_89_fu_693_p4;
wire   [31:0] or_ln125_90_fu_707_p4;
wire   [31:0] or_ln125_91_fu_721_p4;
wire   [31:0] or_ln125_92_fu_735_p4;
wire   [255:0] cPrev_2_fu_749_p3;
wire   [0:0] inBounds_fu_862_p2;
wire   [31:0] select_ln296_fu_866_p3;
wire   [0:0] inBounds_148_fu_876_p2;
wire   [31:0] select_ln296_134_fu_880_p3;
wire   [0:0] inBounds_149_fu_890_p2;
wire   [31:0] select_ln296_135_fu_894_p3;
wire   [0:0] inBounds_150_fu_904_p2;
wire   [31:0] select_ln296_136_fu_908_p3;
wire   [0:0] inBounds_151_fu_918_p2;
wire   [31:0] select_ln296_137_fu_922_p3;
wire   [0:0] inBounds_152_fu_932_p2;
wire   [31:0] select_ln296_138_fu_936_p3;
wire   [0:0] inBounds_153_fu_946_p2;
wire   [31:0] select_ln296_139_fu_950_p3;
wire   [0:0] inBounds_154_fu_960_p2;
wire   [31:0] select_ln296_140_fu_964_p3;
wire   [31:0] bitcast_ln36_140_fu_970_p1;
wire   [31:0] bitcast_ln36_139_fu_956_p1;
wire   [31:0] bitcast_ln36_138_fu_942_p1;
wire   [31:0] bitcast_ln36_137_fu_928_p1;
wire   [31:0] bitcast_ln36_136_fu_914_p1;
wire   [31:0] bitcast_ln36_135_fu_900_p1;
wire   [31:0] bitcast_ln36_134_fu_886_p1;
wire   [31:0] bitcast_ln36_fu_872_p1;
reg    grp_fu_281_ce;
reg    grp_fu_285_ce;
reg    grp_fu_289_ce;
reg    grp_fu_293_ce;
reg    grp_fu_297_ce;
reg    grp_fu_301_ce;
reg    grp_fu_305_ce;
reg    grp_fu_309_ce;
reg    grp_fu_313_ce;
reg    grp_fu_317_ce;
reg    grp_fu_321_ce;
reg    grp_fu_325_ce;
reg    grp_fu_329_ce;
reg    grp_fu_333_ce;
reg    grp_fu_337_ce;
reg    grp_fu_341_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op66_store_state3;
reg    ap_enable_operation_66;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_operation_76;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_operation_77;
reg    ap_enable_state5_pp0_iter4_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 m1_fu_150 = 7'd0;
#0 n1_fu_154 = 5'd0;
#0 indvar_flatten6_fu_158 = 11'd0;
#0 ap_done_reg = 1'b0;
end

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U151(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_281_p0),
    .din1(res_499_reg_1264),
    .ce(grp_fu_281_ce),
    .dout(grp_fu_281_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U152(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(res_500_reg_1274),
    .ce(grp_fu_285_ce),
    .dout(grp_fu_285_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_289_p0),
    .din1(res_501_reg_1284),
    .ce(grp_fu_289_ce),
    .dout(grp_fu_289_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_293_p0),
    .din1(res_502_reg_1294),
    .ce(grp_fu_293_ce),
    .dout(grp_fu_293_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(res_503_reg_1304),
    .ce(grp_fu_297_ce),
    .dout(grp_fu_297_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_301_p0),
    .din1(res_504_reg_1314),
    .ce(grp_fu_301_ce),
    .dout(grp_fu_301_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_305_p0),
    .din1(res_505_reg_1324),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_309_p0),
    .din1(res_506_reg_1334),
    .ce(grp_fu_309_ce),
    .dout(grp_fu_309_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_570_p1),
    .din1(grp_fu_313_p1),
    .ce(grp_fu_313_ce),
    .dout(grp_fu_313_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_570_p1),
    .din1(grp_fu_317_p1),
    .ce(grp_fu_317_ce),
    .dout(grp_fu_317_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U161(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_570_p1),
    .din1(grp_fu_321_p1),
    .ce(grp_fu_321_ce),
    .dout(grp_fu_321_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U162(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_570_p1),
    .din1(grp_fu_325_p1),
    .ce(grp_fu_325_ce),
    .dout(grp_fu_325_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U163(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_570_p1),
    .din1(grp_fu_329_p1),
    .ce(grp_fu_329_ce),
    .dout(grp_fu_329_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U164(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_570_p1),
    .din1(grp_fu_333_p1),
    .ce(grp_fu_333_ce),
    .dout(grp_fu_333_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U165(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_570_p1),
    .din1(grp_fu_337_p1),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U166(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_570_p1),
    .din1(grp_fu_341_p1),
    .ce(grp_fu_341_ce),
    .dout(grp_fu_341_p2)
);

MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_363_p2 == 1'd0))) begin
            indvar_flatten6_fu_158 <= add_ln64_fu_369_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_158 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            m1_fu_150 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            m1_fu_150 <= add_ln67_fu_424_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            n1_fu_154 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            n1_fu_154 <= select_ln64_20_fu_444_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aVal_reg_1121 <= aBuffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln80_reg_1089 <= and_ln80_fu_419_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        first_iter_1_reg_1085 <= first_iter_1_fu_397_p2;
        icmp_ln67_reg_1074 <= icmp_ln67_fu_383_p2;
        select_ln64_reg_1079 <= select_ln64_fu_389_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        bitcast_ln32_306_reg_1344 <= bitcast_ln32_306_fu_830_p1;
        bitcast_ln32_306_reg_1344_pp0_iter10_reg <= bitcast_ln32_306_reg_1344;
        bitcast_ln32_306_reg_1344_pp0_iter11_reg <= bitcast_ln32_306_reg_1344_pp0_iter10_reg;
        bitcast_ln32_306_reg_1344_pp0_iter12_reg <= bitcast_ln32_306_reg_1344_pp0_iter11_reg;
        bitcast_ln32_306_reg_1344_pp0_iter13_reg <= bitcast_ln32_306_reg_1344_pp0_iter12_reg;
        bitcast_ln32_306_reg_1344_pp0_iter14_reg <= bitcast_ln32_306_reg_1344_pp0_iter13_reg;
        bitcast_ln32_306_reg_1344_pp0_iter15_reg <= bitcast_ln32_306_reg_1344_pp0_iter14_reg;
        bitcast_ln32_308_reg_1350 <= bitcast_ln32_308_fu_834_p1;
        bitcast_ln32_308_reg_1350_pp0_iter10_reg <= bitcast_ln32_308_reg_1350;
        bitcast_ln32_308_reg_1350_pp0_iter11_reg <= bitcast_ln32_308_reg_1350_pp0_iter10_reg;
        bitcast_ln32_308_reg_1350_pp0_iter12_reg <= bitcast_ln32_308_reg_1350_pp0_iter11_reg;
        bitcast_ln32_308_reg_1350_pp0_iter13_reg <= bitcast_ln32_308_reg_1350_pp0_iter12_reg;
        bitcast_ln32_308_reg_1350_pp0_iter14_reg <= bitcast_ln32_308_reg_1350_pp0_iter13_reg;
        bitcast_ln32_308_reg_1350_pp0_iter15_reg <= bitcast_ln32_308_reg_1350_pp0_iter14_reg;
        bitcast_ln32_310_reg_1356 <= bitcast_ln32_310_fu_838_p1;
        bitcast_ln32_310_reg_1356_pp0_iter10_reg <= bitcast_ln32_310_reg_1356;
        bitcast_ln32_310_reg_1356_pp0_iter11_reg <= bitcast_ln32_310_reg_1356_pp0_iter10_reg;
        bitcast_ln32_310_reg_1356_pp0_iter12_reg <= bitcast_ln32_310_reg_1356_pp0_iter11_reg;
        bitcast_ln32_310_reg_1356_pp0_iter13_reg <= bitcast_ln32_310_reg_1356_pp0_iter12_reg;
        bitcast_ln32_310_reg_1356_pp0_iter14_reg <= bitcast_ln32_310_reg_1356_pp0_iter13_reg;
        bitcast_ln32_310_reg_1356_pp0_iter15_reg <= bitcast_ln32_310_reg_1356_pp0_iter14_reg;
        bitcast_ln32_312_reg_1362 <= bitcast_ln32_312_fu_842_p1;
        bitcast_ln32_312_reg_1362_pp0_iter10_reg <= bitcast_ln32_312_reg_1362;
        bitcast_ln32_312_reg_1362_pp0_iter11_reg <= bitcast_ln32_312_reg_1362_pp0_iter10_reg;
        bitcast_ln32_312_reg_1362_pp0_iter12_reg <= bitcast_ln32_312_reg_1362_pp0_iter11_reg;
        bitcast_ln32_312_reg_1362_pp0_iter13_reg <= bitcast_ln32_312_reg_1362_pp0_iter12_reg;
        bitcast_ln32_312_reg_1362_pp0_iter14_reg <= bitcast_ln32_312_reg_1362_pp0_iter13_reg;
        bitcast_ln32_312_reg_1362_pp0_iter15_reg <= bitcast_ln32_312_reg_1362_pp0_iter14_reg;
        bitcast_ln32_314_reg_1368 <= bitcast_ln32_314_fu_846_p1;
        bitcast_ln32_314_reg_1368_pp0_iter10_reg <= bitcast_ln32_314_reg_1368;
        bitcast_ln32_314_reg_1368_pp0_iter11_reg <= bitcast_ln32_314_reg_1368_pp0_iter10_reg;
        bitcast_ln32_314_reg_1368_pp0_iter12_reg <= bitcast_ln32_314_reg_1368_pp0_iter11_reg;
        bitcast_ln32_314_reg_1368_pp0_iter13_reg <= bitcast_ln32_314_reg_1368_pp0_iter12_reg;
        bitcast_ln32_314_reg_1368_pp0_iter14_reg <= bitcast_ln32_314_reg_1368_pp0_iter13_reg;
        bitcast_ln32_314_reg_1368_pp0_iter15_reg <= bitcast_ln32_314_reg_1368_pp0_iter14_reg;
        bitcast_ln32_316_reg_1374 <= bitcast_ln32_316_fu_850_p1;
        bitcast_ln32_316_reg_1374_pp0_iter10_reg <= bitcast_ln32_316_reg_1374;
        bitcast_ln32_316_reg_1374_pp0_iter11_reg <= bitcast_ln32_316_reg_1374_pp0_iter10_reg;
        bitcast_ln32_316_reg_1374_pp0_iter12_reg <= bitcast_ln32_316_reg_1374_pp0_iter11_reg;
        bitcast_ln32_316_reg_1374_pp0_iter13_reg <= bitcast_ln32_316_reg_1374_pp0_iter12_reg;
        bitcast_ln32_316_reg_1374_pp0_iter14_reg <= bitcast_ln32_316_reg_1374_pp0_iter13_reg;
        bitcast_ln32_316_reg_1374_pp0_iter15_reg <= bitcast_ln32_316_reg_1374_pp0_iter14_reg;
        bitcast_ln32_318_reg_1380 <= bitcast_ln32_318_fu_854_p1;
        bitcast_ln32_318_reg_1380_pp0_iter10_reg <= bitcast_ln32_318_reg_1380;
        bitcast_ln32_318_reg_1380_pp0_iter11_reg <= bitcast_ln32_318_reg_1380_pp0_iter10_reg;
        bitcast_ln32_318_reg_1380_pp0_iter12_reg <= bitcast_ln32_318_reg_1380_pp0_iter11_reg;
        bitcast_ln32_318_reg_1380_pp0_iter13_reg <= bitcast_ln32_318_reg_1380_pp0_iter12_reg;
        bitcast_ln32_318_reg_1380_pp0_iter14_reg <= bitcast_ln32_318_reg_1380_pp0_iter13_reg;
        bitcast_ln32_318_reg_1380_pp0_iter15_reg <= bitcast_ln32_318_reg_1380_pp0_iter14_reg;
        bitcast_ln32_320_reg_1386 <= bitcast_ln32_320_fu_858_p1;
        bitcast_ln32_320_reg_1386_pp0_iter10_reg <= bitcast_ln32_320_reg_1386;
        bitcast_ln32_320_reg_1386_pp0_iter11_reg <= bitcast_ln32_320_reg_1386_pp0_iter10_reg;
        bitcast_ln32_320_reg_1386_pp0_iter12_reg <= bitcast_ln32_320_reg_1386_pp0_iter11_reg;
        bitcast_ln32_320_reg_1386_pp0_iter13_reg <= bitcast_ln32_320_reg_1386_pp0_iter12_reg;
        bitcast_ln32_320_reg_1386_pp0_iter14_reg <= bitcast_ln32_320_reg_1386_pp0_iter13_reg;
        bitcast_ln32_320_reg_1386_pp0_iter15_reg <= bitcast_ln32_320_reg_1386_pp0_iter14_reg;
        cBuffer_addr_reg_1218 <= add115_cast_fu_629_p1;
        cBuffer_addr_reg_1218_pp0_iter10_reg <= cBuffer_addr_reg_1218_pp0_iter9_reg;
        cBuffer_addr_reg_1218_pp0_iter11_reg <= cBuffer_addr_reg_1218_pp0_iter10_reg;
        cBuffer_addr_reg_1218_pp0_iter12_reg <= cBuffer_addr_reg_1218_pp0_iter11_reg;
        cBuffer_addr_reg_1218_pp0_iter13_reg <= cBuffer_addr_reg_1218_pp0_iter12_reg;
        cBuffer_addr_reg_1218_pp0_iter14_reg <= cBuffer_addr_reg_1218_pp0_iter13_reg;
        cBuffer_addr_reg_1218_pp0_iter15_reg <= cBuffer_addr_reg_1218_pp0_iter14_reg;
        cBuffer_addr_reg_1218_pp0_iter8_reg <= cBuffer_addr_reg_1218;
        cBuffer_addr_reg_1218_pp0_iter9_reg <= cBuffer_addr_reg_1218_pp0_iter8_reg;
        empty_260_reg_1099 <= empty_260_fu_451_p1;
        empty_260_reg_1099_pp0_iter3_reg <= empty_260_reg_1099;
        empty_260_reg_1099_pp0_iter4_reg <= empty_260_reg_1099_pp0_iter3_reg;
        empty_260_reg_1099_pp0_iter5_reg <= empty_260_reg_1099_pp0_iter4_reg;
        empty_260_reg_1099_pp0_iter6_reg <= empty_260_reg_1099_pp0_iter5_reg;
        inBoundsM_148_reg_1229 <= inBoundsM_148_fu_660_p2;
        inBoundsM_148_reg_1229_pp0_iter10_reg <= inBoundsM_148_reg_1229_pp0_iter9_reg;
        inBoundsM_148_reg_1229_pp0_iter11_reg <= inBoundsM_148_reg_1229_pp0_iter10_reg;
        inBoundsM_148_reg_1229_pp0_iter12_reg <= inBoundsM_148_reg_1229_pp0_iter11_reg;
        inBoundsM_148_reg_1229_pp0_iter13_reg <= inBoundsM_148_reg_1229_pp0_iter12_reg;
        inBoundsM_148_reg_1229_pp0_iter14_reg <= inBoundsM_148_reg_1229_pp0_iter13_reg;
        inBoundsM_148_reg_1229_pp0_iter15_reg <= inBoundsM_148_reg_1229_pp0_iter14_reg;
        inBoundsM_148_reg_1229_pp0_iter8_reg <= inBoundsM_148_reg_1229;
        inBoundsM_148_reg_1229_pp0_iter9_reg <= inBoundsM_148_reg_1229_pp0_iter8_reg;
        inBoundsM_149_reg_1234 <= inBoundsM_149_fu_674_p2;
        inBoundsM_149_reg_1234_pp0_iter10_reg <= inBoundsM_149_reg_1234_pp0_iter9_reg;
        inBoundsM_149_reg_1234_pp0_iter11_reg <= inBoundsM_149_reg_1234_pp0_iter10_reg;
        inBoundsM_149_reg_1234_pp0_iter12_reg <= inBoundsM_149_reg_1234_pp0_iter11_reg;
        inBoundsM_149_reg_1234_pp0_iter13_reg <= inBoundsM_149_reg_1234_pp0_iter12_reg;
        inBoundsM_149_reg_1234_pp0_iter14_reg <= inBoundsM_149_reg_1234_pp0_iter13_reg;
        inBoundsM_149_reg_1234_pp0_iter15_reg <= inBoundsM_149_reg_1234_pp0_iter14_reg;
        inBoundsM_149_reg_1234_pp0_iter8_reg <= inBoundsM_149_reg_1234;
        inBoundsM_149_reg_1234_pp0_iter9_reg <= inBoundsM_149_reg_1234_pp0_iter8_reg;
        inBoundsM_150_reg_1239 <= inBoundsM_150_fu_688_p2;
        inBoundsM_150_reg_1239_pp0_iter10_reg <= inBoundsM_150_reg_1239_pp0_iter9_reg;
        inBoundsM_150_reg_1239_pp0_iter11_reg <= inBoundsM_150_reg_1239_pp0_iter10_reg;
        inBoundsM_150_reg_1239_pp0_iter12_reg <= inBoundsM_150_reg_1239_pp0_iter11_reg;
        inBoundsM_150_reg_1239_pp0_iter13_reg <= inBoundsM_150_reg_1239_pp0_iter12_reg;
        inBoundsM_150_reg_1239_pp0_iter14_reg <= inBoundsM_150_reg_1239_pp0_iter13_reg;
        inBoundsM_150_reg_1239_pp0_iter15_reg <= inBoundsM_150_reg_1239_pp0_iter14_reg;
        inBoundsM_150_reg_1239_pp0_iter8_reg <= inBoundsM_150_reg_1239;
        inBoundsM_150_reg_1239_pp0_iter9_reg <= inBoundsM_150_reg_1239_pp0_iter8_reg;
        inBoundsM_151_reg_1244 <= inBoundsM_151_fu_702_p2;
        inBoundsM_151_reg_1244_pp0_iter10_reg <= inBoundsM_151_reg_1244_pp0_iter9_reg;
        inBoundsM_151_reg_1244_pp0_iter11_reg <= inBoundsM_151_reg_1244_pp0_iter10_reg;
        inBoundsM_151_reg_1244_pp0_iter12_reg <= inBoundsM_151_reg_1244_pp0_iter11_reg;
        inBoundsM_151_reg_1244_pp0_iter13_reg <= inBoundsM_151_reg_1244_pp0_iter12_reg;
        inBoundsM_151_reg_1244_pp0_iter14_reg <= inBoundsM_151_reg_1244_pp0_iter13_reg;
        inBoundsM_151_reg_1244_pp0_iter15_reg <= inBoundsM_151_reg_1244_pp0_iter14_reg;
        inBoundsM_151_reg_1244_pp0_iter8_reg <= inBoundsM_151_reg_1244;
        inBoundsM_151_reg_1244_pp0_iter9_reg <= inBoundsM_151_reg_1244_pp0_iter8_reg;
        inBoundsM_152_reg_1249 <= inBoundsM_152_fu_716_p2;
        inBoundsM_152_reg_1249_pp0_iter10_reg <= inBoundsM_152_reg_1249_pp0_iter9_reg;
        inBoundsM_152_reg_1249_pp0_iter11_reg <= inBoundsM_152_reg_1249_pp0_iter10_reg;
        inBoundsM_152_reg_1249_pp0_iter12_reg <= inBoundsM_152_reg_1249_pp0_iter11_reg;
        inBoundsM_152_reg_1249_pp0_iter13_reg <= inBoundsM_152_reg_1249_pp0_iter12_reg;
        inBoundsM_152_reg_1249_pp0_iter14_reg <= inBoundsM_152_reg_1249_pp0_iter13_reg;
        inBoundsM_152_reg_1249_pp0_iter15_reg <= inBoundsM_152_reg_1249_pp0_iter14_reg;
        inBoundsM_152_reg_1249_pp0_iter8_reg <= inBoundsM_152_reg_1249;
        inBoundsM_152_reg_1249_pp0_iter9_reg <= inBoundsM_152_reg_1249_pp0_iter8_reg;
        inBoundsM_153_reg_1254 <= inBoundsM_153_fu_730_p2;
        inBoundsM_153_reg_1254_pp0_iter10_reg <= inBoundsM_153_reg_1254_pp0_iter9_reg;
        inBoundsM_153_reg_1254_pp0_iter11_reg <= inBoundsM_153_reg_1254_pp0_iter10_reg;
        inBoundsM_153_reg_1254_pp0_iter12_reg <= inBoundsM_153_reg_1254_pp0_iter11_reg;
        inBoundsM_153_reg_1254_pp0_iter13_reg <= inBoundsM_153_reg_1254_pp0_iter12_reg;
        inBoundsM_153_reg_1254_pp0_iter14_reg <= inBoundsM_153_reg_1254_pp0_iter13_reg;
        inBoundsM_153_reg_1254_pp0_iter15_reg <= inBoundsM_153_reg_1254_pp0_iter14_reg;
        inBoundsM_153_reg_1254_pp0_iter8_reg <= inBoundsM_153_reg_1254;
        inBoundsM_153_reg_1254_pp0_iter9_reg <= inBoundsM_153_reg_1254_pp0_iter8_reg;
        inBoundsM_154_reg_1259 <= inBoundsM_154_fu_744_p2;
        inBoundsM_154_reg_1259_pp0_iter10_reg <= inBoundsM_154_reg_1259_pp0_iter9_reg;
        inBoundsM_154_reg_1259_pp0_iter11_reg <= inBoundsM_154_reg_1259_pp0_iter10_reg;
        inBoundsM_154_reg_1259_pp0_iter12_reg <= inBoundsM_154_reg_1259_pp0_iter11_reg;
        inBoundsM_154_reg_1259_pp0_iter13_reg <= inBoundsM_154_reg_1259_pp0_iter12_reg;
        inBoundsM_154_reg_1259_pp0_iter14_reg <= inBoundsM_154_reg_1259_pp0_iter13_reg;
        inBoundsM_154_reg_1259_pp0_iter15_reg <= inBoundsM_154_reg_1259_pp0_iter14_reg;
        inBoundsM_154_reg_1259_pp0_iter8_reg <= inBoundsM_154_reg_1259;
        inBoundsM_154_reg_1259_pp0_iter9_reg <= inBoundsM_154_reg_1259_pp0_iter8_reg;
        inBoundsM_reg_1224 <= inBoundsM_fu_646_p2;
        inBoundsM_reg_1224_pp0_iter10_reg <= inBoundsM_reg_1224_pp0_iter9_reg;
        inBoundsM_reg_1224_pp0_iter11_reg <= inBoundsM_reg_1224_pp0_iter10_reg;
        inBoundsM_reg_1224_pp0_iter12_reg <= inBoundsM_reg_1224_pp0_iter11_reg;
        inBoundsM_reg_1224_pp0_iter13_reg <= inBoundsM_reg_1224_pp0_iter12_reg;
        inBoundsM_reg_1224_pp0_iter14_reg <= inBoundsM_reg_1224_pp0_iter13_reg;
        inBoundsM_reg_1224_pp0_iter15_reg <= inBoundsM_reg_1224_pp0_iter14_reg;
        inBoundsM_reg_1224_pp0_iter8_reg <= inBoundsM_reg_1224;
        inBoundsM_reg_1224_pp0_iter9_reg <= inBoundsM_reg_1224_pp0_iter8_reg;
        inBoundsN_reg_1109 <= inBoundsN_fu_491_p2;
        inBoundsN_reg_1109_pp0_iter10_reg <= inBoundsN_reg_1109_pp0_iter9_reg;
        inBoundsN_reg_1109_pp0_iter11_reg <= inBoundsN_reg_1109_pp0_iter10_reg;
        inBoundsN_reg_1109_pp0_iter12_reg <= inBoundsN_reg_1109_pp0_iter11_reg;
        inBoundsN_reg_1109_pp0_iter13_reg <= inBoundsN_reg_1109_pp0_iter12_reg;
        inBoundsN_reg_1109_pp0_iter14_reg <= inBoundsN_reg_1109_pp0_iter13_reg;
        inBoundsN_reg_1109_pp0_iter15_reg <= inBoundsN_reg_1109_pp0_iter14_reg;
        inBoundsN_reg_1109_pp0_iter4_reg <= inBoundsN_reg_1109;
        inBoundsN_reg_1109_pp0_iter5_reg <= inBoundsN_reg_1109_pp0_iter4_reg;
        inBoundsN_reg_1109_pp0_iter6_reg <= inBoundsN_reg_1109_pp0_iter5_reg;
        inBoundsN_reg_1109_pp0_iter7_reg <= inBoundsN_reg_1109_pp0_iter6_reg;
        inBoundsN_reg_1109_pp0_iter8_reg <= inBoundsN_reg_1109_pp0_iter7_reg;
        inBoundsN_reg_1109_pp0_iter9_reg <= inBoundsN_reg_1109_pp0_iter8_reg;
        res_486_reg_1397 <= grp_fu_285_p2;
        res_488_reg_1402 <= grp_fu_289_p2;
        res_490_reg_1407 <= grp_fu_293_p2;
        res_492_reg_1412 <= grp_fu_297_p2;
        res_494_reg_1417 <= grp_fu_301_p2;
        res_496_reg_1422 <= grp_fu_305_p2;
        res_498_reg_1427 <= grp_fu_309_p2;
        res_499_reg_1264 <= grp_fu_313_p2;
        res_500_reg_1274 <= grp_fu_317_p2;
        res_501_reg_1284 <= grp_fu_321_p2;
        res_502_reg_1294 <= grp_fu_325_p2;
        res_503_reg_1304 <= grp_fu_329_p2;
        res_504_reg_1314 <= grp_fu_333_p2;
        res_505_reg_1324 <= grp_fu_337_p2;
        res_506_reg_1334 <= grp_fu_341_p2;
        res_reg_1392 <= grp_fu_281_p2;
        select_ln64_20_reg_1093 <= select_ln64_20_fu_444_p3;
        select_ln64_reg_1079_pp0_iter2_reg <= select_ln64_reg_1079;
        select_ln64_reg_1079_pp0_iter3_reg <= select_ln64_reg_1079_pp0_iter2_reg;
        select_ln64_reg_1079_pp0_iter4_reg <= select_ln64_reg_1079_pp0_iter3_reg;
        select_ln64_reg_1079_pp0_iter5_reg <= select_ln64_reg_1079_pp0_iter4_reg;
        select_ln64_reg_1079_pp0_iter6_reg <= select_ln64_reg_1079_pp0_iter5_reg;
        tmp_295_reg_1279 <= {{cPrev_2_fu_749_p3[63:32]}};
        tmp_296_reg_1136 <= {{bPipes_0_dout[95:64]}};
        tmp_297_reg_1289 <= {{cPrev_2_fu_749_p3[95:64]}};
        tmp_298_reg_1141 <= {{bPipes_0_dout[127:96]}};
        tmp_299_reg_1299 <= {{cPrev_2_fu_749_p3[127:96]}};
        tmp_300_reg_1146 <= {{bPipes_0_dout[159:128]}};
        tmp_301_reg_1309 <= {{cPrev_2_fu_749_p3[159:128]}};
        tmp_302_reg_1151 <= {{bPipes_0_dout[191:160]}};
        tmp_303_reg_1319 <= {{cPrev_2_fu_749_p3[191:160]}};
        tmp_304_reg_1156 <= {{bPipes_0_dout[223:192]}};
        tmp_305_reg_1329 <= {{cPrev_2_fu_749_p3[223:192]}};
        tmp_306_reg_1161 <= {{bPipes_0_dout[255:224]}};
        tmp_307_reg_1339 <= {{cPrev_2_fu_749_p3[255:224]}};
        tmp_s_reg_1131 <= {{bPipes_0_dout[63:32]}};
        trunc_ln170_22_reg_1269 <= trunc_ln170_22_fu_756_p1;
        trunc_ln170_reg_1126 <= trunc_ln170_fu_496_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce0_local = 1'b1;
    end else begin
        aBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce1_local = 1'b1;
    end else begin
        aBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((first_iter_1_reg_1085 == 1'd1) & (1'd1 == and_ln80_reg_1089) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_we0_local = 1'b1;
    end else begin
        aBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_reg_1089) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_0_blk_n = aPipes_0_empty_n;
    end else begin
        aPipes_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_reg_1089) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_0_read_local = 1'b1;
    end else begin
        aPipes_0_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op64_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_1_blk_n = aPipes_1_full_n;
    end else begin
        aPipes_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op64_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_1_write_local = 1'b1;
    end else begin
        aPipes_1_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_363_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_158;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_0_blk_n = bPipes_0_empty_n;
    end else begin
        bPipes_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_0_read_local = 1'b1;
    end else begin
        bPipes_0_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_1_blk_n = bPipes_1_full_n;
    end else begin
        bPipes_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_1_write_local = 1'b1;
    end else begin
        bPipes_1_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce0_local = 1'b1;
    end else begin
        cBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce1_local = 1'b1;
    end else begin
        cBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_we0_local = 1'b1;
    end else begin
        cBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_281_ce = 1'b1;
    end else begin
        grp_fu_281_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_285_ce = 1'b1;
    end else begin
        grp_fu_285_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_289_ce = 1'b1;
    end else begin
        grp_fu_289_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_293_ce = 1'b1;
    end else begin
        grp_fu_293_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_297_ce = 1'b1;
    end else begin
        grp_fu_297_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_301_ce = 1'b1;
    end else begin
        grp_fu_301_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_309_ce = 1'b1;
    end else begin
        grp_fu_309_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_313_ce = 1'b1;
    end else begin
        grp_fu_313_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_317_ce = 1'b1;
    end else begin
        grp_fu_317_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_321_ce = 1'b1;
    end else begin
        grp_fu_321_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_325_ce = 1'b1;
    end else begin
        grp_fu_325_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_329_ce = 1'b1;
    end else begin
        grp_fu_329_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_333_ce = 1'b1;
    end else begin
        grp_fu_333_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_341_ce = 1'b1;
    end else begin
        grp_fu_341_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aBuffer_address0 = add_cast_fu_460_p1;

assign aBuffer_address1 = add91_cast_fu_477_p1;

assign aBuffer_ce0 = aBuffer_ce0_local;

assign aBuffer_ce1 = aBuffer_ce1_local;

assign aBuffer_d0 = aPipes_0_dout;

assign aBuffer_we0 = aBuffer_we0_local;

assign aPipes_0_read = aPipes_0_read_local;

assign aPipes_1_din = aPipes_0_dout;

assign aPipes_1_write = aPipes_1_write_local;

assign add106_cast_fu_487_p1 = add106_fu_482_p2;

assign add106_fu_482_p2 = (mul + zext_ln64_fu_470_p1);

assign add115_cast_fu_629_p1 = add115_fu_623_p2;

assign add115_fu_623_p2 = (mul14_fu_613_p3 + zext_ln67_fu_620_p1);

assign add4_fu_637_p4 = {{{m0}, {empty_fu_634_p1}}, {3'd0}};

assign add91_cast_fu_477_p1 = add91_fu_473_p2;

assign add91_fu_473_p2 = (select_ln64_20_reg_1093 + cond90);

assign add_cast_fu_460_p1 = add_fu_455_p2;

assign add_fu_455_p2 = (select_ln64_20_fu_444_p3 + cond);

assign add_ln64_20_fu_438_p2 = (n1_fu_154 + 5'd1);

assign add_ln64_fu_369_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 11'd1);

assign add_ln67_fu_424_p2 = (select_ln64_fu_389_p3 + 7'd1);

assign and_ln80_fu_419_p2 = (icmp_ln83_fu_413_p2 & brmerge282);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op64_write_state3 == 1'b1) & (1'b0 == aPipes_1_full_n)) | ((1'd1 == and_ln80_reg_1089) & (1'b0 == aPipes_0_empty_n)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((bPipes_1_full_n == 1'b0) | (bPipes_0_empty_n == 1'b0));
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_66 = (ap_predicate_op66_store_state3 == 1'b1);
end

assign ap_enable_operation_76 = (1'b1 == 1'b1);

assign ap_enable_operation_77 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op64_write_state3 = ((first_iter_1_reg_1085 == 1'd0) & (1'd1 == and_ln80_reg_1089));
end

always @ (*) begin
    ap_predicate_op66_store_state3 = ((first_iter_1_reg_1085 == 1'd1) & (1'd1 == and_ln80_reg_1089));
end

assign ap_ready = ap_ready_sig;

assign bPipes_0_read = bPipes_0_read_local;

assign bPipes_1_din = bPipes_0_dout;

assign bPipes_1_write = bPipes_1_write_local;

assign bitcast_ln32_306_fu_830_p1 = trunc_ln170_22_reg_1269;

assign bitcast_ln32_308_fu_834_p1 = tmp_295_reg_1279;

assign bitcast_ln32_310_fu_838_p1 = tmp_297_reg_1289;

assign bitcast_ln32_312_fu_842_p1 = tmp_299_reg_1299;

assign bitcast_ln32_314_fu_846_p1 = tmp_301_reg_1309;

assign bitcast_ln32_316_fu_850_p1 = tmp_303_reg_1319;

assign bitcast_ln32_318_fu_854_p1 = tmp_305_reg_1329;

assign bitcast_ln32_320_fu_858_p1 = tmp_307_reg_1339;

assign bitcast_ln32_fu_570_p1 = aVal_reg_1121;

assign bitcast_ln36_134_fu_886_p1 = select_ln296_134_fu_880_p3;

assign bitcast_ln36_135_fu_900_p1 = select_ln296_135_fu_894_p3;

assign bitcast_ln36_136_fu_914_p1 = select_ln296_136_fu_908_p3;

assign bitcast_ln36_137_fu_928_p1 = select_ln296_137_fu_922_p3;

assign bitcast_ln36_138_fu_942_p1 = select_ln296_138_fu_936_p3;

assign bitcast_ln36_139_fu_956_p1 = select_ln296_139_fu_950_p3;

assign bitcast_ln36_140_fu_970_p1 = select_ln296_140_fu_964_p3;

assign bitcast_ln36_fu_872_p1 = select_ln296_fu_866_p3;

assign cBuffer_address0 = cBuffer_addr_reg_1218_pp0_iter15_reg;

assign cBuffer_address1 = add115_cast_fu_629_p1;

assign cBuffer_ce0 = cBuffer_ce0_local;

assign cBuffer_ce1 = cBuffer_ce1_local;

assign cBuffer_d0 = tmp_308_fu_974_p9;

assign cBuffer_we0 = cBuffer_we0_local;

assign cPrev_2_fu_749_p3 = ((cmp111[0:0] == 1'b1) ? 256'd0 : cBuffer_q1);

assign empty_260_fu_451_p1 = select_ln64_20_fu_444_p3[3:0];

assign empty_fu_634_p1 = select_ln64_reg_1079_pp0_iter6_reg[5:0];

assign first_iter_1_fu_397_p2 = ((select_ln64_fu_389_p3 == 7'd0) ? 1'b1 : 1'b0);

assign grp_fu_281_p0 = trunc_ln170_22_reg_1269;

assign grp_fu_285_p0 = tmp_295_reg_1279;

assign grp_fu_289_p0 = tmp_297_reg_1289;

assign grp_fu_293_p0 = tmp_299_reg_1299;

assign grp_fu_297_p0 = tmp_301_reg_1309;

assign grp_fu_301_p0 = tmp_303_reg_1319;

assign grp_fu_305_p0 = tmp_305_reg_1329;

assign grp_fu_309_p0 = tmp_307_reg_1339;

assign grp_fu_313_p1 = trunc_ln170_reg_1126;

assign grp_fu_317_p1 = tmp_s_reg_1131;

assign grp_fu_321_p1 = tmp_296_reg_1136;

assign grp_fu_325_p1 = tmp_298_reg_1141;

assign grp_fu_329_p1 = tmp_300_reg_1146;

assign grp_fu_333_p1 = tmp_302_reg_1151;

assign grp_fu_337_p1 = tmp_304_reg_1156;

assign grp_fu_341_p1 = tmp_306_reg_1161;

assign icmp_ln64_fu_363_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_383_p2 = ((m1_fu_150 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_413_p2 = ((tmp_fu_403_p4 == 2'd0) ? 1'b1 : 1'b0);

assign inBoundsM_148_fu_660_p2 = ((or_ln_fu_651_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_149_fu_674_p2 = ((or_ln125_s_fu_665_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_150_fu_688_p2 = ((or_ln125_88_fu_679_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_151_fu_702_p2 = ((or_ln125_89_fu_693_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_152_fu_716_p2 = ((or_ln125_90_fu_707_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_153_fu_730_p2 = ((or_ln125_91_fu_721_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_154_fu_744_p2 = ((or_ln125_92_fu_735_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_fu_646_p2 = ((add4_fu_637_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsN_fu_491_p2 = ((add106_cast_fu_487_p1 < size_n) ? 1'b1 : 1'b0);

assign inBounds_148_fu_876_p2 = (inBoundsN_reg_1109_pp0_iter15_reg & inBoundsM_148_reg_1229_pp0_iter15_reg);

assign inBounds_149_fu_890_p2 = (inBoundsN_reg_1109_pp0_iter15_reg & inBoundsM_149_reg_1234_pp0_iter15_reg);

assign inBounds_150_fu_904_p2 = (inBoundsN_reg_1109_pp0_iter15_reg & inBoundsM_150_reg_1239_pp0_iter15_reg);

assign inBounds_151_fu_918_p2 = (inBoundsN_reg_1109_pp0_iter15_reg & inBoundsM_151_reg_1244_pp0_iter15_reg);

assign inBounds_152_fu_932_p2 = (inBoundsN_reg_1109_pp0_iter15_reg & inBoundsM_152_reg_1249_pp0_iter15_reg);

assign inBounds_153_fu_946_p2 = (inBoundsN_reg_1109_pp0_iter15_reg & inBoundsM_153_reg_1254_pp0_iter15_reg);

assign inBounds_154_fu_960_p2 = (inBoundsN_reg_1109_pp0_iter15_reg & inBoundsM_154_reg_1259_pp0_iter15_reg);

assign inBounds_fu_862_p2 = (inBoundsN_reg_1109_pp0_iter15_reg & inBoundsM_reg_1224_pp0_iter15_reg);

assign mul14_fu_613_p3 = {{empty_260_reg_1099_pp0_iter6_reg}, {6'd0}};

assign or_ln125_88_fu_679_p4 = {{{m0}, {empty_fu_634_p1}}, {3'd3}};

assign or_ln125_89_fu_693_p4 = {{{m0}, {empty_fu_634_p1}}, {3'd4}};

assign or_ln125_90_fu_707_p4 = {{{m0}, {empty_fu_634_p1}}, {3'd5}};

assign or_ln125_91_fu_721_p4 = {{{m0}, {empty_fu_634_p1}}, {3'd6}};

assign or_ln125_92_fu_735_p4 = {{{m0}, {empty_fu_634_p1}}, {3'd7}};

assign or_ln125_s_fu_665_p4 = {{{m0}, {empty_fu_634_p1}}, {3'd2}};

assign or_ln_fu_651_p4 = {{{m0}, {empty_fu_634_p1}}, {3'd1}};

assign select_ln296_134_fu_880_p3 = ((inBounds_148_fu_876_p2[0:0] == 1'b1) ? res_486_reg_1397 : bitcast_ln32_308_reg_1350_pp0_iter15_reg);

assign select_ln296_135_fu_894_p3 = ((inBounds_149_fu_890_p2[0:0] == 1'b1) ? res_488_reg_1402 : bitcast_ln32_310_reg_1356_pp0_iter15_reg);

assign select_ln296_136_fu_908_p3 = ((inBounds_150_fu_904_p2[0:0] == 1'b1) ? res_490_reg_1407 : bitcast_ln32_312_reg_1362_pp0_iter15_reg);

assign select_ln296_137_fu_922_p3 = ((inBounds_151_fu_918_p2[0:0] == 1'b1) ? res_492_reg_1412 : bitcast_ln32_314_reg_1368_pp0_iter15_reg);

assign select_ln296_138_fu_936_p3 = ((inBounds_152_fu_932_p2[0:0] == 1'b1) ? res_494_reg_1417 : bitcast_ln32_316_reg_1374_pp0_iter15_reg);

assign select_ln296_139_fu_950_p3 = ((inBounds_153_fu_946_p2[0:0] == 1'b1) ? res_496_reg_1422 : bitcast_ln32_318_reg_1380_pp0_iter15_reg);

assign select_ln296_140_fu_964_p3 = ((inBounds_154_fu_960_p2[0:0] == 1'b1) ? res_498_reg_1427 : bitcast_ln32_320_reg_1386_pp0_iter15_reg);

assign select_ln296_fu_866_p3 = ((inBounds_fu_862_p2[0:0] == 1'b1) ? res_reg_1392 : bitcast_ln32_306_reg_1344_pp0_iter15_reg);

assign select_ln64_20_fu_444_p3 = ((icmp_ln67_reg_1074[0:0] == 1'b1) ? add_ln64_20_fu_438_p2 : n1_fu_154);

assign select_ln64_fu_389_p3 = ((icmp_ln67_fu_383_p2[0:0] == 1'b1) ? 7'd0 : m1_fu_150);

assign tmp_308_fu_974_p9 = {{{{{{{{bitcast_ln36_140_fu_970_p1}, {bitcast_ln36_139_fu_956_p1}}, {bitcast_ln36_138_fu_942_p1}}, {bitcast_ln36_137_fu_928_p1}}, {bitcast_ln36_136_fu_914_p1}}, {bitcast_ln36_135_fu_900_p1}}, {bitcast_ln36_134_fu_886_p1}}, {bitcast_ln36_fu_872_p1}};

assign tmp_fu_403_p4 = {{select_ln64_fu_389_p3[6:5]}};

assign trunc_ln170_22_fu_756_p1 = cPrev_2_fu_749_p3[31:0];

assign trunc_ln170_fu_496_p1 = bPipes_0_dout[31:0];

assign zext_ln64_fu_470_p1 = select_ln64_20_reg_1093;

assign zext_ln67_fu_620_p1 = select_ln64_reg_1079_pp0_iter6_reg;

endmodule //MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M
