// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMultiplicationKernel_ReadA (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        a,
        aSplit_0_din,
        aSplit_0_num_data_valid,
        aSplit_0_fifo_cap,
        aSplit_0_full_n,
        aSplit_0_write,
        aSplit_1_din,
        aSplit_1_num_data_valid,
        aSplit_1_fifo_cap,
        aSplit_1_full_n,
        aSplit_1_write,
        aSplit_2_din,
        aSplit_2_num_data_valid,
        aSplit_2_fifo_cap,
        aSplit_2_full_n,
        aSplit_2_write,
        aSplit_3_din,
        aSplit_3_num_data_valid,
        aSplit_3_fifo_cap,
        aSplit_3_full_n,
        aSplit_3_write,
        aSplit_4_din,
        aSplit_4_num_data_valid,
        aSplit_4_fifo_cap,
        aSplit_4_full_n,
        aSplit_4_write,
        aSplit_5_din,
        aSplit_5_num_data_valid,
        aSplit_5_fifo_cap,
        aSplit_5_full_n,
        aSplit_5_write,
        aSplit_6_din,
        aSplit_6_num_data_valid,
        aSplit_6_fifo_cap,
        aSplit_6_full_n,
        aSplit_6_write,
        aSplit_7_din,
        aSplit_7_num_data_valid,
        aSplit_7_fifo_cap,
        aSplit_7_full_n,
        aSplit_7_write,
        aSplit_8_din,
        aSplit_8_num_data_valid,
        aSplit_8_fifo_cap,
        aSplit_8_full_n,
        aSplit_8_write,
        aSplit_9_din,
        aSplit_9_num_data_valid,
        aSplit_9_fifo_cap,
        aSplit_9_full_n,
        aSplit_9_write,
        aSplit_10_din,
        aSplit_10_num_data_valid,
        aSplit_10_fifo_cap,
        aSplit_10_full_n,
        aSplit_10_write,
        aSplit_11_din,
        aSplit_11_num_data_valid,
        aSplit_11_fifo_cap,
        aSplit_11_full_n,
        aSplit_11_write,
        aSplit_12_din,
        aSplit_12_num_data_valid,
        aSplit_12_fifo_cap,
        aSplit_12_full_n,
        aSplit_12_write,
        aSplit_13_din,
        aSplit_13_num_data_valid,
        aSplit_13_fifo_cap,
        aSplit_13_full_n,
        aSplit_13_write,
        aSplit_14_din,
        aSplit_14_num_data_valid,
        aSplit_14_fifo_cap,
        aSplit_14_full_n,
        aSplit_14_write,
        aSplit_15_din,
        aSplit_15_num_data_valid,
        aSplit_15_fifo_cap,
        aSplit_15_full_n,
        aSplit_15_write,
        size_n,
        size_k,
        size_m,
        size_n_c5_din,
        size_n_c5_num_data_valid,
        size_n_c5_fifo_cap,
        size_n_c5_full_n,
        size_n_c5_write,
        size_k_c8_din,
        size_k_c8_num_data_valid,
        size_k_c8_fifo_cap,
        size_k_c8_full_n,
        size_k_c8_write,
        size_m_c13_din,
        size_m_c13_num_data_valid,
        size_m_c13_fifo_cap,
        size_m_c13_full_n,
        size_m_c13_write
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [511:0] m_axi_gmem0_WDATA;
output  [63:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [511:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [63:0] a;
output  [31:0] aSplit_0_din;
input  [10:0] aSplit_0_num_data_valid;
input  [10:0] aSplit_0_fifo_cap;
input   aSplit_0_full_n;
output   aSplit_0_write;
output  [31:0] aSplit_1_din;
input  [10:0] aSplit_1_num_data_valid;
input  [10:0] aSplit_1_fifo_cap;
input   aSplit_1_full_n;
output   aSplit_1_write;
output  [31:0] aSplit_2_din;
input  [10:0] aSplit_2_num_data_valid;
input  [10:0] aSplit_2_fifo_cap;
input   aSplit_2_full_n;
output   aSplit_2_write;
output  [31:0] aSplit_3_din;
input  [10:0] aSplit_3_num_data_valid;
input  [10:0] aSplit_3_fifo_cap;
input   aSplit_3_full_n;
output   aSplit_3_write;
output  [31:0] aSplit_4_din;
input  [10:0] aSplit_4_num_data_valid;
input  [10:0] aSplit_4_fifo_cap;
input   aSplit_4_full_n;
output   aSplit_4_write;
output  [31:0] aSplit_5_din;
input  [10:0] aSplit_5_num_data_valid;
input  [10:0] aSplit_5_fifo_cap;
input   aSplit_5_full_n;
output   aSplit_5_write;
output  [31:0] aSplit_6_din;
input  [10:0] aSplit_6_num_data_valid;
input  [10:0] aSplit_6_fifo_cap;
input   aSplit_6_full_n;
output   aSplit_6_write;
output  [31:0] aSplit_7_din;
input  [10:0] aSplit_7_num_data_valid;
input  [10:0] aSplit_7_fifo_cap;
input   aSplit_7_full_n;
output   aSplit_7_write;
output  [31:0] aSplit_8_din;
input  [10:0] aSplit_8_num_data_valid;
input  [10:0] aSplit_8_fifo_cap;
input   aSplit_8_full_n;
output   aSplit_8_write;
output  [31:0] aSplit_9_din;
input  [10:0] aSplit_9_num_data_valid;
input  [10:0] aSplit_9_fifo_cap;
input   aSplit_9_full_n;
output   aSplit_9_write;
output  [31:0] aSplit_10_din;
input  [10:0] aSplit_10_num_data_valid;
input  [10:0] aSplit_10_fifo_cap;
input   aSplit_10_full_n;
output   aSplit_10_write;
output  [31:0] aSplit_11_din;
input  [10:0] aSplit_11_num_data_valid;
input  [10:0] aSplit_11_fifo_cap;
input   aSplit_11_full_n;
output   aSplit_11_write;
output  [31:0] aSplit_12_din;
input  [10:0] aSplit_12_num_data_valid;
input  [10:0] aSplit_12_fifo_cap;
input   aSplit_12_full_n;
output   aSplit_12_write;
output  [31:0] aSplit_13_din;
input  [10:0] aSplit_13_num_data_valid;
input  [10:0] aSplit_13_fifo_cap;
input   aSplit_13_full_n;
output   aSplit_13_write;
output  [31:0] aSplit_14_din;
input  [10:0] aSplit_14_num_data_valid;
input  [10:0] aSplit_14_fifo_cap;
input   aSplit_14_full_n;
output   aSplit_14_write;
output  [31:0] aSplit_15_din;
input  [10:0] aSplit_15_num_data_valid;
input  [10:0] aSplit_15_fifo_cap;
input   aSplit_15_full_n;
output   aSplit_15_write;
input  [31:0] size_n;
input  [31:0] size_k;
input  [31:0] size_m;
output  [31:0] size_n_c5_din;
input  [2:0] size_n_c5_num_data_valid;
input  [2:0] size_n_c5_fifo_cap;
input   size_n_c5_full_n;
output   size_n_c5_write;
output  [31:0] size_k_c8_din;
input  [2:0] size_k_c8_num_data_valid;
input  [2:0] size_k_c8_fifo_cap;
input   size_k_c8_full_n;
output   size_k_c8_write;
output  [31:0] size_m_c13_din;
input  [2:0] size_m_c13_num_data_valid;
input  [2:0] size_m_c13_fifo_cap;
input   size_m_c13_full_n;
output   size_m_c13_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg m_axi_gmem0_ARVALID;
reg m_axi_gmem0_RREADY;
reg aSplit_0_write;
reg aSplit_1_write;
reg aSplit_2_write;
reg aSplit_3_write;
reg aSplit_4_write;
reg aSplit_5_write;
reg aSplit_6_write;
reg aSplit_7_write;
reg aSplit_8_write;
reg aSplit_9_write;
reg aSplit_10_write;
reg aSplit_11_write;
reg aSplit_12_write;
reg aSplit_13_write;
reg aSplit_14_write;
reg aSplit_15_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    size_n_c5_blk_n;
reg    size_k_c8_blk_n;
reg    size_m_c13_blk_n;
reg   [23:0] lshr_ln_reg_278;
reg    ap_block_state1;
reg   [23:0] lshr_ln1_reg_283;
reg   [27:0] lshr_ln2_reg_288;
wire   [36:0] tmp_s_fu_254_p3;
reg   [36:0] tmp_s_reg_295;
wire    ap_CS_fsm_state2;
wire   [59:0] grp_fu_196_p2;
reg   [59:0] bound17_reg_310;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state8;
wire   [82:0] grp_fu_200_p2;
reg   [82:0] bound40_reg_331;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_done;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_idle;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_ready;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWVALID;
wire   [63:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWADDR;
wire   [0:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWID;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWLEN;
wire   [2:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWBURST;
wire   [1:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWPROT;
wire   [3:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWQOS;
wire   [3:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWREGION;
wire   [0:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWUSER;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WVALID;
wire   [511:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WDATA;
wire   [63:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WSTRB;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WLAST;
wire   [0:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WID;
wire   [0:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WUSER;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARVALID;
wire   [63:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARADDR;
wire   [0:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARID;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARLEN;
wire   [2:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARBURST;
wire   [1:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARPROT;
wire   [3:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARQOS;
wire   [3:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARREGION;
wire   [0:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARUSER;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_RREADY;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_BREADY;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_0_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_0_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_1_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_1_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_2_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_2_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_3_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_3_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_4_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_4_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_5_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_5_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_6_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_6_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_7_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_7_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_8_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_8_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_9_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_9_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_10_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_10_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_11_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_11_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_12_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_12_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_13_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_13_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_14_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_14_write;
wire   [31:0] grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_15_din;
wire    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_15_write;
reg    grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start_reg;
reg   [9:0] ap_NS_fsm;
wire    ap_NS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state9;
reg    size_m_c13_write_local;
reg    size_k_c8_write_local;
reg    size_n_c5_write_local;
wire   [23:0] grp_fu_196_p0;
wire   [36:0] grp_fu_196_p1;
wire   [23:0] grp_fu_200_p0;
wire   [59:0] grp_fu_200_p1;
wire   [32:0] zext_ln111_fu_204_p1;
wire   [32:0] add_ln111_fu_208_p2;
wire   [32:0] zext_ln116_fu_224_p1;
wire   [32:0] add_ln116_fu_228_p2;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire   [59:0] grp_fu_196_p00;
wire   [59:0] grp_fu_196_p10;
wire   [82:0] grp_fu_200_p00;
wire   [82:0] grp_fu_200_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 10'd1;
#0 grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start_reg = 1'b0;
end

MatrixMultiplicationKernel_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2 grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start),
    .ap_done(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_done),
    .ap_idle(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_idle),
    .ap_ready(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_ready),
    .m_axi_gmem0_AWVALID(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(m_axi_gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(m_axi_gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(m_axi_gmem0_RDATA),
    .m_axi_gmem0_RLAST(m_axi_gmem0_RLAST),
    .m_axi_gmem0_RID(m_axi_gmem0_RID),
    .m_axi_gmem0_RFIFONUM(m_axi_gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(m_axi_gmem0_RUSER),
    .m_axi_gmem0_RRESP(m_axi_gmem0_RRESP),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .aSplit_0_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_0_din),
    .aSplit_0_num_data_valid(11'd0),
    .aSplit_0_fifo_cap(11'd0),
    .aSplit_0_full_n(aSplit_0_full_n),
    .aSplit_0_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_0_write),
    .aSplit_1_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_1_din),
    .aSplit_1_num_data_valid(11'd0),
    .aSplit_1_fifo_cap(11'd0),
    .aSplit_1_full_n(aSplit_1_full_n),
    .aSplit_1_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_1_write),
    .aSplit_2_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_2_din),
    .aSplit_2_num_data_valid(11'd0),
    .aSplit_2_fifo_cap(11'd0),
    .aSplit_2_full_n(aSplit_2_full_n),
    .aSplit_2_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_2_write),
    .aSplit_3_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_3_din),
    .aSplit_3_num_data_valid(11'd0),
    .aSplit_3_fifo_cap(11'd0),
    .aSplit_3_full_n(aSplit_3_full_n),
    .aSplit_3_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_3_write),
    .aSplit_4_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_4_din),
    .aSplit_4_num_data_valid(11'd0),
    .aSplit_4_fifo_cap(11'd0),
    .aSplit_4_full_n(aSplit_4_full_n),
    .aSplit_4_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_4_write),
    .aSplit_5_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_5_din),
    .aSplit_5_num_data_valid(11'd0),
    .aSplit_5_fifo_cap(11'd0),
    .aSplit_5_full_n(aSplit_5_full_n),
    .aSplit_5_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_5_write),
    .aSplit_6_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_6_din),
    .aSplit_6_num_data_valid(11'd0),
    .aSplit_6_fifo_cap(11'd0),
    .aSplit_6_full_n(aSplit_6_full_n),
    .aSplit_6_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_6_write),
    .aSplit_7_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_7_din),
    .aSplit_7_num_data_valid(11'd0),
    .aSplit_7_fifo_cap(11'd0),
    .aSplit_7_full_n(aSplit_7_full_n),
    .aSplit_7_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_7_write),
    .aSplit_8_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_8_din),
    .aSplit_8_num_data_valid(11'd0),
    .aSplit_8_fifo_cap(11'd0),
    .aSplit_8_full_n(aSplit_8_full_n),
    .aSplit_8_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_8_write),
    .aSplit_9_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_9_din),
    .aSplit_9_num_data_valid(11'd0),
    .aSplit_9_fifo_cap(11'd0),
    .aSplit_9_full_n(aSplit_9_full_n),
    .aSplit_9_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_9_write),
    .aSplit_10_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_10_din),
    .aSplit_10_num_data_valid(11'd0),
    .aSplit_10_fifo_cap(11'd0),
    .aSplit_10_full_n(aSplit_10_full_n),
    .aSplit_10_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_10_write),
    .aSplit_11_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_11_din),
    .aSplit_11_num_data_valid(11'd0),
    .aSplit_11_fifo_cap(11'd0),
    .aSplit_11_full_n(aSplit_11_full_n),
    .aSplit_11_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_11_write),
    .aSplit_12_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_12_din),
    .aSplit_12_num_data_valid(11'd0),
    .aSplit_12_fifo_cap(11'd0),
    .aSplit_12_full_n(aSplit_12_full_n),
    .aSplit_12_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_12_write),
    .aSplit_13_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_13_din),
    .aSplit_13_num_data_valid(11'd0),
    .aSplit_13_fifo_cap(11'd0),
    .aSplit_13_full_n(aSplit_13_full_n),
    .aSplit_13_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_13_write),
    .aSplit_14_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_14_din),
    .aSplit_14_num_data_valid(11'd0),
    .aSplit_14_fifo_cap(11'd0),
    .aSplit_14_full_n(aSplit_14_full_n),
    .aSplit_14_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_14_write),
    .aSplit_15_din(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_15_din),
    .aSplit_15_num_data_valid(11'd0),
    .aSplit_15_fifo_cap(11'd0),
    .aSplit_15_full_n(aSplit_15_full_n),
    .aSplit_15_write(grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_15_write),
    .bound40(bound40_reg_331),
    .bound17(bound17_reg_310),
    .lshr_ln2(lshr_ln2_reg_288),
    .bound4(tmp_s_reg_295),
    .zext_ln109_3(lshr_ln2_reg_288),
    .a(a)
);

MatrixMultiplicationKernel_mul_24ns_37ns_60_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 37 ),
    .dout_WIDTH( 60 ))
mul_24ns_37ns_60_2_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_196_p0),
    .din1(grp_fu_196_p1),
    .ce(1'b1),
    .dout(grp_fu_196_p2)
);

MatrixMultiplicationKernel_mul_24ns_60ns_83_5_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 60 ),
    .dout_WIDTH( 83 ))
mul_24ns_60ns_83_5_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_200_p0),
    .din1(grp_fu_200_p1),
    .ce(1'b1),
    .dout(grp_fu_200_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state9) & (1'b1 == ap_CS_fsm_state8))) begin
            grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start_reg <= 1'b1;
        end else if ((grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_ready == 1'b1)) begin
            grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound17_reg_310 <= grp_fu_196_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        bound40_reg_331 <= grp_fu_200_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        lshr_ln1_reg_283 <= {{add_ln116_fu_228_p2[32:9]}};
        lshr_ln2_reg_288 <= {{size_k[31:4]}};
        lshr_ln_reg_278 <= {{add_ln111_fu_208_p2[32:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_s_reg_295[36 : 9] <= tmp_s_fu_254_p3[36 : 9];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_0_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_0_write;
    end else begin
        aSplit_0_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_10_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_10_write;
    end else begin
        aSplit_10_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_11_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_11_write;
    end else begin
        aSplit_11_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_12_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_12_write;
    end else begin
        aSplit_12_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_13_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_13_write;
    end else begin
        aSplit_13_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_14_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_14_write;
    end else begin
        aSplit_14_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_15_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_15_write;
    end else begin
        aSplit_15_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_1_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_1_write;
    end else begin
        aSplit_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_2_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_2_write;
    end else begin
        aSplit_2_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_3_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_3_write;
    end else begin
        aSplit_3_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_4_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_4_write;
    end else begin
        aSplit_4_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_5_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_5_write;
    end else begin
        aSplit_5_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_6_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_6_write;
    end else begin
        aSplit_6_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_7_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_7_write;
    end else begin
        aSplit_7_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_8_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_8_write;
    end else begin
        aSplit_8_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        aSplit_9_write = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_9_write;
    end else begin
        aSplit_9_write = 1'b0;
    end
end

always @ (*) begin
    if ((grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        m_axi_gmem0_ARVALID = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARVALID;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state10))) begin
        m_axi_gmem0_RREADY = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_RREADY;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        size_k_c8_blk_n = size_k_c8_full_n;
    end else begin
        size_k_c8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        size_k_c8_write_local = 1'b1;
    end else begin
        size_k_c8_write_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        size_m_c13_blk_n = size_m_c13_full_n;
    end else begin
        size_m_c13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        size_m_c13_write_local = 1'b1;
    end else begin
        size_m_c13_write_local = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        size_n_c5_blk_n = size_n_c5_full_n;
    end else begin
        size_n_c5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        size_n_c5_write_local = 1'b1;
    end else begin
        size_n_c5_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aSplit_0_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_0_din;

assign aSplit_10_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_10_din;

assign aSplit_11_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_11_din;

assign aSplit_12_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_12_din;

assign aSplit_13_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_13_din;

assign aSplit_14_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_14_din;

assign aSplit_15_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_15_din;

assign aSplit_1_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_1_din;

assign aSplit_2_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_2_din;

assign aSplit_3_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_3_din;

assign aSplit_4_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_4_din;

assign aSplit_5_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_5_din;

assign aSplit_6_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_6_din;

assign aSplit_7_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_7_din;

assign aSplit_8_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_8_din;

assign aSplit_9_din = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_aSplit_9_din;

assign add_ln111_fu_208_p2 = (zext_ln111_fu_204_p1 + 33'd511);

assign add_ln116_fu_228_p2 = (zext_ln116_fu_224_p1 + 33'd511);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state9 = ap_NS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (size_m_c13_full_n == 1'b0) | (size_k_c8_full_n == 1'b0) | (size_n_c5_full_n == 1'b0) | (real_start == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_ap_start_reg;

assign grp_fu_196_p0 = grp_fu_196_p00;

assign grp_fu_196_p00 = lshr_ln1_reg_283;

assign grp_fu_196_p1 = grp_fu_196_p10;

assign grp_fu_196_p10 = tmp_s_fu_254_p3;

assign grp_fu_200_p0 = grp_fu_200_p00;

assign grp_fu_200_p00 = lshr_ln_reg_278;

assign grp_fu_200_p1 = grp_fu_200_p10;

assign grp_fu_200_p10 = bound17_reg_310;

assign m_axi_gmem0_ARADDR = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARADDR;

assign m_axi_gmem0_ARBURST = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARBURST;

assign m_axi_gmem0_ARCACHE = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARCACHE;

assign m_axi_gmem0_ARID = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARID;

assign m_axi_gmem0_ARLEN = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARLEN;

assign m_axi_gmem0_ARLOCK = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARLOCK;

assign m_axi_gmem0_ARPROT = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARPROT;

assign m_axi_gmem0_ARQOS = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARQOS;

assign m_axi_gmem0_ARREGION = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARREGION;

assign m_axi_gmem0_ARSIZE = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARSIZE;

assign m_axi_gmem0_ARUSER = grp_ReadA_Pipeline_ReadA_N0_ReadA_M0_ReadA_K0_ReadA_N1_ReadA_N2_fu_152_m_axi_gmem0_ARUSER;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 512'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 64'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign size_k_c8_din = size_k;

assign size_k_c8_write = size_k_c8_write_local;

assign size_m_c13_din = size_m;

assign size_m_c13_write = size_m_c13_write_local;

assign size_n_c5_din = size_n;

assign size_n_c5_write = size_n_c5_write_local;

assign start_out = real_start;

assign tmp_s_fu_254_p3 = {{lshr_ln2_reg_288}, {9'd0}};

assign zext_ln111_fu_204_p1 = size_n;

assign zext_ln116_fu_224_p1 = size_m;

always @ (posedge ap_clk) begin
    tmp_s_reg_295[8:0] <= 9'b000000000;
end

endmodule //MatrixMultiplicationKernel_ReadA
