-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MatrixMultiplicationKernel_TransposeA is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    aSplit_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_0_empty_n : IN STD_LOGIC;
    aSplit_0_read : OUT STD_LOGIC;
    aSplit_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_1_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_1_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_1_empty_n : IN STD_LOGIC;
    aSplit_1_read : OUT STD_LOGIC;
    aSplit_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_2_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_2_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_2_empty_n : IN STD_LOGIC;
    aSplit_2_read : OUT STD_LOGIC;
    aSplit_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_3_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_3_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_3_empty_n : IN STD_LOGIC;
    aSplit_3_read : OUT STD_LOGIC;
    aSplit_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_4_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_4_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_4_empty_n : IN STD_LOGIC;
    aSplit_4_read : OUT STD_LOGIC;
    aSplit_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_5_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_5_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_5_empty_n : IN STD_LOGIC;
    aSplit_5_read : OUT STD_LOGIC;
    aSplit_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_6_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_6_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_6_empty_n : IN STD_LOGIC;
    aSplit_6_read : OUT STD_LOGIC;
    aSplit_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_7_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_7_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_7_empty_n : IN STD_LOGIC;
    aSplit_7_read : OUT STD_LOGIC;
    aSplit_8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_8_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_8_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_8_empty_n : IN STD_LOGIC;
    aSplit_8_read : OUT STD_LOGIC;
    aSplit_9_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_9_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_9_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_9_empty_n : IN STD_LOGIC;
    aSplit_9_read : OUT STD_LOGIC;
    aSplit_10_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_10_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_10_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_10_empty_n : IN STD_LOGIC;
    aSplit_10_read : OUT STD_LOGIC;
    aSplit_11_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_11_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_11_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_11_empty_n : IN STD_LOGIC;
    aSplit_11_read : OUT STD_LOGIC;
    aSplit_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_12_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_12_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_12_empty_n : IN STD_LOGIC;
    aSplit_12_read : OUT STD_LOGIC;
    aSplit_13_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_13_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_13_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_13_empty_n : IN STD_LOGIC;
    aSplit_13_read : OUT STD_LOGIC;
    aSplit_14_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_14_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_14_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_14_empty_n : IN STD_LOGIC;
    aSplit_14_read : OUT STD_LOGIC;
    aSplit_15_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_15_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_15_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_15_empty_n : IN STD_LOGIC;
    aSplit_15_read : OUT STD_LOGIC;
    aPipes_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    aPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_0_full_n : IN STD_LOGIC;
    aPipes_0_write : OUT STD_LOGIC;
    size_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    size_n_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    size_n_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    size_n_empty_n : IN STD_LOGIC;
    size_n_read : OUT STD_LOGIC;
    size_k_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    size_k_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    size_k_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    size_k_empty_n : IN STD_LOGIC;
    size_k_read : OUT STD_LOGIC;
    size_m_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    size_m_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    size_m_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    size_m_empty_n : IN STD_LOGIC;
    size_m_read : OUT STD_LOGIC );
end;


architecture behav of MatrixMultiplicationKernel_TransposeA is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv33_1FF : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000111111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal size_n_blk_n : STD_LOGIC;
    signal size_k_blk_n : STD_LOGIC;
    signal size_m_blk_n : STD_LOGIC;
    signal size_k_1_reg_211 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln_reg_217 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln2_reg_222 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_fu_187_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_reg_227 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_138_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound4_reg_242 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_142_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal bound16_reg_258 : STD_LOGIC_VECTOR (86 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_idle : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_ready : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_14_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_13_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_12_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_11_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_10_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_9_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_8_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_7_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_6_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_5_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_4_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_3_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_2_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_1_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_0_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_15_read : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aPipes_0_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aPipes_0_write : STD_LOGIC;
    signal grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal size_m_read_local : STD_LOGIC;
    signal size_k_read_local : STD_LOGIC;
    signal size_n_read_local : STD_LOGIC;
    signal grp_fu_138_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_138_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_142_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_142_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_fu_147_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln111_fu_151_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln116_fu_167_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln116_fu_171_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal grp_fu_138_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_138_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_142_p00 : STD_LOGIC_VECTOR (86 downto 0);
    signal grp_fu_142_p10 : STD_LOGIC_VECTOR (86 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MatrixMultiplicationKernel_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        aSplit_14_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_14_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_14_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_14_empty_n : IN STD_LOGIC;
        aSplit_14_read : OUT STD_LOGIC;
        aSplit_13_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_13_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_13_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_13_empty_n : IN STD_LOGIC;
        aSplit_13_read : OUT STD_LOGIC;
        aSplit_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_12_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_12_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_12_empty_n : IN STD_LOGIC;
        aSplit_12_read : OUT STD_LOGIC;
        aSplit_11_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_11_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_11_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_11_empty_n : IN STD_LOGIC;
        aSplit_11_read : OUT STD_LOGIC;
        aSplit_10_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_10_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_10_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_10_empty_n : IN STD_LOGIC;
        aSplit_10_read : OUT STD_LOGIC;
        aSplit_9_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_9_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_9_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_9_empty_n : IN STD_LOGIC;
        aSplit_9_read : OUT STD_LOGIC;
        aSplit_8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_8_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_8_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_8_empty_n : IN STD_LOGIC;
        aSplit_8_read : OUT STD_LOGIC;
        aSplit_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_7_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_7_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_7_empty_n : IN STD_LOGIC;
        aSplit_7_read : OUT STD_LOGIC;
        aSplit_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_6_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_6_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_6_empty_n : IN STD_LOGIC;
        aSplit_6_read : OUT STD_LOGIC;
        aSplit_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_5_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_5_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_5_empty_n : IN STD_LOGIC;
        aSplit_5_read : OUT STD_LOGIC;
        aSplit_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_4_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_4_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_4_empty_n : IN STD_LOGIC;
        aSplit_4_read : OUT STD_LOGIC;
        aSplit_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_3_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_3_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_3_empty_n : IN STD_LOGIC;
        aSplit_3_read : OUT STD_LOGIC;
        aSplit_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_2_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_2_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_2_empty_n : IN STD_LOGIC;
        aSplit_2_read : OUT STD_LOGIC;
        aSplit_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_1_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_1_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_1_empty_n : IN STD_LOGIC;
        aSplit_1_read : OUT STD_LOGIC;
        aSplit_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_0_empty_n : IN STD_LOGIC;
        aSplit_0_read : OUT STD_LOGIC;
        aSplit_15_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aSplit_15_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_15_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        aSplit_15_empty_n : IN STD_LOGIC;
        aSplit_15_read : OUT STD_LOGIC;
        aPipes_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        aPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_0_full_n : IN STD_LOGIC;
        aPipes_0_write : OUT STD_LOGIC;
        bound16 : IN STD_LOGIC_VECTOR (86 downto 0);
        bound4 : IN STD_LOGIC_VECTOR (63 downto 0);
        size_k_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        bound : IN STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component MatrixMultiplicationKernel_mul_24ns_41ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (40 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component MatrixMultiplicationKernel_mul_24ns_64ns_87_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (86 downto 0) );
    end component;



begin
    grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96 : component MatrixMultiplicationKernel_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start,
        ap_done => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done,
        ap_idle => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_idle,
        ap_ready => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_ready,
        aSplit_14_dout => aSplit_14_dout,
        aSplit_14_num_data_valid => ap_const_lv11_0,
        aSplit_14_fifo_cap => ap_const_lv11_0,
        aSplit_14_empty_n => aSplit_14_empty_n,
        aSplit_14_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_14_read,
        aSplit_13_dout => aSplit_13_dout,
        aSplit_13_num_data_valid => ap_const_lv11_0,
        aSplit_13_fifo_cap => ap_const_lv11_0,
        aSplit_13_empty_n => aSplit_13_empty_n,
        aSplit_13_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_13_read,
        aSplit_12_dout => aSplit_12_dout,
        aSplit_12_num_data_valid => ap_const_lv11_0,
        aSplit_12_fifo_cap => ap_const_lv11_0,
        aSplit_12_empty_n => aSplit_12_empty_n,
        aSplit_12_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_12_read,
        aSplit_11_dout => aSplit_11_dout,
        aSplit_11_num_data_valid => ap_const_lv11_0,
        aSplit_11_fifo_cap => ap_const_lv11_0,
        aSplit_11_empty_n => aSplit_11_empty_n,
        aSplit_11_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_11_read,
        aSplit_10_dout => aSplit_10_dout,
        aSplit_10_num_data_valid => ap_const_lv11_0,
        aSplit_10_fifo_cap => ap_const_lv11_0,
        aSplit_10_empty_n => aSplit_10_empty_n,
        aSplit_10_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_10_read,
        aSplit_9_dout => aSplit_9_dout,
        aSplit_9_num_data_valid => ap_const_lv11_0,
        aSplit_9_fifo_cap => ap_const_lv11_0,
        aSplit_9_empty_n => aSplit_9_empty_n,
        aSplit_9_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_9_read,
        aSplit_8_dout => aSplit_8_dout,
        aSplit_8_num_data_valid => ap_const_lv11_0,
        aSplit_8_fifo_cap => ap_const_lv11_0,
        aSplit_8_empty_n => aSplit_8_empty_n,
        aSplit_8_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_8_read,
        aSplit_7_dout => aSplit_7_dout,
        aSplit_7_num_data_valid => ap_const_lv11_0,
        aSplit_7_fifo_cap => ap_const_lv11_0,
        aSplit_7_empty_n => aSplit_7_empty_n,
        aSplit_7_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_7_read,
        aSplit_6_dout => aSplit_6_dout,
        aSplit_6_num_data_valid => ap_const_lv11_0,
        aSplit_6_fifo_cap => ap_const_lv11_0,
        aSplit_6_empty_n => aSplit_6_empty_n,
        aSplit_6_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_6_read,
        aSplit_5_dout => aSplit_5_dout,
        aSplit_5_num_data_valid => ap_const_lv11_0,
        aSplit_5_fifo_cap => ap_const_lv11_0,
        aSplit_5_empty_n => aSplit_5_empty_n,
        aSplit_5_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_5_read,
        aSplit_4_dout => aSplit_4_dout,
        aSplit_4_num_data_valid => ap_const_lv11_0,
        aSplit_4_fifo_cap => ap_const_lv11_0,
        aSplit_4_empty_n => aSplit_4_empty_n,
        aSplit_4_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_4_read,
        aSplit_3_dout => aSplit_3_dout,
        aSplit_3_num_data_valid => ap_const_lv11_0,
        aSplit_3_fifo_cap => ap_const_lv11_0,
        aSplit_3_empty_n => aSplit_3_empty_n,
        aSplit_3_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_3_read,
        aSplit_2_dout => aSplit_2_dout,
        aSplit_2_num_data_valid => ap_const_lv11_0,
        aSplit_2_fifo_cap => ap_const_lv11_0,
        aSplit_2_empty_n => aSplit_2_empty_n,
        aSplit_2_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_2_read,
        aSplit_1_dout => aSplit_1_dout,
        aSplit_1_num_data_valid => ap_const_lv11_0,
        aSplit_1_fifo_cap => ap_const_lv11_0,
        aSplit_1_empty_n => aSplit_1_empty_n,
        aSplit_1_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_1_read,
        aSplit_0_dout => aSplit_0_dout,
        aSplit_0_num_data_valid => ap_const_lv11_0,
        aSplit_0_fifo_cap => ap_const_lv11_0,
        aSplit_0_empty_n => aSplit_0_empty_n,
        aSplit_0_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_0_read,
        aSplit_15_dout => aSplit_15_dout,
        aSplit_15_num_data_valid => ap_const_lv11_0,
        aSplit_15_fifo_cap => ap_const_lv11_0,
        aSplit_15_empty_n => aSplit_15_empty_n,
        aSplit_15_read => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_15_read,
        aPipes_0_din => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aPipes_0_din,
        aPipes_0_num_data_valid => ap_const_lv3_0,
        aPipes_0_fifo_cap => ap_const_lv3_0,
        aPipes_0_full_n => aPipes_0_full_n,
        aPipes_0_write => grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aPipes_0_write,
        bound16 => bound16_reg_258,
        bound4 => bound4_reg_242,
        size_k_1 => size_k_1_reg_211,
        bound => tmp_reg_227);

    mul_24ns_41ns_64_2_1_U77 : component MatrixMultiplicationKernel_mul_24ns_41ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 24,
        din1_WIDTH => 41,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_138_p0,
        din1 => grp_fu_138_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_138_p2);

    mul_24ns_64ns_87_5_1_U78 : component MatrixMultiplicationKernel_mul_24ns_64ns_87_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 24,
        din1_WIDTH => 64,
        dout_WIDTH => 87)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_142_p0,
        din1 => grp_fu_142_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_142_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_ready = ap_const_logic_1)) then 
                    grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                bound16_reg_258 <= grp_fu_142_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                bound4_reg_242 <= grp_fu_138_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                size_k_1_reg_211 <= size_k_dout;
                trunc_ln2_reg_222 <= add_ln116_fu_171_p2(32 downto 9);
                trunc_ln_reg_217 <= add_ln111_fu_151_p2(32 downto 9);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    tmp_reg_227(40 downto 9) <= tmp_fu_187_p3(40 downto 9);
            end if;
        end if;
    end process;
    tmp_reg_227(8 downto 0) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    aPipes_0_din <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aPipes_0_din;

    aPipes_0_write_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aPipes_0_write, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aPipes_0_write <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aPipes_0_write;
        else 
            aPipes_0_write <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_0_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_0_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_0_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_0_read;
        else 
            aSplit_0_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_10_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_10_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_10_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_10_read;
        else 
            aSplit_10_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_11_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_11_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_11_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_11_read;
        else 
            aSplit_11_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_12_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_12_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_12_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_12_read;
        else 
            aSplit_12_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_13_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_13_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_13_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_13_read;
        else 
            aSplit_13_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_14_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_14_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_14_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_14_read;
        else 
            aSplit_14_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_15_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_15_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_15_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_15_read;
        else 
            aSplit_15_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_1_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_1_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_1_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_1_read;
        else 
            aSplit_1_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_2_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_2_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_2_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_2_read;
        else 
            aSplit_2_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_3_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_3_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_3_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_3_read;
        else 
            aSplit_3_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_4_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_4_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_4_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_4_read;
        else 
            aSplit_4_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_5_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_5_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_5_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_5_read;
        else 
            aSplit_5_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_6_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_6_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_6_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_6_read;
        else 
            aSplit_6_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_7_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_7_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_7_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_7_read;
        else 
            aSplit_7_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_8_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_8_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_8_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_8_read;
        else 
            aSplit_8_read <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_9_read_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_9_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aSplit_9_read <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_aSplit_9_read;
        else 
            aSplit_9_read <= ap_const_logic_0;
        end if; 
    end process;

    add_ln111_fu_151_p2 <= std_logic_vector(unsigned(zext_ln111_fu_147_p1) + unsigned(ap_const_lv33_1FF));
    add_ln116_fu_171_p2 <= std_logic_vector(unsigned(zext_ln116_fu_167_p1) + unsigned(ap_const_lv33_1FF));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done)
    begin
        if ((grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, size_n_empty_n, size_k_empty_n, size_m_empty_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0) or (size_m_empty_n = ap_const_logic_0) or (size_k_empty_n = ap_const_logic_0) or (size_n_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done, ap_CS_fsm_state9)
    begin
        if (((grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done, ap_CS_fsm_state9)
    begin
        if (((grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start <= grp_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1_fu_96_ap_start_reg;
    grp_fu_138_p0 <= grp_fu_138_p00(24 - 1 downto 0);
    grp_fu_138_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln2_reg_222),64));
    grp_fu_138_p1 <= grp_fu_138_p10(41 - 1 downto 0);
    grp_fu_138_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_187_p3),64));
    grp_fu_142_p0 <= grp_fu_142_p00(24 - 1 downto 0);
    grp_fu_142_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_reg_217),87));
    grp_fu_142_p1 <= grp_fu_142_p10(64 - 1 downto 0);
    grp_fu_142_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound4_reg_242),87));

    size_k_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, size_k_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            size_k_blk_n <= size_k_empty_n;
        else 
            size_k_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    size_k_read <= size_k_read_local;

    size_k_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            size_k_read_local <= ap_const_logic_1;
        else 
            size_k_read_local <= ap_const_logic_0;
        end if; 
    end process;


    size_m_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, size_m_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            size_m_blk_n <= size_m_empty_n;
        else 
            size_m_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    size_m_read <= size_m_read_local;

    size_m_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            size_m_read_local <= ap_const_logic_1;
        else 
            size_m_read_local <= ap_const_logic_0;
        end if; 
    end process;


    size_n_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, size_n_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            size_n_blk_n <= size_n_empty_n;
        else 
            size_n_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    size_n_read <= size_n_read_local;

    size_n_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            size_n_read_local <= ap_const_logic_1;
        else 
            size_n_read_local <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_187_p3 <= (size_k_1_reg_211 & ap_const_lv9_0);
    zext_ln111_fu_147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(size_n_dout),33));
    zext_ln116_fu_167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(size_m_dout),33));
end behav;
