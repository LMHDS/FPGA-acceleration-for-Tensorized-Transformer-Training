-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MatrixMultiplicationKernel_ProcessingElement_Pipeline_Pipeline_N_Pipeline_M is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    aPipes_31_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aPipes_31_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_31_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_31_empty_n : IN STD_LOGIC;
    aPipes_31_read : OUT STD_LOGIC;
    bPipes_31_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    bPipes_31_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    bPipes_31_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    bPipes_31_empty_n : IN STD_LOGIC;
    bPipes_31_read : OUT STD_LOGIC;
    m0 : IN STD_LOGIC_VECTOR (22 downto 0);
    cBuffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cBuffer_ce0 : OUT STD_LOGIC;
    cBuffer_we0 : OUT STD_LOGIC;
    cBuffer_d0 : OUT STD_LOGIC_VECTOR (255 downto 0);
    cBuffer_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    cBuffer_ce1 : OUT STD_LOGIC;
    cBuffer_q1 : IN STD_LOGIC_VECTOR (255 downto 0);
    cmp111 : IN STD_LOGIC_VECTOR (0 downto 0);
    size_m_load : IN STD_LOGIC_VECTOR (31 downto 0);
    cond90 : IN STD_LOGIC_VECTOR (4 downto 0);
    aBuffer_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    aBuffer_ce0 : OUT STD_LOGIC;
    aBuffer_we0 : OUT STD_LOGIC;
    aBuffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    aBuffer_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    aBuffer_ce1 : OUT STD_LOGIC;
    aBuffer_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    mul : IN STD_LOGIC_VECTOR (26 downto 0);
    cond : IN STD_LOGIC_VECTOR (4 downto 0);
    size_n_load : IN STD_LOGIC_VECTOR (31 downto 0);
    brmerge282 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of MatrixMultiplicationKernel_ProcessingElement_Pipeline_Pipeline_N_Pipeline_M is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal and_ln80_1_reg_1069 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln64_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal bPipes_31_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal aPipes_31_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln67_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln67_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln64_fu_367_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln64_reg_1063 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln64_reg_1063_pp0_iter2_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln64_reg_1063_pp0_iter3_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln64_reg_1063_pp0_iter4_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln64_reg_1063_pp0_iter5_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln64_reg_1063_pp0_iter6_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln80_1_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln64_1_fu_428_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln64_1_reg_1073 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_159_fu_435_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_159_reg_1079 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_159_reg_1079_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_159_reg_1079_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_159_reg_1079_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_159_reg_1079_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal inBoundsN_fu_475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsN_reg_1089_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal aVal_reg_1101 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln170_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln170_reg_1106 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1111 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1116 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1131 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1136 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_1141 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_fu_554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cBuffer_addr_reg_1198 : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_addr_reg_1198_pp0_iter8_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_addr_reg_1198_pp0_iter9_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_addr_reg_1198_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_addr_reg_1198_pp0_iter11_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_addr_reg_1198_pp0_iter12_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_addr_reg_1198_pp0_iter13_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_addr_reg_1198_pp0_iter14_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_addr_reg_1198_pp0_iter15_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal inBoundsM_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_reg_1204_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_fu_644_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_1_reg_1209_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_2_reg_1214_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_3_reg_1219_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_4_reg_1224_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_fu_700_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_5_reg_1229_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_fu_714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_6_reg_1234_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239 : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal inBoundsM_7_reg_1239_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_291_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_16_reg_1244 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln170_1_fu_740_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln170_1_reg_1249 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_17_reg_1254 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1259 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_299_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_18_reg_1264 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1269 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_303_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_19_reg_1274 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1279 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_307_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_20_reg_1284 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_311_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_21_reg_1294 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1299 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_22_reg_1304 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_1309 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_23_reg_1314 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_1319 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_2_fu_814_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_2_reg_1324 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_2_reg_1324_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_2_reg_1324_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_2_reg_1324_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_2_reg_1324_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_2_reg_1324_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_2_reg_1324_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_4_fu_818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_4_reg_1330 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_4_reg_1330_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_4_reg_1330_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_4_reg_1330_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_4_reg_1330_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_4_reg_1330_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_4_reg_1330_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_6_fu_822_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_6_reg_1336 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_6_reg_1336_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_6_reg_1336_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_6_reg_1336_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_6_reg_1336_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_6_reg_1336_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_6_reg_1336_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_8_fu_826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_8_reg_1342 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_8_reg_1342_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_8_reg_1342_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_8_reg_1342_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_8_reg_1342_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_8_reg_1342_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_8_reg_1342_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_10_fu_830_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_10_reg_1348 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_10_reg_1348_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_10_reg_1348_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_10_reg_1348_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_10_reg_1348_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_10_reg_1348_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_10_reg_1348_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_12_fu_834_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_12_reg_1354 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_12_reg_1354_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_12_reg_1354_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_12_reg_1354_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_12_reg_1354_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_12_reg_1354_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_12_reg_1354_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_14_fu_838_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_14_reg_1360 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_14_reg_1360_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_14_reg_1360_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_14_reg_1360_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_14_reg_1360_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_14_reg_1360_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_14_reg_1360_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_16_fu_842_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_16_reg_1366 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_16_reg_1366_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_16_reg_1366_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_16_reg_1366_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_16_reg_1366_pp0_iter13_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_16_reg_1366_pp0_iter14_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln32_16_reg_1366_pp0_iter15_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_reg_1372 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_263_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_3_reg_1377 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_5_reg_1382 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_271_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_7_reg_1387 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_9_reg_1392 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_279_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_11_reg_1397 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_283_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_13_reg_1402 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_15_reg_1407 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_cast_fu_444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add91_cast_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add115_cast_fu_613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m1_fu_144 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln67_fu_408_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal n1_fu_148 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal indvar_flatten_fu_152 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal add_ln64_fu_347_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (10 downto 0);
    signal aPipes_31_read_local : STD_LOGIC;
    signal bPipes_31_read_local : STD_LOGIC;
    signal aBuffer_we0_local : STD_LOGIC;
    signal aBuffer_ce0_local : STD_LOGIC;
    signal aBuffer_ce1_local : STD_LOGIC;
    signal cBuffer_ce1_local : STD_LOGIC;
    signal cBuffer_we0_local : STD_LOGIC;
    signal tmp_14_fu_958_p9 : STD_LOGIC_VECTOR (255 downto 0);
    signal cBuffer_ce0_local : STD_LOGIC;
    signal grp_fu_259_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_263_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_267_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_271_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_275_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_279_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_283_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_287_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_295_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_303_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_307_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_315_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_319_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_381_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln82_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln80_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln83_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln64_1_fu_422_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_fu_439_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add91_fu_457_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln64_fu_454_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add106_fu_466_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal add106_cast_fu_471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul1_fu_597_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln67_fu_604_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add115_fu_607_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_fu_618_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add1_fu_621_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln_fu_635_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln125_s_fu_649_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln125_1_fu_663_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln125_2_fu_677_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln125_3_fu_691_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln125_4_fu_705_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln125_5_fu_719_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal cPrev_1_fu_733_p3 : STD_LOGIC_VECTOR (255 downto 0);
    signal inBounds_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_fu_850_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inBounds_1_fu_860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_1_fu_864_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inBounds_2_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_2_fu_878_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inBounds_3_fu_888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_3_fu_892_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inBounds_4_fu_902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_4_fu_906_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inBounds_5_fu_916_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_5_fu_920_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inBounds_6_fu_930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_6_fu_934_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal inBounds_7_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln296_7_fu_948_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln36_7_fu_954_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln36_6_fu_940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln36_5_fu_926_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln36_4_fu_912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln36_3_fu_898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln36_2_fu_884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln36_1_fu_870_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln36_fu_856_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_259_ce : STD_LOGIC;
    signal grp_fu_263_ce : STD_LOGIC;
    signal grp_fu_267_ce : STD_LOGIC;
    signal grp_fu_271_ce : STD_LOGIC;
    signal grp_fu_275_ce : STD_LOGIC;
    signal grp_fu_279_ce : STD_LOGIC;
    signal grp_fu_283_ce : STD_LOGIC;
    signal grp_fu_287_ce : STD_LOGIC;
    signal grp_fu_291_ce : STD_LOGIC;
    signal grp_fu_295_ce : STD_LOGIC;
    signal grp_fu_299_ce : STD_LOGIC;
    signal grp_fu_303_ce : STD_LOGIC;
    signal grp_fu_307_ce : STD_LOGIC;
    signal grp_fu_311_ce : STD_LOGIC;
    signal grp_fu_315_ce : STD_LOGIC;
    signal grp_fu_319_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_enable_operation_61 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_71 : BOOLEAN;
    signal ap_enable_state4_pp0_iter3_stage0 : BOOLEAN;
    signal ap_enable_operation_72 : BOOLEAN;
    signal ap_enable_state5_pp0_iter4_stage0 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_7_full_dsp_1_U1676 : component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_259_p0,
        din1 => res_16_reg_1244,
        ce => grp_fu_259_ce,
        dout => grp_fu_259_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U1677 : component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_263_p0,
        din1 => res_17_reg_1254,
        ce => grp_fu_263_ce,
        dout => grp_fu_263_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U1678 : component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_267_p0,
        din1 => res_18_reg_1264,
        ce => grp_fu_267_ce,
        dout => grp_fu_267_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U1679 : component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_271_p0,
        din1 => res_19_reg_1274,
        ce => grp_fu_271_ce,
        dout => grp_fu_271_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U1680 : component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_275_p0,
        din1 => res_20_reg_1284,
        ce => grp_fu_275_ce,
        dout => grp_fu_275_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U1681 : component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_279_p0,
        din1 => res_21_reg_1294,
        ce => grp_fu_279_ce,
        dout => grp_fu_279_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U1682 : component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_283_p0,
        din1 => res_22_reg_1304,
        ce => grp_fu_283_ce,
        dout => grp_fu_283_p2);

    fadd_32ns_32ns_32_7_full_dsp_1_U1683 : component MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_287_p0,
        din1 => res_23_reg_1314,
        ce => grp_fu_287_ce,
        dout => grp_fu_287_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1684 : component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_554_p1,
        din1 => grp_fu_291_p1,
        ce => grp_fu_291_ce,
        dout => grp_fu_291_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1685 : component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_554_p1,
        din1 => grp_fu_295_p1,
        ce => grp_fu_295_ce,
        dout => grp_fu_295_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1686 : component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_554_p1,
        din1 => grp_fu_299_p1,
        ce => grp_fu_299_ce,
        dout => grp_fu_299_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1687 : component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_554_p1,
        din1 => grp_fu_303_p1,
        ce => grp_fu_303_ce,
        dout => grp_fu_303_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1688 : component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_554_p1,
        din1 => grp_fu_307_p1,
        ce => grp_fu_307_ce,
        dout => grp_fu_307_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1689 : component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_554_p1,
        din1 => grp_fu_311_p1,
        ce => grp_fu_311_ce,
        dout => grp_fu_311_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1690 : component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_554_p1,
        din1 => grp_fu_315_p1,
        ce => grp_fu_315_ce,
        dout => grp_fu_315_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U1691 : component MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => bitcast_ln32_fu_554_p1,
        din1 => grp_fu_319_p1,
        ce => grp_fu_319_ce,
        dout => grp_fu_319_p2);

    flow_control_loop_pipe_sequential_init_U : component MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln64_fu_341_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_152 <= add_ln64_fu_347_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_152 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;

    m1_fu_144_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    m1_fu_144 <= ap_const_lv7_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    m1_fu_144 <= add_ln67_fu_408_p2;
                end if;
            end if; 
        end if;
    end process;

    n1_fu_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    n1_fu_148 <= ap_const_lv5_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    n1_fu_148 <= select_ln64_1_fu_428_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                aVal_reg_1101 <= aBuffer_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln80_1_reg_1069 <= and_ln80_1_fu_402_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln67_reg_1058 <= icmp_ln67_fu_361_p2;
                select_ln64_reg_1063 <= select_ln64_fu_367_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                bitcast_ln32_10_reg_1348 <= bitcast_ln32_10_fu_830_p1;
                bitcast_ln32_10_reg_1348_pp0_iter10_reg <= bitcast_ln32_10_reg_1348;
                bitcast_ln32_10_reg_1348_pp0_iter11_reg <= bitcast_ln32_10_reg_1348_pp0_iter10_reg;
                bitcast_ln32_10_reg_1348_pp0_iter12_reg <= bitcast_ln32_10_reg_1348_pp0_iter11_reg;
                bitcast_ln32_10_reg_1348_pp0_iter13_reg <= bitcast_ln32_10_reg_1348_pp0_iter12_reg;
                bitcast_ln32_10_reg_1348_pp0_iter14_reg <= bitcast_ln32_10_reg_1348_pp0_iter13_reg;
                bitcast_ln32_10_reg_1348_pp0_iter15_reg <= bitcast_ln32_10_reg_1348_pp0_iter14_reg;
                bitcast_ln32_12_reg_1354 <= bitcast_ln32_12_fu_834_p1;
                bitcast_ln32_12_reg_1354_pp0_iter10_reg <= bitcast_ln32_12_reg_1354;
                bitcast_ln32_12_reg_1354_pp0_iter11_reg <= bitcast_ln32_12_reg_1354_pp0_iter10_reg;
                bitcast_ln32_12_reg_1354_pp0_iter12_reg <= bitcast_ln32_12_reg_1354_pp0_iter11_reg;
                bitcast_ln32_12_reg_1354_pp0_iter13_reg <= bitcast_ln32_12_reg_1354_pp0_iter12_reg;
                bitcast_ln32_12_reg_1354_pp0_iter14_reg <= bitcast_ln32_12_reg_1354_pp0_iter13_reg;
                bitcast_ln32_12_reg_1354_pp0_iter15_reg <= bitcast_ln32_12_reg_1354_pp0_iter14_reg;
                bitcast_ln32_14_reg_1360 <= bitcast_ln32_14_fu_838_p1;
                bitcast_ln32_14_reg_1360_pp0_iter10_reg <= bitcast_ln32_14_reg_1360;
                bitcast_ln32_14_reg_1360_pp0_iter11_reg <= bitcast_ln32_14_reg_1360_pp0_iter10_reg;
                bitcast_ln32_14_reg_1360_pp0_iter12_reg <= bitcast_ln32_14_reg_1360_pp0_iter11_reg;
                bitcast_ln32_14_reg_1360_pp0_iter13_reg <= bitcast_ln32_14_reg_1360_pp0_iter12_reg;
                bitcast_ln32_14_reg_1360_pp0_iter14_reg <= bitcast_ln32_14_reg_1360_pp0_iter13_reg;
                bitcast_ln32_14_reg_1360_pp0_iter15_reg <= bitcast_ln32_14_reg_1360_pp0_iter14_reg;
                bitcast_ln32_16_reg_1366 <= bitcast_ln32_16_fu_842_p1;
                bitcast_ln32_16_reg_1366_pp0_iter10_reg <= bitcast_ln32_16_reg_1366;
                bitcast_ln32_16_reg_1366_pp0_iter11_reg <= bitcast_ln32_16_reg_1366_pp0_iter10_reg;
                bitcast_ln32_16_reg_1366_pp0_iter12_reg <= bitcast_ln32_16_reg_1366_pp0_iter11_reg;
                bitcast_ln32_16_reg_1366_pp0_iter13_reg <= bitcast_ln32_16_reg_1366_pp0_iter12_reg;
                bitcast_ln32_16_reg_1366_pp0_iter14_reg <= bitcast_ln32_16_reg_1366_pp0_iter13_reg;
                bitcast_ln32_16_reg_1366_pp0_iter15_reg <= bitcast_ln32_16_reg_1366_pp0_iter14_reg;
                bitcast_ln32_2_reg_1324 <= bitcast_ln32_2_fu_814_p1;
                bitcast_ln32_2_reg_1324_pp0_iter10_reg <= bitcast_ln32_2_reg_1324;
                bitcast_ln32_2_reg_1324_pp0_iter11_reg <= bitcast_ln32_2_reg_1324_pp0_iter10_reg;
                bitcast_ln32_2_reg_1324_pp0_iter12_reg <= bitcast_ln32_2_reg_1324_pp0_iter11_reg;
                bitcast_ln32_2_reg_1324_pp0_iter13_reg <= bitcast_ln32_2_reg_1324_pp0_iter12_reg;
                bitcast_ln32_2_reg_1324_pp0_iter14_reg <= bitcast_ln32_2_reg_1324_pp0_iter13_reg;
                bitcast_ln32_2_reg_1324_pp0_iter15_reg <= bitcast_ln32_2_reg_1324_pp0_iter14_reg;
                bitcast_ln32_4_reg_1330 <= bitcast_ln32_4_fu_818_p1;
                bitcast_ln32_4_reg_1330_pp0_iter10_reg <= bitcast_ln32_4_reg_1330;
                bitcast_ln32_4_reg_1330_pp0_iter11_reg <= bitcast_ln32_4_reg_1330_pp0_iter10_reg;
                bitcast_ln32_4_reg_1330_pp0_iter12_reg <= bitcast_ln32_4_reg_1330_pp0_iter11_reg;
                bitcast_ln32_4_reg_1330_pp0_iter13_reg <= bitcast_ln32_4_reg_1330_pp0_iter12_reg;
                bitcast_ln32_4_reg_1330_pp0_iter14_reg <= bitcast_ln32_4_reg_1330_pp0_iter13_reg;
                bitcast_ln32_4_reg_1330_pp0_iter15_reg <= bitcast_ln32_4_reg_1330_pp0_iter14_reg;
                bitcast_ln32_6_reg_1336 <= bitcast_ln32_6_fu_822_p1;
                bitcast_ln32_6_reg_1336_pp0_iter10_reg <= bitcast_ln32_6_reg_1336;
                bitcast_ln32_6_reg_1336_pp0_iter11_reg <= bitcast_ln32_6_reg_1336_pp0_iter10_reg;
                bitcast_ln32_6_reg_1336_pp0_iter12_reg <= bitcast_ln32_6_reg_1336_pp0_iter11_reg;
                bitcast_ln32_6_reg_1336_pp0_iter13_reg <= bitcast_ln32_6_reg_1336_pp0_iter12_reg;
                bitcast_ln32_6_reg_1336_pp0_iter14_reg <= bitcast_ln32_6_reg_1336_pp0_iter13_reg;
                bitcast_ln32_6_reg_1336_pp0_iter15_reg <= bitcast_ln32_6_reg_1336_pp0_iter14_reg;
                bitcast_ln32_8_reg_1342 <= bitcast_ln32_8_fu_826_p1;
                bitcast_ln32_8_reg_1342_pp0_iter10_reg <= bitcast_ln32_8_reg_1342;
                bitcast_ln32_8_reg_1342_pp0_iter11_reg <= bitcast_ln32_8_reg_1342_pp0_iter10_reg;
                bitcast_ln32_8_reg_1342_pp0_iter12_reg <= bitcast_ln32_8_reg_1342_pp0_iter11_reg;
                bitcast_ln32_8_reg_1342_pp0_iter13_reg <= bitcast_ln32_8_reg_1342_pp0_iter12_reg;
                bitcast_ln32_8_reg_1342_pp0_iter14_reg <= bitcast_ln32_8_reg_1342_pp0_iter13_reg;
                bitcast_ln32_8_reg_1342_pp0_iter15_reg <= bitcast_ln32_8_reg_1342_pp0_iter14_reg;
                cBuffer_addr_reg_1198 <= add115_cast_fu_613_p1(10 - 1 downto 0);
                cBuffer_addr_reg_1198_pp0_iter10_reg <= cBuffer_addr_reg_1198_pp0_iter9_reg;
                cBuffer_addr_reg_1198_pp0_iter11_reg <= cBuffer_addr_reg_1198_pp0_iter10_reg;
                cBuffer_addr_reg_1198_pp0_iter12_reg <= cBuffer_addr_reg_1198_pp0_iter11_reg;
                cBuffer_addr_reg_1198_pp0_iter13_reg <= cBuffer_addr_reg_1198_pp0_iter12_reg;
                cBuffer_addr_reg_1198_pp0_iter14_reg <= cBuffer_addr_reg_1198_pp0_iter13_reg;
                cBuffer_addr_reg_1198_pp0_iter15_reg <= cBuffer_addr_reg_1198_pp0_iter14_reg;
                cBuffer_addr_reg_1198_pp0_iter8_reg <= cBuffer_addr_reg_1198;
                cBuffer_addr_reg_1198_pp0_iter9_reg <= cBuffer_addr_reg_1198_pp0_iter8_reg;
                empty_159_reg_1079 <= empty_159_fu_435_p1;
                empty_159_reg_1079_pp0_iter3_reg <= empty_159_reg_1079;
                empty_159_reg_1079_pp0_iter4_reg <= empty_159_reg_1079_pp0_iter3_reg;
                empty_159_reg_1079_pp0_iter5_reg <= empty_159_reg_1079_pp0_iter4_reg;
                empty_159_reg_1079_pp0_iter6_reg <= empty_159_reg_1079_pp0_iter5_reg;
                inBoundsM_1_reg_1209 <= inBoundsM_1_fu_644_p2;
                inBoundsM_1_reg_1209_pp0_iter10_reg <= inBoundsM_1_reg_1209_pp0_iter9_reg;
                inBoundsM_1_reg_1209_pp0_iter11_reg <= inBoundsM_1_reg_1209_pp0_iter10_reg;
                inBoundsM_1_reg_1209_pp0_iter12_reg <= inBoundsM_1_reg_1209_pp0_iter11_reg;
                inBoundsM_1_reg_1209_pp0_iter13_reg <= inBoundsM_1_reg_1209_pp0_iter12_reg;
                inBoundsM_1_reg_1209_pp0_iter14_reg <= inBoundsM_1_reg_1209_pp0_iter13_reg;
                inBoundsM_1_reg_1209_pp0_iter15_reg <= inBoundsM_1_reg_1209_pp0_iter14_reg;
                inBoundsM_1_reg_1209_pp0_iter8_reg <= inBoundsM_1_reg_1209;
                inBoundsM_1_reg_1209_pp0_iter9_reg <= inBoundsM_1_reg_1209_pp0_iter8_reg;
                inBoundsM_2_reg_1214 <= inBoundsM_2_fu_658_p2;
                inBoundsM_2_reg_1214_pp0_iter10_reg <= inBoundsM_2_reg_1214_pp0_iter9_reg;
                inBoundsM_2_reg_1214_pp0_iter11_reg <= inBoundsM_2_reg_1214_pp0_iter10_reg;
                inBoundsM_2_reg_1214_pp0_iter12_reg <= inBoundsM_2_reg_1214_pp0_iter11_reg;
                inBoundsM_2_reg_1214_pp0_iter13_reg <= inBoundsM_2_reg_1214_pp0_iter12_reg;
                inBoundsM_2_reg_1214_pp0_iter14_reg <= inBoundsM_2_reg_1214_pp0_iter13_reg;
                inBoundsM_2_reg_1214_pp0_iter15_reg <= inBoundsM_2_reg_1214_pp0_iter14_reg;
                inBoundsM_2_reg_1214_pp0_iter8_reg <= inBoundsM_2_reg_1214;
                inBoundsM_2_reg_1214_pp0_iter9_reg <= inBoundsM_2_reg_1214_pp0_iter8_reg;
                inBoundsM_3_reg_1219 <= inBoundsM_3_fu_672_p2;
                inBoundsM_3_reg_1219_pp0_iter10_reg <= inBoundsM_3_reg_1219_pp0_iter9_reg;
                inBoundsM_3_reg_1219_pp0_iter11_reg <= inBoundsM_3_reg_1219_pp0_iter10_reg;
                inBoundsM_3_reg_1219_pp0_iter12_reg <= inBoundsM_3_reg_1219_pp0_iter11_reg;
                inBoundsM_3_reg_1219_pp0_iter13_reg <= inBoundsM_3_reg_1219_pp0_iter12_reg;
                inBoundsM_3_reg_1219_pp0_iter14_reg <= inBoundsM_3_reg_1219_pp0_iter13_reg;
                inBoundsM_3_reg_1219_pp0_iter15_reg <= inBoundsM_3_reg_1219_pp0_iter14_reg;
                inBoundsM_3_reg_1219_pp0_iter8_reg <= inBoundsM_3_reg_1219;
                inBoundsM_3_reg_1219_pp0_iter9_reg <= inBoundsM_3_reg_1219_pp0_iter8_reg;
                inBoundsM_4_reg_1224 <= inBoundsM_4_fu_686_p2;
                inBoundsM_4_reg_1224_pp0_iter10_reg <= inBoundsM_4_reg_1224_pp0_iter9_reg;
                inBoundsM_4_reg_1224_pp0_iter11_reg <= inBoundsM_4_reg_1224_pp0_iter10_reg;
                inBoundsM_4_reg_1224_pp0_iter12_reg <= inBoundsM_4_reg_1224_pp0_iter11_reg;
                inBoundsM_4_reg_1224_pp0_iter13_reg <= inBoundsM_4_reg_1224_pp0_iter12_reg;
                inBoundsM_4_reg_1224_pp0_iter14_reg <= inBoundsM_4_reg_1224_pp0_iter13_reg;
                inBoundsM_4_reg_1224_pp0_iter15_reg <= inBoundsM_4_reg_1224_pp0_iter14_reg;
                inBoundsM_4_reg_1224_pp0_iter8_reg <= inBoundsM_4_reg_1224;
                inBoundsM_4_reg_1224_pp0_iter9_reg <= inBoundsM_4_reg_1224_pp0_iter8_reg;
                inBoundsM_5_reg_1229 <= inBoundsM_5_fu_700_p2;
                inBoundsM_5_reg_1229_pp0_iter10_reg <= inBoundsM_5_reg_1229_pp0_iter9_reg;
                inBoundsM_5_reg_1229_pp0_iter11_reg <= inBoundsM_5_reg_1229_pp0_iter10_reg;
                inBoundsM_5_reg_1229_pp0_iter12_reg <= inBoundsM_5_reg_1229_pp0_iter11_reg;
                inBoundsM_5_reg_1229_pp0_iter13_reg <= inBoundsM_5_reg_1229_pp0_iter12_reg;
                inBoundsM_5_reg_1229_pp0_iter14_reg <= inBoundsM_5_reg_1229_pp0_iter13_reg;
                inBoundsM_5_reg_1229_pp0_iter15_reg <= inBoundsM_5_reg_1229_pp0_iter14_reg;
                inBoundsM_5_reg_1229_pp0_iter8_reg <= inBoundsM_5_reg_1229;
                inBoundsM_5_reg_1229_pp0_iter9_reg <= inBoundsM_5_reg_1229_pp0_iter8_reg;
                inBoundsM_6_reg_1234 <= inBoundsM_6_fu_714_p2;
                inBoundsM_6_reg_1234_pp0_iter10_reg <= inBoundsM_6_reg_1234_pp0_iter9_reg;
                inBoundsM_6_reg_1234_pp0_iter11_reg <= inBoundsM_6_reg_1234_pp0_iter10_reg;
                inBoundsM_6_reg_1234_pp0_iter12_reg <= inBoundsM_6_reg_1234_pp0_iter11_reg;
                inBoundsM_6_reg_1234_pp0_iter13_reg <= inBoundsM_6_reg_1234_pp0_iter12_reg;
                inBoundsM_6_reg_1234_pp0_iter14_reg <= inBoundsM_6_reg_1234_pp0_iter13_reg;
                inBoundsM_6_reg_1234_pp0_iter15_reg <= inBoundsM_6_reg_1234_pp0_iter14_reg;
                inBoundsM_6_reg_1234_pp0_iter8_reg <= inBoundsM_6_reg_1234;
                inBoundsM_6_reg_1234_pp0_iter9_reg <= inBoundsM_6_reg_1234_pp0_iter8_reg;
                inBoundsM_7_reg_1239 <= inBoundsM_7_fu_728_p2;
                inBoundsM_7_reg_1239_pp0_iter10_reg <= inBoundsM_7_reg_1239_pp0_iter9_reg;
                inBoundsM_7_reg_1239_pp0_iter11_reg <= inBoundsM_7_reg_1239_pp0_iter10_reg;
                inBoundsM_7_reg_1239_pp0_iter12_reg <= inBoundsM_7_reg_1239_pp0_iter11_reg;
                inBoundsM_7_reg_1239_pp0_iter13_reg <= inBoundsM_7_reg_1239_pp0_iter12_reg;
                inBoundsM_7_reg_1239_pp0_iter14_reg <= inBoundsM_7_reg_1239_pp0_iter13_reg;
                inBoundsM_7_reg_1239_pp0_iter15_reg <= inBoundsM_7_reg_1239_pp0_iter14_reg;
                inBoundsM_7_reg_1239_pp0_iter8_reg <= inBoundsM_7_reg_1239;
                inBoundsM_7_reg_1239_pp0_iter9_reg <= inBoundsM_7_reg_1239_pp0_iter8_reg;
                inBoundsM_reg_1204 <= inBoundsM_fu_630_p2;
                inBoundsM_reg_1204_pp0_iter10_reg <= inBoundsM_reg_1204_pp0_iter9_reg;
                inBoundsM_reg_1204_pp0_iter11_reg <= inBoundsM_reg_1204_pp0_iter10_reg;
                inBoundsM_reg_1204_pp0_iter12_reg <= inBoundsM_reg_1204_pp0_iter11_reg;
                inBoundsM_reg_1204_pp0_iter13_reg <= inBoundsM_reg_1204_pp0_iter12_reg;
                inBoundsM_reg_1204_pp0_iter14_reg <= inBoundsM_reg_1204_pp0_iter13_reg;
                inBoundsM_reg_1204_pp0_iter15_reg <= inBoundsM_reg_1204_pp0_iter14_reg;
                inBoundsM_reg_1204_pp0_iter8_reg <= inBoundsM_reg_1204;
                inBoundsM_reg_1204_pp0_iter9_reg <= inBoundsM_reg_1204_pp0_iter8_reg;
                inBoundsN_reg_1089 <= inBoundsN_fu_475_p2;
                inBoundsN_reg_1089_pp0_iter10_reg <= inBoundsN_reg_1089_pp0_iter9_reg;
                inBoundsN_reg_1089_pp0_iter11_reg <= inBoundsN_reg_1089_pp0_iter10_reg;
                inBoundsN_reg_1089_pp0_iter12_reg <= inBoundsN_reg_1089_pp0_iter11_reg;
                inBoundsN_reg_1089_pp0_iter13_reg <= inBoundsN_reg_1089_pp0_iter12_reg;
                inBoundsN_reg_1089_pp0_iter14_reg <= inBoundsN_reg_1089_pp0_iter13_reg;
                inBoundsN_reg_1089_pp0_iter15_reg <= inBoundsN_reg_1089_pp0_iter14_reg;
                inBoundsN_reg_1089_pp0_iter4_reg <= inBoundsN_reg_1089;
                inBoundsN_reg_1089_pp0_iter5_reg <= inBoundsN_reg_1089_pp0_iter4_reg;
                inBoundsN_reg_1089_pp0_iter6_reg <= inBoundsN_reg_1089_pp0_iter5_reg;
                inBoundsN_reg_1089_pp0_iter7_reg <= inBoundsN_reg_1089_pp0_iter6_reg;
                inBoundsN_reg_1089_pp0_iter8_reg <= inBoundsN_reg_1089_pp0_iter7_reg;
                inBoundsN_reg_1089_pp0_iter9_reg <= inBoundsN_reg_1089_pp0_iter8_reg;
                res_11_reg_1397 <= grp_fu_279_p2;
                res_13_reg_1402 <= grp_fu_283_p2;
                res_15_reg_1407 <= grp_fu_287_p2;
                res_16_reg_1244 <= grp_fu_291_p2;
                res_17_reg_1254 <= grp_fu_295_p2;
                res_18_reg_1264 <= grp_fu_299_p2;
                res_19_reg_1274 <= grp_fu_303_p2;
                res_20_reg_1284 <= grp_fu_307_p2;
                res_21_reg_1294 <= grp_fu_311_p2;
                res_22_reg_1304 <= grp_fu_315_p2;
                res_23_reg_1314 <= grp_fu_319_p2;
                res_3_reg_1377 <= grp_fu_263_p2;
                res_5_reg_1382 <= grp_fu_267_p2;
                res_7_reg_1387 <= grp_fu_271_p2;
                res_9_reg_1392 <= grp_fu_275_p2;
                res_reg_1372 <= grp_fu_259_p2;
                select_ln64_1_reg_1073 <= select_ln64_1_fu_428_p3;
                select_ln64_reg_1063_pp0_iter2_reg <= select_ln64_reg_1063;
                select_ln64_reg_1063_pp0_iter3_reg <= select_ln64_reg_1063_pp0_iter2_reg;
                select_ln64_reg_1063_pp0_iter4_reg <= select_ln64_reg_1063_pp0_iter3_reg;
                select_ln64_reg_1063_pp0_iter5_reg <= select_ln64_reg_1063_pp0_iter4_reg;
                select_ln64_reg_1063_pp0_iter6_reg <= select_ln64_reg_1063_pp0_iter5_reg;
                tmp_10_reg_1136 <= bPipes_31_dout(223 downto 192);
                tmp_11_reg_1309 <= cPrev_1_fu_733_p3(223 downto 192);
                tmp_12_reg_1141 <= bPipes_31_dout(255 downto 224);
                tmp_13_reg_1319 <= cPrev_1_fu_733_p3(255 downto 224);
                tmp_1_reg_1259 <= cPrev_1_fu_733_p3(63 downto 32);
                tmp_2_reg_1116 <= bPipes_31_dout(95 downto 64);
                tmp_3_reg_1269 <= cPrev_1_fu_733_p3(95 downto 64);
                tmp_4_reg_1121 <= bPipes_31_dout(127 downto 96);
                tmp_5_reg_1279 <= cPrev_1_fu_733_p3(127 downto 96);
                tmp_6_reg_1126 <= bPipes_31_dout(159 downto 128);
                tmp_7_reg_1289 <= cPrev_1_fu_733_p3(159 downto 128);
                tmp_8_reg_1131 <= bPipes_31_dout(191 downto 160);
                tmp_9_reg_1299 <= cPrev_1_fu_733_p3(191 downto 160);
                tmp_s_reg_1111 <= bPipes_31_dout(63 downto 32);
                trunc_ln170_1_reg_1249 <= trunc_ln170_1_fu_740_p1;
                trunc_ln170_reg_1106 <= trunc_ln170_fu_480_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    aBuffer_address0 <= add_cast_fu_444_p1(5 - 1 downto 0);
    aBuffer_address1 <= add91_cast_fu_461_p1(5 - 1 downto 0);
    aBuffer_ce0 <= aBuffer_ce0_local;

    aBuffer_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            aBuffer_ce0_local <= ap_const_logic_1;
        else 
            aBuffer_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    aBuffer_ce1 <= aBuffer_ce1_local;

    aBuffer_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            aBuffer_ce1_local <= ap_const_logic_1;
        else 
            aBuffer_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    aBuffer_d0 <= aPipes_31_dout;
    aBuffer_we0 <= aBuffer_we0_local;

    aBuffer_we0_local_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln80_1_reg_1069, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln80_1_reg_1069) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            aBuffer_we0_local <= ap_const_logic_1;
        else 
            aBuffer_we0_local <= ap_const_logic_0;
        end if; 
    end process;


    aPipes_31_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aPipes_31_empty_n, and_ln80_1_reg_1069, ap_block_pp0_stage0)
    begin
        if (((ap_const_lv1_1 = and_ln80_1_reg_1069) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            aPipes_31_blk_n <= aPipes_31_empty_n;
        else 
            aPipes_31_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aPipes_31_read <= aPipes_31_read_local;

    aPipes_31_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, and_ln80_1_reg_1069, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_lv1_1 = and_ln80_1_reg_1069) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            aPipes_31_read_local <= ap_const_logic_1;
        else 
            aPipes_31_read_local <= ap_const_logic_0;
        end if; 
    end process;

    add106_cast_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add106_fu_466_p2),32));
    add106_fu_466_p2 <= std_logic_vector(unsigned(mul) + unsigned(zext_ln64_fu_454_p1));
    add115_cast_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add115_fu_607_p2),64));
    add115_fu_607_p2 <= std_logic_vector(unsigned(mul1_fu_597_p3) + unsigned(zext_ln67_fu_604_p1));
    add1_fu_621_p4 <= ((m0 & empty_fu_618_p1) & ap_const_lv3_0);
    add91_cast_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add91_fu_457_p2),64));
    add91_fu_457_p2 <= std_logic_vector(unsigned(select_ln64_1_reg_1073) + unsigned(cond90));
    add_cast_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_fu_439_p2),64));
    add_fu_439_p2 <= std_logic_vector(unsigned(select_ln64_1_fu_428_p3) + unsigned(cond));
    add_ln64_1_fu_422_p2 <= std_logic_vector(unsigned(n1_fu_148) + unsigned(ap_const_lv5_1));
    add_ln64_fu_347_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv11_1));
    add_ln67_fu_408_p2 <= std_logic_vector(unsigned(select_ln64_fu_367_p3) + unsigned(ap_const_lv7_1));
    and_ln80_1_fu_402_p2 <= (icmp_ln83_fu_391_p2 and and_ln80_fu_397_p2);
    and_ln80_fu_397_p2 <= (icmp_ln82_fu_375_p2 and brmerge282);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_block_state3_pp0_stage0_iter2, ap_block_state5_pp0_stage0_iter4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter4)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_block_state3_pp0_stage0_iter2, ap_block_state5_pp0_stage0_iter4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state5_pp0_stage0_iter4)));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(aPipes_31_empty_n, and_ln80_1_reg_1069)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_const_lv1_1 = and_ln80_1_reg_1069) and (ap_const_logic_0 = aPipes_31_empty_n));
    end process;


    ap_block_state5_pp0_stage0_iter4_assign_proc : process(bPipes_31_empty_n)
    begin
                ap_block_state5_pp0_stage0_iter4 <= (bPipes_31_empty_n = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln64_fu_341_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln64_fu_341_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter15_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_61_assign_proc : process(and_ln80_1_reg_1069)
    begin
                ap_enable_operation_61 <= (ap_const_lv1_1 = and_ln80_1_reg_1069);
    end process;

        ap_enable_operation_71 <= (ap_const_boolean_1 = ap_const_boolean_1);
        ap_enable_operation_72 <= (ap_const_boolean_1 = ap_const_boolean_1);
    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state4_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state4_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state5_pp0_iter4_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4)
    begin
                ap_enable_state5_pp0_iter4_stage0 <= ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_152)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_152;
        end if; 
    end process;


    bPipes_31_blk_n_assign_proc : process(ap_enable_reg_pp0_iter4, bPipes_31_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            bPipes_31_blk_n <= bPipes_31_empty_n;
        else 
            bPipes_31_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bPipes_31_read <= bPipes_31_read_local;

    bPipes_31_read_local_assign_proc : process(ap_enable_reg_pp0_iter4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            bPipes_31_read_local <= ap_const_logic_1;
        else 
            bPipes_31_read_local <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln32_10_fu_830_p1 <= tmp_7_reg_1289;
    bitcast_ln32_12_fu_834_p1 <= tmp_9_reg_1299;
    bitcast_ln32_14_fu_838_p1 <= tmp_11_reg_1309;
    bitcast_ln32_16_fu_842_p1 <= tmp_13_reg_1319;
    bitcast_ln32_2_fu_814_p1 <= trunc_ln170_1_reg_1249;
    bitcast_ln32_4_fu_818_p1 <= tmp_1_reg_1259;
    bitcast_ln32_6_fu_822_p1 <= tmp_3_reg_1269;
    bitcast_ln32_8_fu_826_p1 <= tmp_5_reg_1279;
    bitcast_ln32_fu_554_p1 <= aVal_reg_1101;
    bitcast_ln36_1_fu_870_p1 <= select_ln296_1_fu_864_p3;
    bitcast_ln36_2_fu_884_p1 <= select_ln296_2_fu_878_p3;
    bitcast_ln36_3_fu_898_p1 <= select_ln296_3_fu_892_p3;
    bitcast_ln36_4_fu_912_p1 <= select_ln296_4_fu_906_p3;
    bitcast_ln36_5_fu_926_p1 <= select_ln296_5_fu_920_p3;
    bitcast_ln36_6_fu_940_p1 <= select_ln296_6_fu_934_p3;
    bitcast_ln36_7_fu_954_p1 <= select_ln296_7_fu_948_p3;
    bitcast_ln36_fu_856_p1 <= select_ln296_fu_850_p3;
    cBuffer_address0 <= cBuffer_addr_reg_1198_pp0_iter15_reg;
    cBuffer_address1 <= add115_cast_fu_613_p1(10 - 1 downto 0);
    cBuffer_ce0 <= cBuffer_ce0_local;

    cBuffer_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            cBuffer_ce0_local <= ap_const_logic_1;
        else 
            cBuffer_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    cBuffer_ce1 <= cBuffer_ce1_local;

    cBuffer_ce1_local_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            cBuffer_ce1_local <= ap_const_logic_1;
        else 
            cBuffer_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    cBuffer_d0 <= tmp_14_fu_958_p9;
    cBuffer_we0 <= cBuffer_we0_local;

    cBuffer_we0_local_assign_proc : process(ap_enable_reg_pp0_iter16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            cBuffer_we0_local <= ap_const_logic_1;
        else 
            cBuffer_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    cPrev_1_fu_733_p3 <= 
        ap_const_lv256_lc_1 when (cmp111(0) = '1') else 
        cBuffer_q1;
    empty_159_fu_435_p1 <= select_ln64_1_fu_428_p3(4 - 1 downto 0);
    empty_fu_618_p1 <= select_ln64_reg_1063_pp0_iter6_reg(6 - 1 downto 0);

    grp_fu_259_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_259_ce <= ap_const_logic_1;
        else 
            grp_fu_259_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_259_p0 <= trunc_ln170_1_reg_1249;

    grp_fu_263_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_263_ce <= ap_const_logic_1;
        else 
            grp_fu_263_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_263_p0 <= tmp_1_reg_1259;

    grp_fu_267_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_267_ce <= ap_const_logic_1;
        else 
            grp_fu_267_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_267_p0 <= tmp_3_reg_1269;

    grp_fu_271_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_271_ce <= ap_const_logic_1;
        else 
            grp_fu_271_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_271_p0 <= tmp_5_reg_1279;

    grp_fu_275_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_275_ce <= ap_const_logic_1;
        else 
            grp_fu_275_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_275_p0 <= tmp_7_reg_1289;

    grp_fu_279_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_279_ce <= ap_const_logic_1;
        else 
            grp_fu_279_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_279_p0 <= tmp_9_reg_1299;

    grp_fu_283_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_283_ce <= ap_const_logic_1;
        else 
            grp_fu_283_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_283_p0 <= tmp_11_reg_1309;

    grp_fu_287_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_287_ce <= ap_const_logic_1;
        else 
            grp_fu_287_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_287_p0 <= tmp_13_reg_1319;

    grp_fu_291_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_291_ce <= ap_const_logic_1;
        else 
            grp_fu_291_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_291_p1 <= trunc_ln170_reg_1106;

    grp_fu_295_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_295_ce <= ap_const_logic_1;
        else 
            grp_fu_295_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_295_p1 <= tmp_s_reg_1111;

    grp_fu_299_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_299_ce <= ap_const_logic_1;
        else 
            grp_fu_299_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_299_p1 <= tmp_2_reg_1116;

    grp_fu_303_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_303_ce <= ap_const_logic_1;
        else 
            grp_fu_303_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_303_p1 <= tmp_4_reg_1121;

    grp_fu_307_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_307_ce <= ap_const_logic_1;
        else 
            grp_fu_307_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_307_p1 <= tmp_6_reg_1126;

    grp_fu_311_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_311_ce <= ap_const_logic_1;
        else 
            grp_fu_311_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_311_p1 <= tmp_8_reg_1131;

    grp_fu_315_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_315_ce <= ap_const_logic_1;
        else 
            grp_fu_315_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_315_p1 <= tmp_10_reg_1136;

    grp_fu_319_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_319_ce <= ap_const_logic_1;
        else 
            grp_fu_319_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_319_p1 <= tmp_12_reg_1141;
    icmp_ln64_fu_341_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv11_400) else "0";
    icmp_ln67_fu_361_p2 <= "1" when (m1_fu_144 = ap_const_lv7_40) else "0";
    icmp_ln82_fu_375_p2 <= "1" when (unsigned(select_ln64_fu_367_p3) > unsigned(ap_const_lv7_1E)) else "0";
    icmp_ln83_fu_391_p2 <= "1" when (tmp_fu_381_p4 = ap_const_lv2_0) else "0";
    inBoundsM_1_fu_644_p2 <= "1" when (unsigned(or_ln_fu_635_p4) < unsigned(size_m_load)) else "0";
    inBoundsM_2_fu_658_p2 <= "1" when (unsigned(or_ln125_s_fu_649_p4) < unsigned(size_m_load)) else "0";
    inBoundsM_3_fu_672_p2 <= "1" when (unsigned(or_ln125_1_fu_663_p4) < unsigned(size_m_load)) else "0";
    inBoundsM_4_fu_686_p2 <= "1" when (unsigned(or_ln125_2_fu_677_p4) < unsigned(size_m_load)) else "0";
    inBoundsM_5_fu_700_p2 <= "1" when (unsigned(or_ln125_3_fu_691_p4) < unsigned(size_m_load)) else "0";
    inBoundsM_6_fu_714_p2 <= "1" when (unsigned(or_ln125_4_fu_705_p4) < unsigned(size_m_load)) else "0";
    inBoundsM_7_fu_728_p2 <= "1" when (unsigned(or_ln125_5_fu_719_p4) < unsigned(size_m_load)) else "0";
    inBoundsM_fu_630_p2 <= "1" when (unsigned(add1_fu_621_p4) < unsigned(size_m_load)) else "0";
    inBoundsN_fu_475_p2 <= "1" when (unsigned(add106_cast_fu_471_p1) < unsigned(size_n_load)) else "0";
    inBounds_1_fu_860_p2 <= (inBoundsN_reg_1089_pp0_iter15_reg and inBoundsM_1_reg_1209_pp0_iter15_reg);
    inBounds_2_fu_874_p2 <= (inBoundsN_reg_1089_pp0_iter15_reg and inBoundsM_2_reg_1214_pp0_iter15_reg);
    inBounds_3_fu_888_p2 <= (inBoundsN_reg_1089_pp0_iter15_reg and inBoundsM_3_reg_1219_pp0_iter15_reg);
    inBounds_4_fu_902_p2 <= (inBoundsN_reg_1089_pp0_iter15_reg and inBoundsM_4_reg_1224_pp0_iter15_reg);
    inBounds_5_fu_916_p2 <= (inBoundsN_reg_1089_pp0_iter15_reg and inBoundsM_5_reg_1229_pp0_iter15_reg);
    inBounds_6_fu_930_p2 <= (inBoundsN_reg_1089_pp0_iter15_reg and inBoundsM_6_reg_1234_pp0_iter15_reg);
    inBounds_7_fu_944_p2 <= (inBoundsN_reg_1089_pp0_iter15_reg and inBoundsM_7_reg_1239_pp0_iter15_reg);
    inBounds_fu_846_p2 <= (inBoundsN_reg_1089_pp0_iter15_reg and inBoundsM_reg_1204_pp0_iter15_reg);
    mul1_fu_597_p3 <= (empty_159_reg_1079_pp0_iter6_reg & ap_const_lv6_0);
    or_ln125_1_fu_663_p4 <= ((m0 & empty_fu_618_p1) & ap_const_lv3_3);
    or_ln125_2_fu_677_p4 <= ((m0 & empty_fu_618_p1) & ap_const_lv3_4);
    or_ln125_3_fu_691_p4 <= ((m0 & empty_fu_618_p1) & ap_const_lv3_5);
    or_ln125_4_fu_705_p4 <= ((m0 & empty_fu_618_p1) & ap_const_lv3_6);
    or_ln125_5_fu_719_p4 <= ((m0 & empty_fu_618_p1) & ap_const_lv3_7);
    or_ln125_s_fu_649_p4 <= ((m0 & empty_fu_618_p1) & ap_const_lv3_2);
    or_ln_fu_635_p4 <= ((m0 & empty_fu_618_p1) & ap_const_lv3_1);
    select_ln296_1_fu_864_p3 <= 
        res_3_reg_1377 when (inBounds_1_fu_860_p2(0) = '1') else 
        bitcast_ln32_4_reg_1330_pp0_iter15_reg;
    select_ln296_2_fu_878_p3 <= 
        res_5_reg_1382 when (inBounds_2_fu_874_p2(0) = '1') else 
        bitcast_ln32_6_reg_1336_pp0_iter15_reg;
    select_ln296_3_fu_892_p3 <= 
        res_7_reg_1387 when (inBounds_3_fu_888_p2(0) = '1') else 
        bitcast_ln32_8_reg_1342_pp0_iter15_reg;
    select_ln296_4_fu_906_p3 <= 
        res_9_reg_1392 when (inBounds_4_fu_902_p2(0) = '1') else 
        bitcast_ln32_10_reg_1348_pp0_iter15_reg;
    select_ln296_5_fu_920_p3 <= 
        res_11_reg_1397 when (inBounds_5_fu_916_p2(0) = '1') else 
        bitcast_ln32_12_reg_1354_pp0_iter15_reg;
    select_ln296_6_fu_934_p3 <= 
        res_13_reg_1402 when (inBounds_6_fu_930_p2(0) = '1') else 
        bitcast_ln32_14_reg_1360_pp0_iter15_reg;
    select_ln296_7_fu_948_p3 <= 
        res_15_reg_1407 when (inBounds_7_fu_944_p2(0) = '1') else 
        bitcast_ln32_16_reg_1366_pp0_iter15_reg;
    select_ln296_fu_850_p3 <= 
        res_reg_1372 when (inBounds_fu_846_p2(0) = '1') else 
        bitcast_ln32_2_reg_1324_pp0_iter15_reg;
    select_ln64_1_fu_428_p3 <= 
        add_ln64_1_fu_422_p2 when (icmp_ln67_reg_1058(0) = '1') else 
        n1_fu_148;
    select_ln64_fu_367_p3 <= 
        ap_const_lv7_0 when (icmp_ln67_fu_361_p2(0) = '1') else 
        m1_fu_144;
    tmp_14_fu_958_p9 <= (((((((bitcast_ln36_7_fu_954_p1 & bitcast_ln36_6_fu_940_p1) & bitcast_ln36_5_fu_926_p1) & bitcast_ln36_4_fu_912_p1) & bitcast_ln36_3_fu_898_p1) & bitcast_ln36_2_fu_884_p1) & bitcast_ln36_1_fu_870_p1) & bitcast_ln36_fu_856_p1);
    tmp_fu_381_p4 <= select_ln64_fu_367_p3(6 downto 5);
    trunc_ln170_1_fu_740_p1 <= cPrev_1_fu_733_p3(32 - 1 downto 0);
    trunc_ln170_fu_480_p1 <= bPipes_31_dout(32 - 1 downto 0);
    zext_ln64_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln64_1_reg_1073),27));
    zext_ln67_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln64_reg_1063_pp0_iter6_reg),10));
end behav;
