// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMultiplicationKernel_ProcessingElement_2_Pipeline_Pipeline_N_Pipeline_M (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        aPipes_1_dout,
        aPipes_1_num_data_valid,
        aPipes_1_fifo_cap,
        aPipes_1_empty_n,
        aPipes_1_read,
        aPipes_2_din,
        aPipes_2_num_data_valid,
        aPipes_2_fifo_cap,
        aPipes_2_full_n,
        aPipes_2_write,
        bPipes_1_dout,
        bPipes_1_num_data_valid,
        bPipes_1_fifo_cap,
        bPipes_1_empty_n,
        bPipes_1_read,
        bPipes_2_din,
        bPipes_2_num_data_valid,
        bPipes_2_fifo_cap,
        bPipes_2_full_n,
        bPipes_2_write,
        m0,
        cBuffer_address0,
        cBuffer_ce0,
        cBuffer_we0,
        cBuffer_d0,
        cBuffer_address1,
        cBuffer_ce1,
        cBuffer_q1,
        cmp111,
        size_m,
        cond90,
        aBuffer_address0,
        aBuffer_ce0,
        aBuffer_we0,
        aBuffer_d0,
        aBuffer_address1,
        aBuffer_ce1,
        aBuffer_q1,
        mul,
        cond,
        size_n,
        brmerge282
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] aPipes_1_dout;
input  [2:0] aPipes_1_num_data_valid;
input  [2:0] aPipes_1_fifo_cap;
input   aPipes_1_empty_n;
output   aPipes_1_read;
output  [31:0] aPipes_2_din;
input  [2:0] aPipes_2_num_data_valid;
input  [2:0] aPipes_2_fifo_cap;
input   aPipes_2_full_n;
output   aPipes_2_write;
input  [255:0] bPipes_1_dout;
input  [2:0] bPipes_1_num_data_valid;
input  [2:0] bPipes_1_fifo_cap;
input   bPipes_1_empty_n;
output   bPipes_1_read;
output  [255:0] bPipes_2_din;
input  [2:0] bPipes_2_num_data_valid;
input  [2:0] bPipes_2_fifo_cap;
input   bPipes_2_full_n;
output   bPipes_2_write;
input  [22:0] m0;
output  [9:0] cBuffer_address0;
output   cBuffer_ce0;
output   cBuffer_we0;
output  [255:0] cBuffer_d0;
output  [9:0] cBuffer_address1;
output   cBuffer_ce1;
input  [255:0] cBuffer_q1;
input  [0:0] cmp111;
input  [31:0] size_m;
input  [4:0] cond90;
output  [4:0] aBuffer_address0;
output   aBuffer_ce0;
output   aBuffer_we0;
output  [31:0] aBuffer_d0;
output  [4:0] aBuffer_address1;
output   aBuffer_ce1;
input  [31:0] aBuffer_q1;
input  [26:0] mul;
input  [4:0] cond;
input  [31:0] size_n;
input  [0:0] brmerge282;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
reg   [0:0] and_ln80_9_reg_1097;
reg   [0:0] icmp_ln85_reg_1101;
reg    ap_predicate_op66_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_363_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bPipes_1_blk_n;
wire    ap_block_pp0_stage0;
reg    bPipes_2_blk_n;
reg    aPipes_1_blk_n;
reg    aPipes_2_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_383_p2;
reg   [0:0] icmp_ln67_reg_1086;
wire   [6:0] select_ln64_fu_389_p3;
reg   [6:0] select_ln64_reg_1091;
reg   [6:0] select_ln64_reg_1091_pp0_iter2_reg;
reg   [6:0] select_ln64_reg_1091_pp0_iter3_reg;
reg   [6:0] select_ln64_reg_1091_pp0_iter4_reg;
reg   [6:0] select_ln64_reg_1091_pp0_iter5_reg;
reg   [6:0] select_ln64_reg_1091_pp0_iter6_reg;
wire   [0:0] and_ln80_9_fu_424_p2;
wire   [0:0] icmp_ln85_fu_430_p2;
wire   [4:0] select_ln64_9_fu_456_p3;
reg   [4:0] select_ln64_9_reg_1105;
wire   [3:0] empty_205_fu_463_p1;
reg   [3:0] empty_205_reg_1111;
reg   [3:0] empty_205_reg_1111_pp0_iter3_reg;
reg   [3:0] empty_205_reg_1111_pp0_iter4_reg;
reg   [3:0] empty_205_reg_1111_pp0_iter5_reg;
reg   [3:0] empty_205_reg_1111_pp0_iter6_reg;
wire   [0:0] inBoundsN_fu_503_p2;
reg   [0:0] inBoundsN_reg_1121;
reg   [0:0] inBoundsN_reg_1121_pp0_iter4_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter5_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter6_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter7_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter8_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter9_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter10_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter11_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter12_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter13_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter14_reg;
reg   [0:0] inBoundsN_reg_1121_pp0_iter15_reg;
reg   [31:0] aVal_reg_1133;
wire   [31:0] trunc_ln170_fu_508_p1;
reg   [31:0] trunc_ln170_reg_1138;
reg   [31:0] tmp_s_reg_1143;
reg   [31:0] tmp_142_reg_1148;
reg   [31:0] tmp_144_reg_1153;
reg   [31:0] tmp_146_reg_1158;
reg   [31:0] tmp_148_reg_1163;
reg   [31:0] tmp_150_reg_1168;
reg   [31:0] tmp_152_reg_1173;
wire   [31:0] bitcast_ln32_fu_582_p1;
reg   [9:0] cBuffer_addr_reg_1230;
reg   [9:0] cBuffer_addr_reg_1230_pp0_iter8_reg;
reg   [9:0] cBuffer_addr_reg_1230_pp0_iter9_reg;
reg   [9:0] cBuffer_addr_reg_1230_pp0_iter10_reg;
reg   [9:0] cBuffer_addr_reg_1230_pp0_iter11_reg;
reg   [9:0] cBuffer_addr_reg_1230_pp0_iter12_reg;
reg   [9:0] cBuffer_addr_reg_1230_pp0_iter13_reg;
reg   [9:0] cBuffer_addr_reg_1230_pp0_iter14_reg;
reg   [9:0] cBuffer_addr_reg_1230_pp0_iter15_reg;
wire   [0:0] inBoundsM_fu_658_p2;
reg   [0:0] inBoundsM_reg_1236;
reg   [0:0] inBoundsM_reg_1236_pp0_iter8_reg;
reg   [0:0] inBoundsM_reg_1236_pp0_iter9_reg;
reg   [0:0] inBoundsM_reg_1236_pp0_iter10_reg;
reg   [0:0] inBoundsM_reg_1236_pp0_iter11_reg;
reg   [0:0] inBoundsM_reg_1236_pp0_iter12_reg;
reg   [0:0] inBoundsM_reg_1236_pp0_iter13_reg;
reg   [0:0] inBoundsM_reg_1236_pp0_iter14_reg;
reg   [0:0] inBoundsM_reg_1236_pp0_iter15_reg;
wire   [0:0] inBoundsM_71_fu_672_p2;
reg   [0:0] inBoundsM_71_reg_1241;
reg   [0:0] inBoundsM_71_reg_1241_pp0_iter8_reg;
reg   [0:0] inBoundsM_71_reg_1241_pp0_iter9_reg;
reg   [0:0] inBoundsM_71_reg_1241_pp0_iter10_reg;
reg   [0:0] inBoundsM_71_reg_1241_pp0_iter11_reg;
reg   [0:0] inBoundsM_71_reg_1241_pp0_iter12_reg;
reg   [0:0] inBoundsM_71_reg_1241_pp0_iter13_reg;
reg   [0:0] inBoundsM_71_reg_1241_pp0_iter14_reg;
reg   [0:0] inBoundsM_71_reg_1241_pp0_iter15_reg;
wire   [0:0] inBoundsM_72_fu_686_p2;
reg   [0:0] inBoundsM_72_reg_1246;
reg   [0:0] inBoundsM_72_reg_1246_pp0_iter8_reg;
reg   [0:0] inBoundsM_72_reg_1246_pp0_iter9_reg;
reg   [0:0] inBoundsM_72_reg_1246_pp0_iter10_reg;
reg   [0:0] inBoundsM_72_reg_1246_pp0_iter11_reg;
reg   [0:0] inBoundsM_72_reg_1246_pp0_iter12_reg;
reg   [0:0] inBoundsM_72_reg_1246_pp0_iter13_reg;
reg   [0:0] inBoundsM_72_reg_1246_pp0_iter14_reg;
reg   [0:0] inBoundsM_72_reg_1246_pp0_iter15_reg;
wire   [0:0] inBoundsM_73_fu_700_p2;
reg   [0:0] inBoundsM_73_reg_1251;
reg   [0:0] inBoundsM_73_reg_1251_pp0_iter8_reg;
reg   [0:0] inBoundsM_73_reg_1251_pp0_iter9_reg;
reg   [0:0] inBoundsM_73_reg_1251_pp0_iter10_reg;
reg   [0:0] inBoundsM_73_reg_1251_pp0_iter11_reg;
reg   [0:0] inBoundsM_73_reg_1251_pp0_iter12_reg;
reg   [0:0] inBoundsM_73_reg_1251_pp0_iter13_reg;
reg   [0:0] inBoundsM_73_reg_1251_pp0_iter14_reg;
reg   [0:0] inBoundsM_73_reg_1251_pp0_iter15_reg;
wire   [0:0] inBoundsM_74_fu_714_p2;
reg   [0:0] inBoundsM_74_reg_1256;
reg   [0:0] inBoundsM_74_reg_1256_pp0_iter8_reg;
reg   [0:0] inBoundsM_74_reg_1256_pp0_iter9_reg;
reg   [0:0] inBoundsM_74_reg_1256_pp0_iter10_reg;
reg   [0:0] inBoundsM_74_reg_1256_pp0_iter11_reg;
reg   [0:0] inBoundsM_74_reg_1256_pp0_iter12_reg;
reg   [0:0] inBoundsM_74_reg_1256_pp0_iter13_reg;
reg   [0:0] inBoundsM_74_reg_1256_pp0_iter14_reg;
reg   [0:0] inBoundsM_74_reg_1256_pp0_iter15_reg;
wire   [0:0] inBoundsM_75_fu_728_p2;
reg   [0:0] inBoundsM_75_reg_1261;
reg   [0:0] inBoundsM_75_reg_1261_pp0_iter8_reg;
reg   [0:0] inBoundsM_75_reg_1261_pp0_iter9_reg;
reg   [0:0] inBoundsM_75_reg_1261_pp0_iter10_reg;
reg   [0:0] inBoundsM_75_reg_1261_pp0_iter11_reg;
reg   [0:0] inBoundsM_75_reg_1261_pp0_iter12_reg;
reg   [0:0] inBoundsM_75_reg_1261_pp0_iter13_reg;
reg   [0:0] inBoundsM_75_reg_1261_pp0_iter14_reg;
reg   [0:0] inBoundsM_75_reg_1261_pp0_iter15_reg;
wire   [0:0] inBoundsM_76_fu_742_p2;
reg   [0:0] inBoundsM_76_reg_1266;
reg   [0:0] inBoundsM_76_reg_1266_pp0_iter8_reg;
reg   [0:0] inBoundsM_76_reg_1266_pp0_iter9_reg;
reg   [0:0] inBoundsM_76_reg_1266_pp0_iter10_reg;
reg   [0:0] inBoundsM_76_reg_1266_pp0_iter11_reg;
reg   [0:0] inBoundsM_76_reg_1266_pp0_iter12_reg;
reg   [0:0] inBoundsM_76_reg_1266_pp0_iter13_reg;
reg   [0:0] inBoundsM_76_reg_1266_pp0_iter14_reg;
reg   [0:0] inBoundsM_76_reg_1266_pp0_iter15_reg;
wire   [0:0] inBoundsM_77_fu_756_p2;
reg   [0:0] inBoundsM_77_reg_1271;
reg   [0:0] inBoundsM_77_reg_1271_pp0_iter8_reg;
reg   [0:0] inBoundsM_77_reg_1271_pp0_iter9_reg;
reg   [0:0] inBoundsM_77_reg_1271_pp0_iter10_reg;
reg   [0:0] inBoundsM_77_reg_1271_pp0_iter11_reg;
reg   [0:0] inBoundsM_77_reg_1271_pp0_iter12_reg;
reg   [0:0] inBoundsM_77_reg_1271_pp0_iter13_reg;
reg   [0:0] inBoundsM_77_reg_1271_pp0_iter14_reg;
reg   [0:0] inBoundsM_77_reg_1271_pp0_iter15_reg;
wire   [31:0] grp_fu_313_p2;
reg   [31:0] res_246_reg_1276;
wire   [31:0] trunc_ln170_11_fu_768_p1;
reg   [31:0] trunc_ln170_11_reg_1281;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] res_247_reg_1286;
reg   [31:0] tmp_141_reg_1291;
wire   [31:0] grp_fu_321_p2;
reg   [31:0] res_248_reg_1296;
reg   [31:0] tmp_143_reg_1301;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] res_249_reg_1306;
reg   [31:0] tmp_145_reg_1311;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] res_250_reg_1316;
reg   [31:0] tmp_147_reg_1321;
wire   [31:0] grp_fu_333_p2;
reg   [31:0] res_251_reg_1326;
reg   [31:0] tmp_149_reg_1331;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] res_252_reg_1336;
reg   [31:0] tmp_151_reg_1341;
wire   [31:0] grp_fu_341_p2;
reg   [31:0] res_253_reg_1346;
reg   [31:0] tmp_153_reg_1351;
wire   [31:0] bitcast_ln32_130_fu_842_p1;
reg   [31:0] bitcast_ln32_130_reg_1356;
reg   [31:0] bitcast_ln32_130_reg_1356_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_130_reg_1356_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_130_reg_1356_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_130_reg_1356_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_130_reg_1356_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_130_reg_1356_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_132_fu_846_p1;
reg   [31:0] bitcast_ln32_132_reg_1362;
reg   [31:0] bitcast_ln32_132_reg_1362_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_132_reg_1362_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_132_reg_1362_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_132_reg_1362_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_132_reg_1362_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_132_reg_1362_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_134_fu_850_p1;
reg   [31:0] bitcast_ln32_134_reg_1368;
reg   [31:0] bitcast_ln32_134_reg_1368_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_134_reg_1368_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_134_reg_1368_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_134_reg_1368_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_134_reg_1368_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_134_reg_1368_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_136_fu_854_p1;
reg   [31:0] bitcast_ln32_136_reg_1374;
reg   [31:0] bitcast_ln32_136_reg_1374_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_136_reg_1374_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_136_reg_1374_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_136_reg_1374_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_136_reg_1374_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_136_reg_1374_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_138_fu_858_p1;
reg   [31:0] bitcast_ln32_138_reg_1380;
reg   [31:0] bitcast_ln32_138_reg_1380_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_138_reg_1380_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_138_reg_1380_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_138_reg_1380_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_138_reg_1380_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_138_reg_1380_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_140_fu_862_p1;
reg   [31:0] bitcast_ln32_140_reg_1386;
reg   [31:0] bitcast_ln32_140_reg_1386_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_140_reg_1386_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_140_reg_1386_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_140_reg_1386_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_140_reg_1386_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_140_reg_1386_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_142_fu_866_p1;
reg   [31:0] bitcast_ln32_142_reg_1392;
reg   [31:0] bitcast_ln32_142_reg_1392_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_142_reg_1392_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_142_reg_1392_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_142_reg_1392_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_142_reg_1392_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_142_reg_1392_pp0_iter15_reg;
wire   [31:0] bitcast_ln32_144_fu_870_p1;
reg   [31:0] bitcast_ln32_144_reg_1398;
reg   [31:0] bitcast_ln32_144_reg_1398_pp0_iter10_reg;
reg   [31:0] bitcast_ln32_144_reg_1398_pp0_iter11_reg;
reg   [31:0] bitcast_ln32_144_reg_1398_pp0_iter12_reg;
reg   [31:0] bitcast_ln32_144_reg_1398_pp0_iter13_reg;
reg   [31:0] bitcast_ln32_144_reg_1398_pp0_iter14_reg;
reg   [31:0] bitcast_ln32_144_reg_1398_pp0_iter15_reg;
wire   [31:0] grp_fu_281_p2;
reg   [31:0] res_reg_1404;
wire   [31:0] grp_fu_285_p2;
reg   [31:0] res_233_reg_1409;
wire   [31:0] grp_fu_289_p2;
reg   [31:0] res_235_reg_1414;
wire   [31:0] grp_fu_293_p2;
reg   [31:0] res_237_reg_1419;
wire   [31:0] grp_fu_297_p2;
reg   [31:0] res_239_reg_1424;
wire   [31:0] grp_fu_301_p2;
reg   [31:0] res_241_reg_1429;
wire   [31:0] grp_fu_305_p2;
reg   [31:0] res_243_reg_1434;
wire   [31:0] grp_fu_309_p2;
reg   [31:0] res_245_reg_1439;
wire   [63:0] add_cast_fu_472_p1;
wire   [63:0] add91_cast_fu_489_p1;
wire   [63:0] add115_cast_fu_641_p1;
reg   [6:0] m1_fu_150;
wire   [6:0] add_ln67_fu_436_p2;
wire    ap_loop_init;
reg   [4:0] n1_fu_154;
reg   [10:0] indvar_flatten6_fu_158;
wire   [10:0] add_ln64_fu_369_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten6_load;
reg    aPipes_1_read_local;
reg    ap_block_pp0_stage0_01001;
reg    aPipes_2_write_local;
reg    bPipes_1_read_local;
reg    bPipes_2_write_local;
reg    aBuffer_we0_local;
reg    aBuffer_ce0_local;
reg    aBuffer_ce1_local;
reg    cBuffer_ce1_local;
reg    cBuffer_we0_local;
wire   [255:0] tmp_154_fu_986_p9;
reg    cBuffer_ce0_local;
wire   [31:0] grp_fu_281_p0;
wire   [31:0] grp_fu_285_p0;
wire   [31:0] grp_fu_289_p0;
wire   [31:0] grp_fu_293_p0;
wire   [31:0] grp_fu_297_p0;
wire   [31:0] grp_fu_301_p0;
wire   [31:0] grp_fu_305_p0;
wire   [31:0] grp_fu_309_p0;
wire   [31:0] grp_fu_313_p1;
wire   [31:0] grp_fu_317_p1;
wire   [31:0] grp_fu_321_p1;
wire   [31:0] grp_fu_325_p1;
wire   [31:0] grp_fu_329_p1;
wire   [31:0] grp_fu_333_p1;
wire   [31:0] grp_fu_337_p1;
wire   [31:0] grp_fu_341_p1;
wire   [1:0] tmp_fu_403_p4;
wire   [0:0] icmp_ln82_fu_397_p2;
wire   [0:0] and_ln80_fu_419_p2;
wire   [0:0] icmp_ln83_fu_413_p2;
wire   [4:0] add_ln64_9_fu_450_p2;
wire   [4:0] add_fu_467_p2;
wire   [4:0] add91_fu_485_p2;
wire   [26:0] zext_ln64_fu_482_p1;
wire   [26:0] add106_fu_494_p2;
wire   [31:0] add106_cast_fu_499_p1;
wire   [9:0] mul3_fu_625_p3;
wire   [9:0] zext_ln67_fu_632_p1;
wire   [9:0] add115_fu_635_p2;
wire   [5:0] empty_fu_646_p1;
wire   [31:0] add2_fu_649_p4;
wire   [31:0] or_ln_fu_663_p4;
wire   [31:0] or_ln125_s_fu_677_p4;
wire   [31:0] or_ln125_33_fu_691_p4;
wire   [31:0] or_ln125_34_fu_705_p4;
wire   [31:0] or_ln125_35_fu_719_p4;
wire   [31:0] or_ln125_36_fu_733_p4;
wire   [31:0] or_ln125_37_fu_747_p4;
wire   [255:0] cPrev_2_fu_761_p3;
wire   [0:0] inBounds_fu_874_p2;
wire   [31:0] select_ln296_fu_878_p3;
wire   [0:0] inBounds_71_fu_888_p2;
wire   [31:0] select_ln296_57_fu_892_p3;
wire   [0:0] inBounds_72_fu_902_p2;
wire   [31:0] select_ln296_58_fu_906_p3;
wire   [0:0] inBounds_73_fu_916_p2;
wire   [31:0] select_ln296_59_fu_920_p3;
wire   [0:0] inBounds_74_fu_930_p2;
wire   [31:0] select_ln296_60_fu_934_p3;
wire   [0:0] inBounds_75_fu_944_p2;
wire   [31:0] select_ln296_61_fu_948_p3;
wire   [0:0] inBounds_76_fu_958_p2;
wire   [31:0] select_ln296_62_fu_962_p3;
wire   [0:0] inBounds_77_fu_972_p2;
wire   [31:0] select_ln296_63_fu_976_p3;
wire   [31:0] bitcast_ln36_63_fu_982_p1;
wire   [31:0] bitcast_ln36_62_fu_968_p1;
wire   [31:0] bitcast_ln36_61_fu_954_p1;
wire   [31:0] bitcast_ln36_60_fu_940_p1;
wire   [31:0] bitcast_ln36_59_fu_926_p1;
wire   [31:0] bitcast_ln36_58_fu_912_p1;
wire   [31:0] bitcast_ln36_57_fu_898_p1;
wire   [31:0] bitcast_ln36_fu_884_p1;
reg    grp_fu_281_ce;
reg    grp_fu_285_ce;
reg    grp_fu_289_ce;
reg    grp_fu_293_ce;
reg    grp_fu_297_ce;
reg    grp_fu_301_ce;
reg    grp_fu_305_ce;
reg    grp_fu_309_ce;
reg    grp_fu_313_ce;
reg    grp_fu_317_ce;
reg    grp_fu_321_ce;
reg    grp_fu_325_ce;
reg    grp_fu_329_ce;
reg    grp_fu_333_ce;
reg    grp_fu_337_ce;
reg    grp_fu_341_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op68_store_state3;
reg    ap_enable_operation_68;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_operation_78;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_operation_79;
reg    ap_enable_state5_pp0_iter4_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 m1_fu_150 = 7'd0;
#0 n1_fu_154 = 5'd0;
#0 indvar_flatten6_fu_158 = 11'd0;
#0 ap_done_reg = 1'b0;
end

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U204(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_281_p0),
    .din1(res_246_reg_1276),
    .ce(grp_fu_281_ce),
    .dout(grp_fu_281_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U205(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(res_247_reg_1286),
    .ce(grp_fu_285_ce),
    .dout(grp_fu_285_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U206(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_289_p0),
    .din1(res_248_reg_1296),
    .ce(grp_fu_289_ce),
    .dout(grp_fu_289_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U207(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_293_p0),
    .din1(res_249_reg_1306),
    .ce(grp_fu_293_ce),
    .dout(grp_fu_293_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U208(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(res_250_reg_1316),
    .ce(grp_fu_297_ce),
    .dout(grp_fu_297_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U209(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_301_p0),
    .din1(res_251_reg_1326),
    .ce(grp_fu_301_ce),
    .dout(grp_fu_301_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U210(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_305_p0),
    .din1(res_252_reg_1336),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_7_full_dsp_1_U211(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_309_p0),
    .din1(res_253_reg_1346),
    .ce(grp_fu_309_ce),
    .dout(grp_fu_309_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U212(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_582_p1),
    .din1(grp_fu_313_p1),
    .ce(grp_fu_313_ce),
    .dout(grp_fu_313_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U213(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_582_p1),
    .din1(grp_fu_317_p1),
    .ce(grp_fu_317_ce),
    .dout(grp_fu_317_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U214(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_582_p1),
    .din1(grp_fu_321_p1),
    .ce(grp_fu_321_ce),
    .dout(grp_fu_321_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U215(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_582_p1),
    .din1(grp_fu_325_p1),
    .ce(grp_fu_325_ce),
    .dout(grp_fu_325_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U216(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_582_p1),
    .din1(grp_fu_329_p1),
    .ce(grp_fu_329_ce),
    .dout(grp_fu_329_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U217(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_582_p1),
    .din1(grp_fu_333_p1),
    .ce(grp_fu_333_ce),
    .dout(grp_fu_333_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U218(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_582_p1),
    .din1(grp_fu_337_p1),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U219(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_582_p1),
    .din1(grp_fu_341_p1),
    .ce(grp_fu_341_ce),
    .dout(grp_fu_341_p2)
);

MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_363_p2 == 1'd0))) begin
            indvar_flatten6_fu_158 <= add_ln64_fu_369_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_158 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            m1_fu_150 <= 7'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            m1_fu_150 <= add_ln67_fu_436_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            n1_fu_154 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            n1_fu_154 <= select_ln64_9_fu_456_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aVal_reg_1133 <= aBuffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln80_9_reg_1097 <= and_ln80_9_fu_424_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln67_reg_1086 <= icmp_ln67_fu_383_p2;
        icmp_ln85_reg_1101 <= icmp_ln85_fu_430_p2;
        select_ln64_reg_1091 <= select_ln64_fu_389_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        bitcast_ln32_130_reg_1356 <= bitcast_ln32_130_fu_842_p1;
        bitcast_ln32_130_reg_1356_pp0_iter10_reg <= bitcast_ln32_130_reg_1356;
        bitcast_ln32_130_reg_1356_pp0_iter11_reg <= bitcast_ln32_130_reg_1356_pp0_iter10_reg;
        bitcast_ln32_130_reg_1356_pp0_iter12_reg <= bitcast_ln32_130_reg_1356_pp0_iter11_reg;
        bitcast_ln32_130_reg_1356_pp0_iter13_reg <= bitcast_ln32_130_reg_1356_pp0_iter12_reg;
        bitcast_ln32_130_reg_1356_pp0_iter14_reg <= bitcast_ln32_130_reg_1356_pp0_iter13_reg;
        bitcast_ln32_130_reg_1356_pp0_iter15_reg <= bitcast_ln32_130_reg_1356_pp0_iter14_reg;
        bitcast_ln32_132_reg_1362 <= bitcast_ln32_132_fu_846_p1;
        bitcast_ln32_132_reg_1362_pp0_iter10_reg <= bitcast_ln32_132_reg_1362;
        bitcast_ln32_132_reg_1362_pp0_iter11_reg <= bitcast_ln32_132_reg_1362_pp0_iter10_reg;
        bitcast_ln32_132_reg_1362_pp0_iter12_reg <= bitcast_ln32_132_reg_1362_pp0_iter11_reg;
        bitcast_ln32_132_reg_1362_pp0_iter13_reg <= bitcast_ln32_132_reg_1362_pp0_iter12_reg;
        bitcast_ln32_132_reg_1362_pp0_iter14_reg <= bitcast_ln32_132_reg_1362_pp0_iter13_reg;
        bitcast_ln32_132_reg_1362_pp0_iter15_reg <= bitcast_ln32_132_reg_1362_pp0_iter14_reg;
        bitcast_ln32_134_reg_1368 <= bitcast_ln32_134_fu_850_p1;
        bitcast_ln32_134_reg_1368_pp0_iter10_reg <= bitcast_ln32_134_reg_1368;
        bitcast_ln32_134_reg_1368_pp0_iter11_reg <= bitcast_ln32_134_reg_1368_pp0_iter10_reg;
        bitcast_ln32_134_reg_1368_pp0_iter12_reg <= bitcast_ln32_134_reg_1368_pp0_iter11_reg;
        bitcast_ln32_134_reg_1368_pp0_iter13_reg <= bitcast_ln32_134_reg_1368_pp0_iter12_reg;
        bitcast_ln32_134_reg_1368_pp0_iter14_reg <= bitcast_ln32_134_reg_1368_pp0_iter13_reg;
        bitcast_ln32_134_reg_1368_pp0_iter15_reg <= bitcast_ln32_134_reg_1368_pp0_iter14_reg;
        bitcast_ln32_136_reg_1374 <= bitcast_ln32_136_fu_854_p1;
        bitcast_ln32_136_reg_1374_pp0_iter10_reg <= bitcast_ln32_136_reg_1374;
        bitcast_ln32_136_reg_1374_pp0_iter11_reg <= bitcast_ln32_136_reg_1374_pp0_iter10_reg;
        bitcast_ln32_136_reg_1374_pp0_iter12_reg <= bitcast_ln32_136_reg_1374_pp0_iter11_reg;
        bitcast_ln32_136_reg_1374_pp0_iter13_reg <= bitcast_ln32_136_reg_1374_pp0_iter12_reg;
        bitcast_ln32_136_reg_1374_pp0_iter14_reg <= bitcast_ln32_136_reg_1374_pp0_iter13_reg;
        bitcast_ln32_136_reg_1374_pp0_iter15_reg <= bitcast_ln32_136_reg_1374_pp0_iter14_reg;
        bitcast_ln32_138_reg_1380 <= bitcast_ln32_138_fu_858_p1;
        bitcast_ln32_138_reg_1380_pp0_iter10_reg <= bitcast_ln32_138_reg_1380;
        bitcast_ln32_138_reg_1380_pp0_iter11_reg <= bitcast_ln32_138_reg_1380_pp0_iter10_reg;
        bitcast_ln32_138_reg_1380_pp0_iter12_reg <= bitcast_ln32_138_reg_1380_pp0_iter11_reg;
        bitcast_ln32_138_reg_1380_pp0_iter13_reg <= bitcast_ln32_138_reg_1380_pp0_iter12_reg;
        bitcast_ln32_138_reg_1380_pp0_iter14_reg <= bitcast_ln32_138_reg_1380_pp0_iter13_reg;
        bitcast_ln32_138_reg_1380_pp0_iter15_reg <= bitcast_ln32_138_reg_1380_pp0_iter14_reg;
        bitcast_ln32_140_reg_1386 <= bitcast_ln32_140_fu_862_p1;
        bitcast_ln32_140_reg_1386_pp0_iter10_reg <= bitcast_ln32_140_reg_1386;
        bitcast_ln32_140_reg_1386_pp0_iter11_reg <= bitcast_ln32_140_reg_1386_pp0_iter10_reg;
        bitcast_ln32_140_reg_1386_pp0_iter12_reg <= bitcast_ln32_140_reg_1386_pp0_iter11_reg;
        bitcast_ln32_140_reg_1386_pp0_iter13_reg <= bitcast_ln32_140_reg_1386_pp0_iter12_reg;
        bitcast_ln32_140_reg_1386_pp0_iter14_reg <= bitcast_ln32_140_reg_1386_pp0_iter13_reg;
        bitcast_ln32_140_reg_1386_pp0_iter15_reg <= bitcast_ln32_140_reg_1386_pp0_iter14_reg;
        bitcast_ln32_142_reg_1392 <= bitcast_ln32_142_fu_866_p1;
        bitcast_ln32_142_reg_1392_pp0_iter10_reg <= bitcast_ln32_142_reg_1392;
        bitcast_ln32_142_reg_1392_pp0_iter11_reg <= bitcast_ln32_142_reg_1392_pp0_iter10_reg;
        bitcast_ln32_142_reg_1392_pp0_iter12_reg <= bitcast_ln32_142_reg_1392_pp0_iter11_reg;
        bitcast_ln32_142_reg_1392_pp0_iter13_reg <= bitcast_ln32_142_reg_1392_pp0_iter12_reg;
        bitcast_ln32_142_reg_1392_pp0_iter14_reg <= bitcast_ln32_142_reg_1392_pp0_iter13_reg;
        bitcast_ln32_142_reg_1392_pp0_iter15_reg <= bitcast_ln32_142_reg_1392_pp0_iter14_reg;
        bitcast_ln32_144_reg_1398 <= bitcast_ln32_144_fu_870_p1;
        bitcast_ln32_144_reg_1398_pp0_iter10_reg <= bitcast_ln32_144_reg_1398;
        bitcast_ln32_144_reg_1398_pp0_iter11_reg <= bitcast_ln32_144_reg_1398_pp0_iter10_reg;
        bitcast_ln32_144_reg_1398_pp0_iter12_reg <= bitcast_ln32_144_reg_1398_pp0_iter11_reg;
        bitcast_ln32_144_reg_1398_pp0_iter13_reg <= bitcast_ln32_144_reg_1398_pp0_iter12_reg;
        bitcast_ln32_144_reg_1398_pp0_iter14_reg <= bitcast_ln32_144_reg_1398_pp0_iter13_reg;
        bitcast_ln32_144_reg_1398_pp0_iter15_reg <= bitcast_ln32_144_reg_1398_pp0_iter14_reg;
        cBuffer_addr_reg_1230 <= add115_cast_fu_641_p1;
        cBuffer_addr_reg_1230_pp0_iter10_reg <= cBuffer_addr_reg_1230_pp0_iter9_reg;
        cBuffer_addr_reg_1230_pp0_iter11_reg <= cBuffer_addr_reg_1230_pp0_iter10_reg;
        cBuffer_addr_reg_1230_pp0_iter12_reg <= cBuffer_addr_reg_1230_pp0_iter11_reg;
        cBuffer_addr_reg_1230_pp0_iter13_reg <= cBuffer_addr_reg_1230_pp0_iter12_reg;
        cBuffer_addr_reg_1230_pp0_iter14_reg <= cBuffer_addr_reg_1230_pp0_iter13_reg;
        cBuffer_addr_reg_1230_pp0_iter15_reg <= cBuffer_addr_reg_1230_pp0_iter14_reg;
        cBuffer_addr_reg_1230_pp0_iter8_reg <= cBuffer_addr_reg_1230;
        cBuffer_addr_reg_1230_pp0_iter9_reg <= cBuffer_addr_reg_1230_pp0_iter8_reg;
        empty_205_reg_1111 <= empty_205_fu_463_p1;
        empty_205_reg_1111_pp0_iter3_reg <= empty_205_reg_1111;
        empty_205_reg_1111_pp0_iter4_reg <= empty_205_reg_1111_pp0_iter3_reg;
        empty_205_reg_1111_pp0_iter5_reg <= empty_205_reg_1111_pp0_iter4_reg;
        empty_205_reg_1111_pp0_iter6_reg <= empty_205_reg_1111_pp0_iter5_reg;
        inBoundsM_71_reg_1241 <= inBoundsM_71_fu_672_p2;
        inBoundsM_71_reg_1241_pp0_iter10_reg <= inBoundsM_71_reg_1241_pp0_iter9_reg;
        inBoundsM_71_reg_1241_pp0_iter11_reg <= inBoundsM_71_reg_1241_pp0_iter10_reg;
        inBoundsM_71_reg_1241_pp0_iter12_reg <= inBoundsM_71_reg_1241_pp0_iter11_reg;
        inBoundsM_71_reg_1241_pp0_iter13_reg <= inBoundsM_71_reg_1241_pp0_iter12_reg;
        inBoundsM_71_reg_1241_pp0_iter14_reg <= inBoundsM_71_reg_1241_pp0_iter13_reg;
        inBoundsM_71_reg_1241_pp0_iter15_reg <= inBoundsM_71_reg_1241_pp0_iter14_reg;
        inBoundsM_71_reg_1241_pp0_iter8_reg <= inBoundsM_71_reg_1241;
        inBoundsM_71_reg_1241_pp0_iter9_reg <= inBoundsM_71_reg_1241_pp0_iter8_reg;
        inBoundsM_72_reg_1246 <= inBoundsM_72_fu_686_p2;
        inBoundsM_72_reg_1246_pp0_iter10_reg <= inBoundsM_72_reg_1246_pp0_iter9_reg;
        inBoundsM_72_reg_1246_pp0_iter11_reg <= inBoundsM_72_reg_1246_pp0_iter10_reg;
        inBoundsM_72_reg_1246_pp0_iter12_reg <= inBoundsM_72_reg_1246_pp0_iter11_reg;
        inBoundsM_72_reg_1246_pp0_iter13_reg <= inBoundsM_72_reg_1246_pp0_iter12_reg;
        inBoundsM_72_reg_1246_pp0_iter14_reg <= inBoundsM_72_reg_1246_pp0_iter13_reg;
        inBoundsM_72_reg_1246_pp0_iter15_reg <= inBoundsM_72_reg_1246_pp0_iter14_reg;
        inBoundsM_72_reg_1246_pp0_iter8_reg <= inBoundsM_72_reg_1246;
        inBoundsM_72_reg_1246_pp0_iter9_reg <= inBoundsM_72_reg_1246_pp0_iter8_reg;
        inBoundsM_73_reg_1251 <= inBoundsM_73_fu_700_p2;
        inBoundsM_73_reg_1251_pp0_iter10_reg <= inBoundsM_73_reg_1251_pp0_iter9_reg;
        inBoundsM_73_reg_1251_pp0_iter11_reg <= inBoundsM_73_reg_1251_pp0_iter10_reg;
        inBoundsM_73_reg_1251_pp0_iter12_reg <= inBoundsM_73_reg_1251_pp0_iter11_reg;
        inBoundsM_73_reg_1251_pp0_iter13_reg <= inBoundsM_73_reg_1251_pp0_iter12_reg;
        inBoundsM_73_reg_1251_pp0_iter14_reg <= inBoundsM_73_reg_1251_pp0_iter13_reg;
        inBoundsM_73_reg_1251_pp0_iter15_reg <= inBoundsM_73_reg_1251_pp0_iter14_reg;
        inBoundsM_73_reg_1251_pp0_iter8_reg <= inBoundsM_73_reg_1251;
        inBoundsM_73_reg_1251_pp0_iter9_reg <= inBoundsM_73_reg_1251_pp0_iter8_reg;
        inBoundsM_74_reg_1256 <= inBoundsM_74_fu_714_p2;
        inBoundsM_74_reg_1256_pp0_iter10_reg <= inBoundsM_74_reg_1256_pp0_iter9_reg;
        inBoundsM_74_reg_1256_pp0_iter11_reg <= inBoundsM_74_reg_1256_pp0_iter10_reg;
        inBoundsM_74_reg_1256_pp0_iter12_reg <= inBoundsM_74_reg_1256_pp0_iter11_reg;
        inBoundsM_74_reg_1256_pp0_iter13_reg <= inBoundsM_74_reg_1256_pp0_iter12_reg;
        inBoundsM_74_reg_1256_pp0_iter14_reg <= inBoundsM_74_reg_1256_pp0_iter13_reg;
        inBoundsM_74_reg_1256_pp0_iter15_reg <= inBoundsM_74_reg_1256_pp0_iter14_reg;
        inBoundsM_74_reg_1256_pp0_iter8_reg <= inBoundsM_74_reg_1256;
        inBoundsM_74_reg_1256_pp0_iter9_reg <= inBoundsM_74_reg_1256_pp0_iter8_reg;
        inBoundsM_75_reg_1261 <= inBoundsM_75_fu_728_p2;
        inBoundsM_75_reg_1261_pp0_iter10_reg <= inBoundsM_75_reg_1261_pp0_iter9_reg;
        inBoundsM_75_reg_1261_pp0_iter11_reg <= inBoundsM_75_reg_1261_pp0_iter10_reg;
        inBoundsM_75_reg_1261_pp0_iter12_reg <= inBoundsM_75_reg_1261_pp0_iter11_reg;
        inBoundsM_75_reg_1261_pp0_iter13_reg <= inBoundsM_75_reg_1261_pp0_iter12_reg;
        inBoundsM_75_reg_1261_pp0_iter14_reg <= inBoundsM_75_reg_1261_pp0_iter13_reg;
        inBoundsM_75_reg_1261_pp0_iter15_reg <= inBoundsM_75_reg_1261_pp0_iter14_reg;
        inBoundsM_75_reg_1261_pp0_iter8_reg <= inBoundsM_75_reg_1261;
        inBoundsM_75_reg_1261_pp0_iter9_reg <= inBoundsM_75_reg_1261_pp0_iter8_reg;
        inBoundsM_76_reg_1266 <= inBoundsM_76_fu_742_p2;
        inBoundsM_76_reg_1266_pp0_iter10_reg <= inBoundsM_76_reg_1266_pp0_iter9_reg;
        inBoundsM_76_reg_1266_pp0_iter11_reg <= inBoundsM_76_reg_1266_pp0_iter10_reg;
        inBoundsM_76_reg_1266_pp0_iter12_reg <= inBoundsM_76_reg_1266_pp0_iter11_reg;
        inBoundsM_76_reg_1266_pp0_iter13_reg <= inBoundsM_76_reg_1266_pp0_iter12_reg;
        inBoundsM_76_reg_1266_pp0_iter14_reg <= inBoundsM_76_reg_1266_pp0_iter13_reg;
        inBoundsM_76_reg_1266_pp0_iter15_reg <= inBoundsM_76_reg_1266_pp0_iter14_reg;
        inBoundsM_76_reg_1266_pp0_iter8_reg <= inBoundsM_76_reg_1266;
        inBoundsM_76_reg_1266_pp0_iter9_reg <= inBoundsM_76_reg_1266_pp0_iter8_reg;
        inBoundsM_77_reg_1271 <= inBoundsM_77_fu_756_p2;
        inBoundsM_77_reg_1271_pp0_iter10_reg <= inBoundsM_77_reg_1271_pp0_iter9_reg;
        inBoundsM_77_reg_1271_pp0_iter11_reg <= inBoundsM_77_reg_1271_pp0_iter10_reg;
        inBoundsM_77_reg_1271_pp0_iter12_reg <= inBoundsM_77_reg_1271_pp0_iter11_reg;
        inBoundsM_77_reg_1271_pp0_iter13_reg <= inBoundsM_77_reg_1271_pp0_iter12_reg;
        inBoundsM_77_reg_1271_pp0_iter14_reg <= inBoundsM_77_reg_1271_pp0_iter13_reg;
        inBoundsM_77_reg_1271_pp0_iter15_reg <= inBoundsM_77_reg_1271_pp0_iter14_reg;
        inBoundsM_77_reg_1271_pp0_iter8_reg <= inBoundsM_77_reg_1271;
        inBoundsM_77_reg_1271_pp0_iter9_reg <= inBoundsM_77_reg_1271_pp0_iter8_reg;
        inBoundsM_reg_1236 <= inBoundsM_fu_658_p2;
        inBoundsM_reg_1236_pp0_iter10_reg <= inBoundsM_reg_1236_pp0_iter9_reg;
        inBoundsM_reg_1236_pp0_iter11_reg <= inBoundsM_reg_1236_pp0_iter10_reg;
        inBoundsM_reg_1236_pp0_iter12_reg <= inBoundsM_reg_1236_pp0_iter11_reg;
        inBoundsM_reg_1236_pp0_iter13_reg <= inBoundsM_reg_1236_pp0_iter12_reg;
        inBoundsM_reg_1236_pp0_iter14_reg <= inBoundsM_reg_1236_pp0_iter13_reg;
        inBoundsM_reg_1236_pp0_iter15_reg <= inBoundsM_reg_1236_pp0_iter14_reg;
        inBoundsM_reg_1236_pp0_iter8_reg <= inBoundsM_reg_1236;
        inBoundsM_reg_1236_pp0_iter9_reg <= inBoundsM_reg_1236_pp0_iter8_reg;
        inBoundsN_reg_1121 <= inBoundsN_fu_503_p2;
        inBoundsN_reg_1121_pp0_iter10_reg <= inBoundsN_reg_1121_pp0_iter9_reg;
        inBoundsN_reg_1121_pp0_iter11_reg <= inBoundsN_reg_1121_pp0_iter10_reg;
        inBoundsN_reg_1121_pp0_iter12_reg <= inBoundsN_reg_1121_pp0_iter11_reg;
        inBoundsN_reg_1121_pp0_iter13_reg <= inBoundsN_reg_1121_pp0_iter12_reg;
        inBoundsN_reg_1121_pp0_iter14_reg <= inBoundsN_reg_1121_pp0_iter13_reg;
        inBoundsN_reg_1121_pp0_iter15_reg <= inBoundsN_reg_1121_pp0_iter14_reg;
        inBoundsN_reg_1121_pp0_iter4_reg <= inBoundsN_reg_1121;
        inBoundsN_reg_1121_pp0_iter5_reg <= inBoundsN_reg_1121_pp0_iter4_reg;
        inBoundsN_reg_1121_pp0_iter6_reg <= inBoundsN_reg_1121_pp0_iter5_reg;
        inBoundsN_reg_1121_pp0_iter7_reg <= inBoundsN_reg_1121_pp0_iter6_reg;
        inBoundsN_reg_1121_pp0_iter8_reg <= inBoundsN_reg_1121_pp0_iter7_reg;
        inBoundsN_reg_1121_pp0_iter9_reg <= inBoundsN_reg_1121_pp0_iter8_reg;
        res_233_reg_1409 <= grp_fu_285_p2;
        res_235_reg_1414 <= grp_fu_289_p2;
        res_237_reg_1419 <= grp_fu_293_p2;
        res_239_reg_1424 <= grp_fu_297_p2;
        res_241_reg_1429 <= grp_fu_301_p2;
        res_243_reg_1434 <= grp_fu_305_p2;
        res_245_reg_1439 <= grp_fu_309_p2;
        res_246_reg_1276 <= grp_fu_313_p2;
        res_247_reg_1286 <= grp_fu_317_p2;
        res_248_reg_1296 <= grp_fu_321_p2;
        res_249_reg_1306 <= grp_fu_325_p2;
        res_250_reg_1316 <= grp_fu_329_p2;
        res_251_reg_1326 <= grp_fu_333_p2;
        res_252_reg_1336 <= grp_fu_337_p2;
        res_253_reg_1346 <= grp_fu_341_p2;
        res_reg_1404 <= grp_fu_281_p2;
        select_ln64_9_reg_1105 <= select_ln64_9_fu_456_p3;
        select_ln64_reg_1091_pp0_iter2_reg <= select_ln64_reg_1091;
        select_ln64_reg_1091_pp0_iter3_reg <= select_ln64_reg_1091_pp0_iter2_reg;
        select_ln64_reg_1091_pp0_iter4_reg <= select_ln64_reg_1091_pp0_iter3_reg;
        select_ln64_reg_1091_pp0_iter5_reg <= select_ln64_reg_1091_pp0_iter4_reg;
        select_ln64_reg_1091_pp0_iter6_reg <= select_ln64_reg_1091_pp0_iter5_reg;
        tmp_141_reg_1291 <= {{cPrev_2_fu_761_p3[63:32]}};
        tmp_142_reg_1148 <= {{bPipes_1_dout[95:64]}};
        tmp_143_reg_1301 <= {{cPrev_2_fu_761_p3[95:64]}};
        tmp_144_reg_1153 <= {{bPipes_1_dout[127:96]}};
        tmp_145_reg_1311 <= {{cPrev_2_fu_761_p3[127:96]}};
        tmp_146_reg_1158 <= {{bPipes_1_dout[159:128]}};
        tmp_147_reg_1321 <= {{cPrev_2_fu_761_p3[159:128]}};
        tmp_148_reg_1163 <= {{bPipes_1_dout[191:160]}};
        tmp_149_reg_1331 <= {{cPrev_2_fu_761_p3[191:160]}};
        tmp_150_reg_1168 <= {{bPipes_1_dout[223:192]}};
        tmp_151_reg_1341 <= {{cPrev_2_fu_761_p3[223:192]}};
        tmp_152_reg_1173 <= {{bPipes_1_dout[255:224]}};
        tmp_153_reg_1351 <= {{cPrev_2_fu_761_p3[255:224]}};
        tmp_s_reg_1143 <= {{bPipes_1_dout[63:32]}};
        trunc_ln170_11_reg_1281 <= trunc_ln170_11_fu_768_p1;
        trunc_ln170_reg_1138 <= trunc_ln170_fu_508_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce0_local = 1'b1;
    end else begin
        aBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce1_local = 1'b1;
    end else begin
        aBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_reg_1101 == 1'd1) & (1'd1 == and_ln80_9_reg_1097) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_we0_local = 1'b1;
    end else begin
        aBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_9_reg_1097) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_1_blk_n = aPipes_1_empty_n;
    end else begin
        aPipes_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_9_reg_1097) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_1_read_local = 1'b1;
    end else begin
        aPipes_1_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op66_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_2_blk_n = aPipes_2_full_n;
    end else begin
        aPipes_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op66_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_2_write_local = 1'b1;
    end else begin
        aPipes_2_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_363_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter15_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_158;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_1_blk_n = bPipes_1_empty_n;
    end else begin
        bPipes_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_1_read_local = 1'b1;
    end else begin
        bPipes_1_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_2_blk_n = bPipes_2_full_n;
    end else begin
        bPipes_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_2_write_local = 1'b1;
    end else begin
        bPipes_2_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce0_local = 1'b1;
    end else begin
        cBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce1_local = 1'b1;
    end else begin
        cBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_we0_local = 1'b1;
    end else begin
        cBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_281_ce = 1'b1;
    end else begin
        grp_fu_281_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_285_ce = 1'b1;
    end else begin
        grp_fu_285_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_289_ce = 1'b1;
    end else begin
        grp_fu_289_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_293_ce = 1'b1;
    end else begin
        grp_fu_293_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_297_ce = 1'b1;
    end else begin
        grp_fu_297_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_301_ce = 1'b1;
    end else begin
        grp_fu_301_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_309_ce = 1'b1;
    end else begin
        grp_fu_309_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_313_ce = 1'b1;
    end else begin
        grp_fu_313_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_317_ce = 1'b1;
    end else begin
        grp_fu_317_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_321_ce = 1'b1;
    end else begin
        grp_fu_321_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_325_ce = 1'b1;
    end else begin
        grp_fu_325_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_329_ce = 1'b1;
    end else begin
        grp_fu_329_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_333_ce = 1'b1;
    end else begin
        grp_fu_333_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_341_ce = 1'b1;
    end else begin
        grp_fu_341_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aBuffer_address0 = add_cast_fu_472_p1;

assign aBuffer_address1 = add91_cast_fu_489_p1;

assign aBuffer_ce0 = aBuffer_ce0_local;

assign aBuffer_ce1 = aBuffer_ce1_local;

assign aBuffer_d0 = aPipes_1_dout;

assign aBuffer_we0 = aBuffer_we0_local;

assign aPipes_1_read = aPipes_1_read_local;

assign aPipes_2_din = aPipes_1_dout;

assign aPipes_2_write = aPipes_2_write_local;

assign add106_cast_fu_499_p1 = add106_fu_494_p2;

assign add106_fu_494_p2 = (mul + zext_ln64_fu_482_p1);

assign add115_cast_fu_641_p1 = add115_fu_635_p2;

assign add115_fu_635_p2 = (mul3_fu_625_p3 + zext_ln67_fu_632_p1);

assign add2_fu_649_p4 = {{{m0}, {empty_fu_646_p1}}, {3'd0}};

assign add91_cast_fu_489_p1 = add91_fu_485_p2;

assign add91_fu_485_p2 = (select_ln64_9_reg_1105 + cond90);

assign add_cast_fu_472_p1 = add_fu_467_p2;

assign add_fu_467_p2 = (select_ln64_9_fu_456_p3 + cond);

assign add_ln64_9_fu_450_p2 = (n1_fu_154 + 5'd1);

assign add_ln64_fu_369_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 11'd1);

assign add_ln67_fu_436_p2 = (select_ln64_fu_389_p3 + 7'd1);

assign and_ln80_9_fu_424_p2 = (icmp_ln83_fu_413_p2 & and_ln80_fu_419_p2);

assign and_ln80_fu_419_p2 = (icmp_ln82_fu_397_p2 & brmerge282);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op66_write_state3 == 1'b1) & (1'b0 == aPipes_2_full_n)) | ((1'd1 == and_ln80_9_reg_1097) & (1'b0 == aPipes_1_empty_n)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter4 = ((bPipes_2_full_n == 1'b0) | (bPipes_1_empty_n == 1'b0));
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_68 = (ap_predicate_op68_store_state3 == 1'b1);
end

assign ap_enable_operation_78 = (1'b1 == 1'b1);

assign ap_enable_operation_79 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op66_write_state3 = ((icmp_ln85_reg_1101 == 1'd0) & (1'd1 == and_ln80_9_reg_1097));
end

always @ (*) begin
    ap_predicate_op68_store_state3 = ((icmp_ln85_reg_1101 == 1'd1) & (1'd1 == and_ln80_9_reg_1097));
end

assign ap_ready = ap_ready_sig;

assign bPipes_1_read = bPipes_1_read_local;

assign bPipes_2_din = bPipes_1_dout;

assign bPipes_2_write = bPipes_2_write_local;

assign bitcast_ln32_130_fu_842_p1 = trunc_ln170_11_reg_1281;

assign bitcast_ln32_132_fu_846_p1 = tmp_141_reg_1291;

assign bitcast_ln32_134_fu_850_p1 = tmp_143_reg_1301;

assign bitcast_ln32_136_fu_854_p1 = tmp_145_reg_1311;

assign bitcast_ln32_138_fu_858_p1 = tmp_147_reg_1321;

assign bitcast_ln32_140_fu_862_p1 = tmp_149_reg_1331;

assign bitcast_ln32_142_fu_866_p1 = tmp_151_reg_1341;

assign bitcast_ln32_144_fu_870_p1 = tmp_153_reg_1351;

assign bitcast_ln32_fu_582_p1 = aVal_reg_1133;

assign bitcast_ln36_57_fu_898_p1 = select_ln296_57_fu_892_p3;

assign bitcast_ln36_58_fu_912_p1 = select_ln296_58_fu_906_p3;

assign bitcast_ln36_59_fu_926_p1 = select_ln296_59_fu_920_p3;

assign bitcast_ln36_60_fu_940_p1 = select_ln296_60_fu_934_p3;

assign bitcast_ln36_61_fu_954_p1 = select_ln296_61_fu_948_p3;

assign bitcast_ln36_62_fu_968_p1 = select_ln296_62_fu_962_p3;

assign bitcast_ln36_63_fu_982_p1 = select_ln296_63_fu_976_p3;

assign bitcast_ln36_fu_884_p1 = select_ln296_fu_878_p3;

assign cBuffer_address0 = cBuffer_addr_reg_1230_pp0_iter15_reg;

assign cBuffer_address1 = add115_cast_fu_641_p1;

assign cBuffer_ce0 = cBuffer_ce0_local;

assign cBuffer_ce1 = cBuffer_ce1_local;

assign cBuffer_d0 = tmp_154_fu_986_p9;

assign cBuffer_we0 = cBuffer_we0_local;

assign cPrev_2_fu_761_p3 = ((cmp111[0:0] == 1'b1) ? 256'd0 : cBuffer_q1);

assign empty_205_fu_463_p1 = select_ln64_9_fu_456_p3[3:0];

assign empty_fu_646_p1 = select_ln64_reg_1091_pp0_iter6_reg[5:0];

assign grp_fu_281_p0 = trunc_ln170_11_reg_1281;

assign grp_fu_285_p0 = tmp_141_reg_1291;

assign grp_fu_289_p0 = tmp_143_reg_1301;

assign grp_fu_293_p0 = tmp_145_reg_1311;

assign grp_fu_297_p0 = tmp_147_reg_1321;

assign grp_fu_301_p0 = tmp_149_reg_1331;

assign grp_fu_305_p0 = tmp_151_reg_1341;

assign grp_fu_309_p0 = tmp_153_reg_1351;

assign grp_fu_313_p1 = trunc_ln170_reg_1138;

assign grp_fu_317_p1 = tmp_s_reg_1143;

assign grp_fu_321_p1 = tmp_142_reg_1148;

assign grp_fu_325_p1 = tmp_144_reg_1153;

assign grp_fu_329_p1 = tmp_146_reg_1158;

assign grp_fu_333_p1 = tmp_148_reg_1163;

assign grp_fu_337_p1 = tmp_150_reg_1168;

assign grp_fu_341_p1 = tmp_152_reg_1173;

assign icmp_ln64_fu_363_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_383_p2 = ((m1_fu_150 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_397_p2 = ((select_ln64_fu_389_p3 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_413_p2 = ((tmp_fu_403_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_430_p2 = ((select_ln64_fu_389_p3 == 7'd1) ? 1'b1 : 1'b0);

assign inBoundsM_71_fu_672_p2 = ((or_ln_fu_663_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_72_fu_686_p2 = ((or_ln125_s_fu_677_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_73_fu_700_p2 = ((or_ln125_33_fu_691_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_74_fu_714_p2 = ((or_ln125_34_fu_705_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_75_fu_728_p2 = ((or_ln125_35_fu_719_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_76_fu_742_p2 = ((or_ln125_36_fu_733_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_77_fu_756_p2 = ((or_ln125_37_fu_747_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_fu_658_p2 = ((add2_fu_649_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsN_fu_503_p2 = ((add106_cast_fu_499_p1 < size_n) ? 1'b1 : 1'b0);

assign inBounds_71_fu_888_p2 = (inBoundsN_reg_1121_pp0_iter15_reg & inBoundsM_71_reg_1241_pp0_iter15_reg);

assign inBounds_72_fu_902_p2 = (inBoundsN_reg_1121_pp0_iter15_reg & inBoundsM_72_reg_1246_pp0_iter15_reg);

assign inBounds_73_fu_916_p2 = (inBoundsN_reg_1121_pp0_iter15_reg & inBoundsM_73_reg_1251_pp0_iter15_reg);

assign inBounds_74_fu_930_p2 = (inBoundsN_reg_1121_pp0_iter15_reg & inBoundsM_74_reg_1256_pp0_iter15_reg);

assign inBounds_75_fu_944_p2 = (inBoundsN_reg_1121_pp0_iter15_reg & inBoundsM_75_reg_1261_pp0_iter15_reg);

assign inBounds_76_fu_958_p2 = (inBoundsN_reg_1121_pp0_iter15_reg & inBoundsM_76_reg_1266_pp0_iter15_reg);

assign inBounds_77_fu_972_p2 = (inBoundsN_reg_1121_pp0_iter15_reg & inBoundsM_77_reg_1271_pp0_iter15_reg);

assign inBounds_fu_874_p2 = (inBoundsN_reg_1121_pp0_iter15_reg & inBoundsM_reg_1236_pp0_iter15_reg);

assign mul3_fu_625_p3 = {{empty_205_reg_1111_pp0_iter6_reg}, {6'd0}};

assign or_ln125_33_fu_691_p4 = {{{m0}, {empty_fu_646_p1}}, {3'd3}};

assign or_ln125_34_fu_705_p4 = {{{m0}, {empty_fu_646_p1}}, {3'd4}};

assign or_ln125_35_fu_719_p4 = {{{m0}, {empty_fu_646_p1}}, {3'd5}};

assign or_ln125_36_fu_733_p4 = {{{m0}, {empty_fu_646_p1}}, {3'd6}};

assign or_ln125_37_fu_747_p4 = {{{m0}, {empty_fu_646_p1}}, {3'd7}};

assign or_ln125_s_fu_677_p4 = {{{m0}, {empty_fu_646_p1}}, {3'd2}};

assign or_ln_fu_663_p4 = {{{m0}, {empty_fu_646_p1}}, {3'd1}};

assign select_ln296_57_fu_892_p3 = ((inBounds_71_fu_888_p2[0:0] == 1'b1) ? res_233_reg_1409 : bitcast_ln32_132_reg_1362_pp0_iter15_reg);

assign select_ln296_58_fu_906_p3 = ((inBounds_72_fu_902_p2[0:0] == 1'b1) ? res_235_reg_1414 : bitcast_ln32_134_reg_1368_pp0_iter15_reg);

assign select_ln296_59_fu_920_p3 = ((inBounds_73_fu_916_p2[0:0] == 1'b1) ? res_237_reg_1419 : bitcast_ln32_136_reg_1374_pp0_iter15_reg);

assign select_ln296_60_fu_934_p3 = ((inBounds_74_fu_930_p2[0:0] == 1'b1) ? res_239_reg_1424 : bitcast_ln32_138_reg_1380_pp0_iter15_reg);

assign select_ln296_61_fu_948_p3 = ((inBounds_75_fu_944_p2[0:0] == 1'b1) ? res_241_reg_1429 : bitcast_ln32_140_reg_1386_pp0_iter15_reg);

assign select_ln296_62_fu_962_p3 = ((inBounds_76_fu_958_p2[0:0] == 1'b1) ? res_243_reg_1434 : bitcast_ln32_142_reg_1392_pp0_iter15_reg);

assign select_ln296_63_fu_976_p3 = ((inBounds_77_fu_972_p2[0:0] == 1'b1) ? res_245_reg_1439 : bitcast_ln32_144_reg_1398_pp0_iter15_reg);

assign select_ln296_fu_878_p3 = ((inBounds_fu_874_p2[0:0] == 1'b1) ? res_reg_1404 : bitcast_ln32_130_reg_1356_pp0_iter15_reg);

assign select_ln64_9_fu_456_p3 = ((icmp_ln67_reg_1086[0:0] == 1'b1) ? add_ln64_9_fu_450_p2 : n1_fu_154);

assign select_ln64_fu_389_p3 = ((icmp_ln67_fu_383_p2[0:0] == 1'b1) ? 7'd0 : m1_fu_150);

assign tmp_154_fu_986_p9 = {{{{{{{{bitcast_ln36_63_fu_982_p1}, {bitcast_ln36_62_fu_968_p1}}, {bitcast_ln36_61_fu_954_p1}}, {bitcast_ln36_60_fu_940_p1}}, {bitcast_ln36_59_fu_926_p1}}, {bitcast_ln36_58_fu_912_p1}}, {bitcast_ln36_57_fu_898_p1}}, {bitcast_ln36_fu_884_p1}};

assign tmp_fu_403_p4 = {{select_ln64_fu_389_p3[6:5]}};

assign trunc_ln170_11_fu_768_p1 = cPrev_2_fu_761_p3[31:0];

assign trunc_ln170_fu_508_p1 = bPipes_1_dout[31:0];

assign zext_ln64_fu_482_p1 = select_ln64_9_reg_1105;

assign zext_ln67_fu_632_p1 = select_ln64_reg_1091_pp0_iter6_reg;

endmodule //MatrixMultiplicationKernel_ProcessingElement_2_Pipeline_Pipeline_N_Pipeline_M
