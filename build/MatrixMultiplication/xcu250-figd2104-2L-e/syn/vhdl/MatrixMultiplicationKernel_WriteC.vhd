-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MatrixMultiplicationKernel_WriteC is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    cMemory_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    cMemory_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
    cMemory_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
    cMemory_empty_n : IN STD_LOGIC;
    cMemory_read : OUT STD_LOGIC;
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    memory_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    memory_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    memory_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    memory_empty_n : IN STD_LOGIC;
    memory_read : OUT STD_LOGIC;
    size_n_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    size_n_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    size_n_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    size_n_empty_n : IN STD_LOGIC;
    size_n_read : OUT STD_LOGIC;
    size_m_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    size_m_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    size_m_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    size_m_empty_n : IN STD_LOGIC;
    size_m_read : OUT STD_LOGIC );
end;


architecture behav of MatrixMultiplicationKernel_WriteC is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv33_1FF : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000111111111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal memory_blk_n : STD_LOGIC;
    signal size_n_blk_n : STD_LOGIC;
    signal size_m_blk_n : STD_LOGIC;
    signal size_n_read_reg_168 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal memory_read_reg_173 : STD_LOGIC_VECTOR (63 downto 0);
    signal div_i1_reg_178 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_1_fu_150_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal tmp_1_reg_184 : STD_LOGIC_VECTOR (37 downto 0);
    signal bound17_fu_96_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal bound17_reg_189 : STD_LOGIC_VECTOR (60 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_idle : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_ready : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_cMemory_read : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWVALID : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WVALID : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WLAST : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARVALID : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_RREADY : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_BREADY : STD_LOGIC;
    signal grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_NS_fsm_state2 : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal size_m_read_local : STD_LOGIC;
    signal size_n_read_local : STD_LOGIC;
    signal memory_read_local : STD_LOGIC;
    signal bound17_fu_96_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal bound17_fu_96_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal size_n_cast_fu_100_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_i_fu_104_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal size_m_cast_fu_120_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_i3_fu_124_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_fu_140_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal div_i_cast_fu_110_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal bound17_fu_96_p00 : STD_LOGIC_VECTOR (60 downto 0);
    signal bound17_fu_96_p10 : STD_LOGIC_VECTOR (60 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component MatrixMultiplicationKernel_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cMemory_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        cMemory_num_data_valid : IN STD_LOGIC_VECTOR (6 downto 0);
        cMemory_fifo_cap : IN STD_LOGIC_VECTOR (6 downto 0);
        cMemory_empty_n : IN STD_LOGIC;
        cMemory_read : OUT STD_LOGIC;
        m_axi_gmem2_AWVALID : OUT STD_LOGIC;
        m_axi_gmem2_AWREADY : IN STD_LOGIC;
        m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WVALID : OUT STD_LOGIC;
        m_axi_gmem2_WREADY : IN STD_LOGIC;
        m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_WLAST : OUT STD_LOGIC;
        m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARVALID : OUT STD_LOGIC;
        m_axi_gmem2_ARREADY : IN STD_LOGIC;
        m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RVALID : IN STD_LOGIC;
        m_axi_gmem2_RREADY : OUT STD_LOGIC;
        m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem2_RLAST : IN STD_LOGIC;
        m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BVALID : IN STD_LOGIC;
        m_axi_gmem2_BREADY : OUT STD_LOGIC;
        m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        bound17 : IN STD_LOGIC_VECTOR (60 downto 0);
        bound4 : IN STD_LOGIC_VECTOR (37 downto 0);
        size_n_load : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (27 downto 0);
        div_i1 : IN STD_LOGIC_VECTOR (27 downto 0);
        memory_load : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component MatrixMultiplicationKernel_mul_24ns_38ns_61_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (37 downto 0);
        dout : OUT STD_LOGIC_VECTOR (60 downto 0) );
    end component;



begin
    grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82 : component MatrixMultiplicationKernel_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start,
        ap_done => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done,
        ap_idle => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_idle,
        ap_ready => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_ready,
        cMemory_dout => cMemory_dout,
        cMemory_num_data_valid => ap_const_lv7_0,
        cMemory_fifo_cap => ap_const_lv7_0,
        cMemory_empty_n => cMemory_empty_n,
        cMemory_read => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_cMemory_read,
        m_axi_gmem2_AWVALID => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWVALID,
        m_axi_gmem2_AWREADY => m_axi_gmem2_AWREADY,
        m_axi_gmem2_AWADDR => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWADDR,
        m_axi_gmem2_AWID => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWID,
        m_axi_gmem2_AWLEN => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWLEN,
        m_axi_gmem2_AWSIZE => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWSIZE,
        m_axi_gmem2_AWBURST => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWBURST,
        m_axi_gmem2_AWLOCK => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWLOCK,
        m_axi_gmem2_AWCACHE => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWCACHE,
        m_axi_gmem2_AWPROT => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWPROT,
        m_axi_gmem2_AWQOS => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWQOS,
        m_axi_gmem2_AWREGION => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWREGION,
        m_axi_gmem2_AWUSER => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWUSER,
        m_axi_gmem2_WVALID => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WVALID,
        m_axi_gmem2_WREADY => m_axi_gmem2_WREADY,
        m_axi_gmem2_WDATA => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WDATA,
        m_axi_gmem2_WSTRB => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WSTRB,
        m_axi_gmem2_WLAST => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WLAST,
        m_axi_gmem2_WID => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WID,
        m_axi_gmem2_WUSER => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WUSER,
        m_axi_gmem2_ARVALID => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARVALID,
        m_axi_gmem2_ARREADY => ap_const_logic_0,
        m_axi_gmem2_ARADDR => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARADDR,
        m_axi_gmem2_ARID => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARID,
        m_axi_gmem2_ARLEN => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARLEN,
        m_axi_gmem2_ARSIZE => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARSIZE,
        m_axi_gmem2_ARBURST => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARBURST,
        m_axi_gmem2_ARLOCK => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARLOCK,
        m_axi_gmem2_ARCACHE => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARCACHE,
        m_axi_gmem2_ARPROT => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARPROT,
        m_axi_gmem2_ARQOS => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARQOS,
        m_axi_gmem2_ARREGION => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARREGION,
        m_axi_gmem2_ARUSER => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_ARUSER,
        m_axi_gmem2_RVALID => ap_const_logic_0,
        m_axi_gmem2_RREADY => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_RREADY,
        m_axi_gmem2_RDATA => ap_const_lv512_lc_1,
        m_axi_gmem2_RLAST => ap_const_logic_0,
        m_axi_gmem2_RID => ap_const_lv1_0,
        m_axi_gmem2_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem2_RUSER => ap_const_lv1_0,
        m_axi_gmem2_RRESP => ap_const_lv2_0,
        m_axi_gmem2_BVALID => m_axi_gmem2_BVALID,
        m_axi_gmem2_BREADY => grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_BREADY,
        m_axi_gmem2_BRESP => m_axi_gmem2_BRESP,
        m_axi_gmem2_BID => m_axi_gmem2_BID,
        m_axi_gmem2_BUSER => m_axi_gmem2_BUSER,
        bound17 => bound17_reg_189,
        bound4 => tmp_1_reg_184,
        size_n_load => size_n_read_reg_168,
        empty => div_i1_reg_178,
        div_i1 => div_i1_reg_178,
        memory_load => memory_read_reg_173);

    mul_24ns_38ns_61_1_1_U1735 : component MatrixMultiplicationKernel_mul_24ns_38ns_61_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 24,
        din1_WIDTH => 38,
        dout_WIDTH => 61)
    port map (
        din0 => bound17_fu_96_p0,
        din1 => bound17_fu_96_p1,
        dout => bound17_fu_96_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state2) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_ready = ap_const_logic_1)) then 
                    grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                bound17_reg_189 <= bound17_fu_96_p2;
                div_i1_reg_178 <= size_m_dout(31 downto 4);
                memory_read_reg_173 <= memory_dout;
                size_n_read_reg_168 <= size_n_dout;
                    tmp_1_reg_184(37 downto 14) <= tmp_1_fu_150_p3(37 downto 14);
            end if;
        end if;
    end process;
    tmp_1_reg_184(13 downto 0) <= "00000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_NS_fsm_state2 <= ap_NS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done)
    begin
        if ((grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, memory_empty_n, size_n_empty_n, size_m_empty_n)
    begin
                ap_block_state1 <= ((size_n_empty_n = ap_const_logic_0) or (memory_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (size_m_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bound17_fu_96_p0 <= bound17_fu_96_p00(24 - 1 downto 0);
    bound17_fu_96_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(div_i_cast_fu_110_p4),61));
    bound17_fu_96_p1 <= bound17_fu_96_p10(38 - 1 downto 0);
    bound17_fu_96_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_150_p3),61));

    cMemory_read_assign_proc : process(grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_cMemory_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            cMemory_read <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_cMemory_read;
        else 
            cMemory_read <= ap_const_logic_0;
        end if; 
    end process;

    div_i_cast_fu_110_p4 <= sub_i_fu_104_p2(32 downto 9);
    grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_ap_start_reg;
    m_axi_gmem2_ARADDR <= ap_const_lv64_0;
    m_axi_gmem2_ARBURST <= ap_const_lv2_0;
    m_axi_gmem2_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem2_ARID <= ap_const_lv1_0;
    m_axi_gmem2_ARLEN <= ap_const_lv32_0;
    m_axi_gmem2_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem2_ARPROT <= ap_const_lv3_0;
    m_axi_gmem2_ARQOS <= ap_const_lv4_0;
    m_axi_gmem2_ARREGION <= ap_const_lv4_0;
    m_axi_gmem2_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem2_ARUSER <= ap_const_lv1_0;
    m_axi_gmem2_ARVALID <= ap_const_logic_0;
    m_axi_gmem2_AWADDR <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWADDR;
    m_axi_gmem2_AWBURST <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWBURST;
    m_axi_gmem2_AWCACHE <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWCACHE;
    m_axi_gmem2_AWID <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWID;
    m_axi_gmem2_AWLEN <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWLEN;
    m_axi_gmem2_AWLOCK <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWLOCK;
    m_axi_gmem2_AWPROT <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWPROT;
    m_axi_gmem2_AWQOS <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWQOS;
    m_axi_gmem2_AWREGION <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWREGION;
    m_axi_gmem2_AWSIZE <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWSIZE;
    m_axi_gmem2_AWUSER <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWUSER;

    m_axi_gmem2_AWVALID_assign_proc : process(grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWVALID, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem2_AWVALID <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_AWVALID;
        else 
            m_axi_gmem2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem2_BREADY_assign_proc : process(grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_BREADY, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem2_BREADY <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_BREADY;
        else 
            m_axi_gmem2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_RREADY <= ap_const_logic_0;
    m_axi_gmem2_WDATA <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WDATA;
    m_axi_gmem2_WID <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WID;
    m_axi_gmem2_WLAST <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WLAST;
    m_axi_gmem2_WSTRB <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WSTRB;
    m_axi_gmem2_WUSER <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WUSER;

    m_axi_gmem2_WVALID_assign_proc : process(grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WVALID, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem2_WVALID <= grp_WriteC_Pipeline_WriteC_OuterTile_N_WriteC_OuterTile_M_WriteC_N1_WriteC_M1_fu_82_m_axi_gmem2_WVALID;
        else 
            m_axi_gmem2_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    memory_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, memory_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            memory_blk_n <= memory_empty_n;
        else 
            memory_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    memory_read <= memory_read_local;

    memory_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            memory_read_local <= ap_const_logic_1;
        else 
            memory_read_local <= ap_const_logic_0;
        end if; 
    end process;


    size_m_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, size_m_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            size_m_blk_n <= size_m_empty_n;
        else 
            size_m_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    size_m_cast_fu_120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(size_m_dout),33));
    size_m_read <= size_m_read_local;

    size_m_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            size_m_read_local <= ap_const_logic_1;
        else 
            size_m_read_local <= ap_const_logic_0;
        end if; 
    end process;


    size_n_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, size_n_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            size_n_blk_n <= size_n_empty_n;
        else 
            size_n_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    size_n_cast_fu_100_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(size_n_dout),33));
    size_n_read <= size_n_read_local;

    size_n_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            size_n_read_local <= ap_const_logic_1;
        else 
            size_n_read_local <= ap_const_logic_0;
        end if; 
    end process;

    sub_i3_fu_124_p2 <= std_logic_vector(unsigned(size_m_cast_fu_120_p1) + unsigned(ap_const_lv33_1FF));
    sub_i_fu_104_p2 <= std_logic_vector(unsigned(size_n_cast_fu_100_p1) + unsigned(ap_const_lv33_1FF));
    tmp_1_fu_150_p3 <= (tmp_fu_140_p4 & ap_const_lv14_0);
    tmp_fu_140_p4 <= sub_i3_fu_124_p2(32 downto 9);
end behav;
