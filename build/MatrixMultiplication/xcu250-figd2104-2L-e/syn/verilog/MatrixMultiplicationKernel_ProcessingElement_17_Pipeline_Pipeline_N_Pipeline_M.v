// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMultiplicationKernel_ProcessingElement_17_Pipeline_Pipeline_N_Pipeline_M (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        aPipes_16_dout,
        aPipes_16_num_data_valid,
        aPipes_16_fifo_cap,
        aPipes_16_empty_n,
        aPipes_16_read,
        aPipes_17_din,
        aPipes_17_num_data_valid,
        aPipes_17_fifo_cap,
        aPipes_17_full_n,
        aPipes_17_write,
        bPipes_16_dout,
        bPipes_16_num_data_valid,
        bPipes_16_fifo_cap,
        bPipes_16_empty_n,
        bPipes_16_read,
        bPipes_17_din,
        bPipes_17_num_data_valid,
        bPipes_17_fifo_cap,
        bPipes_17_full_n,
        bPipes_17_write,
        m0,
        cBuffer_address0,
        cBuffer_ce0,
        cBuffer_we0,
        cBuffer_d0,
        cBuffer_address1,
        cBuffer_ce1,
        cBuffer_q1,
        cmp111,
        size_m,
        cond90,
        aBuffer_address0,
        aBuffer_ce0,
        aBuffer_we0,
        aBuffer_d0,
        aBuffer_address1,
        aBuffer_ce1,
        aBuffer_q1,
        mul,
        cond,
        size_n,
        brmerge282
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] aPipes_16_dout;
input  [2:0] aPipes_16_num_data_valid;
input  [2:0] aPipes_16_fifo_cap;
input   aPipes_16_empty_n;
output   aPipes_16_read;
output  [31:0] aPipes_17_din;
input  [2:0] aPipes_17_num_data_valid;
input  [2:0] aPipes_17_fifo_cap;
input   aPipes_17_full_n;
output   aPipes_17_write;
input  [255:0] bPipes_16_dout;
input  [2:0] bPipes_16_num_data_valid;
input  [2:0] bPipes_16_fifo_cap;
input   bPipes_16_empty_n;
output   bPipes_16_read;
output  [255:0] bPipes_17_din;
input  [2:0] bPipes_17_num_data_valid;
input  [2:0] bPipes_17_fifo_cap;
input   bPipes_17_full_n;
output   bPipes_17_write;
input  [22:0] m0;
output  [9:0] cBuffer_address0;
output   cBuffer_ce0;
output   cBuffer_we0;
output  [255:0] cBuffer_d0;
output  [9:0] cBuffer_address1;
output   cBuffer_ce1;
input  [255:0] cBuffer_q1;
input  [0:0] cmp111;
input  [31:0] size_m;
input  [4:0] cond90;
output  [4:0] aBuffer_address0;
output   aBuffer_ce0;
output   aBuffer_we0;
output  [31:0] aBuffer_d0;
output  [4:0] aBuffer_address1;
output   aBuffer_ce1;
input  [31:0] aBuffer_q1;
input  [26:0] mul;
input  [4:0] cond;
input  [31:0] size_n;
input  [0:0] brmerge282;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg   [0:0] and_ln80_22_reg_1119;
reg   [0:0] icmp_ln85_reg_1123;
reg    ap_predicate_op64_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_369_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bPipes_16_blk_n;
wire    ap_block_pp0_stage0;
reg    bPipes_17_blk_n;
reg    aPipes_16_blk_n;
reg    aPipes_17_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_384_p2;
reg   [0:0] icmp_ln67_reg_1108;
wire   [6:0] select_ln64_fu_390_p3;
reg   [6:0] select_ln64_reg_1113;
reg   [6:0] select_ln64_reg_1113_pp0_iter1_reg;
reg   [6:0] select_ln64_reg_1113_pp0_iter2_reg;
wire   [0:0] and_ln80_22_fu_436_p2;
wire   [0:0] icmp_ln85_fu_442_p2;
wire   [4:0] add91_fu_484_p2;
reg   [4:0] add91_reg_1127;
wire   [3:0] empty_271_fu_498_p1;
reg   [3:0] empty_271_reg_1132;
reg   [3:0] empty_271_reg_1132_pp0_iter2_reg;
wire   [0:0] inBoundsN_fu_512_p2;
reg   [0:0] inBoundsN_reg_1137;
reg   [0:0] inBoundsN_reg_1137_pp0_iter2_reg;
reg   [0:0] inBoundsN_reg_1137_pp0_iter3_reg;
reg   [0:0] inBoundsN_reg_1137_pp0_iter4_reg;
reg   [0:0] inBoundsN_reg_1137_pp0_iter5_reg;
reg   [0:0] inBoundsN_reg_1137_pp0_iter6_reg;
reg   [9:0] cBuffer_addr_reg_1154;
reg   [9:0] cBuffer_addr_reg_1154_pp0_iter4_reg;
reg   [9:0] cBuffer_addr_reg_1154_pp0_iter5_reg;
reg   [9:0] cBuffer_addr_reg_1154_pp0_iter6_reg;
reg   [9:0] cBuffer_addr_reg_1154_pp0_iter7_reg;
wire   [0:0] inBoundsM_fu_559_p2;
reg   [0:0] inBoundsM_reg_1160;
reg   [0:0] inBoundsM_reg_1160_pp0_iter4_reg;
reg   [0:0] inBoundsM_reg_1160_pp0_iter5_reg;
reg   [0:0] inBoundsM_reg_1160_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_fu_564_p1;
wire   [0:0] inBoundsM_169_fu_594_p2;
reg   [0:0] inBoundsM_169_reg_1182;
reg   [0:0] inBoundsM_169_reg_1182_pp0_iter4_reg;
reg   [0:0] inBoundsM_169_reg_1182_pp0_iter5_reg;
reg   [0:0] inBoundsM_169_reg_1182_pp0_iter6_reg;
wire   [0:0] inBoundsM_170_fu_623_p2;
reg   [0:0] inBoundsM_170_reg_1192;
reg   [0:0] inBoundsM_170_reg_1192_pp0_iter4_reg;
reg   [0:0] inBoundsM_170_reg_1192_pp0_iter5_reg;
reg   [0:0] inBoundsM_170_reg_1192_pp0_iter6_reg;
wire   [0:0] inBoundsM_171_fu_652_p2;
reg   [0:0] inBoundsM_171_reg_1202;
reg   [0:0] inBoundsM_171_reg_1202_pp0_iter4_reg;
reg   [0:0] inBoundsM_171_reg_1202_pp0_iter5_reg;
reg   [0:0] inBoundsM_171_reg_1202_pp0_iter6_reg;
wire   [0:0] inBoundsM_172_fu_681_p2;
reg   [0:0] inBoundsM_172_reg_1212;
reg   [0:0] inBoundsM_172_reg_1212_pp0_iter4_reg;
reg   [0:0] inBoundsM_172_reg_1212_pp0_iter5_reg;
reg   [0:0] inBoundsM_172_reg_1212_pp0_iter6_reg;
wire   [0:0] inBoundsM_173_fu_710_p2;
reg   [0:0] inBoundsM_173_reg_1222;
reg   [0:0] inBoundsM_173_reg_1222_pp0_iter4_reg;
reg   [0:0] inBoundsM_173_reg_1222_pp0_iter5_reg;
reg   [0:0] inBoundsM_173_reg_1222_pp0_iter6_reg;
wire   [0:0] inBoundsM_174_fu_739_p2;
reg   [0:0] inBoundsM_174_reg_1232;
reg   [0:0] inBoundsM_174_reg_1232_pp0_iter4_reg;
reg   [0:0] inBoundsM_174_reg_1232_pp0_iter5_reg;
reg   [0:0] inBoundsM_174_reg_1232_pp0_iter6_reg;
wire   [0:0] inBoundsM_175_fu_768_p2;
reg   [0:0] inBoundsM_175_reg_1242;
reg   [0:0] inBoundsM_175_reg_1242_pp0_iter4_reg;
reg   [0:0] inBoundsM_175_reg_1242_pp0_iter5_reg;
reg   [0:0] inBoundsM_175_reg_1242_pp0_iter6_reg;
wire   [31:0] grp_fu_319_p2;
reg   [31:0] res_568_reg_1252;
wire   [31:0] trunc_ln170_25_fu_795_p1;
reg   [31:0] trunc_ln170_25_reg_1257;
wire   [31:0] grp_fu_323_p2;
reg   [31:0] res_569_reg_1262;
reg   [31:0] tmp_337_reg_1267;
wire   [31:0] grp_fu_327_p2;
reg   [31:0] res_570_reg_1272;
reg   [31:0] tmp_339_reg_1277;
wire   [31:0] grp_fu_331_p2;
reg   [31:0] res_571_reg_1282;
reg   [31:0] tmp_341_reg_1287;
wire   [31:0] grp_fu_335_p2;
reg   [31:0] res_572_reg_1292;
reg   [31:0] tmp_343_reg_1297;
wire   [31:0] grp_fu_339_p2;
reg   [31:0] res_573_reg_1302;
reg   [31:0] tmp_345_reg_1307;
wire   [31:0] grp_fu_343_p2;
reg   [31:0] res_574_reg_1312;
reg   [31:0] tmp_347_reg_1317;
wire   [31:0] grp_fu_347_p2;
reg   [31:0] res_575_reg_1322;
reg   [31:0] tmp_349_reg_1327;
wire   [31:0] bitcast_ln32_354_fu_869_p1;
reg   [31:0] bitcast_ln32_354_reg_1332;
reg   [31:0] bitcast_ln32_354_reg_1332_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_356_fu_873_p1;
reg   [31:0] bitcast_ln32_356_reg_1338;
reg   [31:0] bitcast_ln32_356_reg_1338_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_358_fu_877_p1;
reg   [31:0] bitcast_ln32_358_reg_1344;
reg   [31:0] bitcast_ln32_358_reg_1344_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_360_fu_881_p1;
reg   [31:0] bitcast_ln32_360_reg_1350;
reg   [31:0] bitcast_ln32_360_reg_1350_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_362_fu_885_p1;
reg   [31:0] bitcast_ln32_362_reg_1356;
reg   [31:0] bitcast_ln32_362_reg_1356_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_364_fu_889_p1;
reg   [31:0] bitcast_ln32_364_reg_1362;
reg   [31:0] bitcast_ln32_364_reg_1362_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_366_fu_893_p1;
reg   [31:0] bitcast_ln32_366_reg_1368;
reg   [31:0] bitcast_ln32_366_reg_1368_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_368_fu_897_p1;
reg   [31:0] bitcast_ln32_368_reg_1374;
reg   [31:0] bitcast_ln32_368_reg_1374_pp0_iter6_reg;
wire   [31:0] select_ln296_fu_905_p3;
reg   [31:0] select_ln296_reg_1380;
wire   [31:0] select_ln296_155_fu_916_p3;
reg   [31:0] select_ln296_155_reg_1385;
wire   [31:0] select_ln296_156_fu_927_p3;
reg   [31:0] select_ln296_156_reg_1390;
wire   [31:0] select_ln296_157_fu_938_p3;
reg   [31:0] select_ln296_157_reg_1395;
wire   [31:0] select_ln296_158_fu_949_p3;
reg   [31:0] select_ln296_158_reg_1400;
wire   [31:0] select_ln296_159_fu_960_p3;
reg   [31:0] select_ln296_159_reg_1405;
wire   [31:0] select_ln296_160_fu_971_p3;
reg   [31:0] select_ln296_160_reg_1410;
wire   [31:0] select_ln296_161_fu_982_p3;
reg   [31:0] select_ln296_161_reg_1415;
wire   [63:0] add_cast_fu_507_p1;
wire   [63:0] add91_cast_fu_522_p1;
wire   [63:0] add115_cast_fu_542_p1;
reg   [6:0] m1_fu_156;
wire   [6:0] add_ln67_fu_448_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_m1_load;
reg   [4:0] n1_fu_160;
wire   [4:0] select_ln64_23_fu_473_p3;
reg   [10:0] indvar_flatten6_fu_164;
wire   [10:0] add_ln64_fu_375_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten6_load;
reg    aPipes_16_read_local;
reg    ap_block_pp0_stage0_01001;
reg    aPipes_17_write_local;
reg    bPipes_16_read_local;
reg    bPipes_17_write_local;
reg    aBuffer_we0_local;
reg    aBuffer_ce0_local;
reg    aBuffer_ce1_local;
reg    cBuffer_ce1_local;
reg    cBuffer_we0_local;
wire   [255:0] tmp_350_fu_1013_p9;
reg    cBuffer_ce0_local;
wire   [31:0] grp_fu_287_p0;
wire   [31:0] grp_fu_291_p0;
wire   [31:0] grp_fu_295_p0;
wire   [31:0] grp_fu_299_p0;
wire   [31:0] grp_fu_303_p0;
wire   [31:0] grp_fu_307_p0;
wire   [31:0] grp_fu_311_p0;
wire   [31:0] grp_fu_315_p0;
wire   [31:0] grp_fu_319_p1;
wire   [31:0] grp_fu_323_p1;
wire   [31:0] grp_fu_327_p1;
wire   [31:0] grp_fu_331_p1;
wire   [31:0] grp_fu_335_p1;
wire   [31:0] grp_fu_339_p1;
wire   [31:0] grp_fu_343_p1;
wire   [31:0] grp_fu_347_p1;
wire   [2:0] tmp_fu_398_p4;
wire   [1:0] tmp_29_fu_414_p4;
wire   [0:0] icmp_ln82_fu_408_p2;
wire   [0:0] and_ln80_fu_430_p2;
wire   [0:0] icmp_ln83_fu_424_p2;
wire   [4:0] add_ln64_23_fu_467_p2;
wire   [26:0] zext_ln64_fu_480_p1;
wire   [26:0] add106_fu_489_p2;
wire   [4:0] add_fu_502_p2;
wire   [31:0] add106_cast_fu_494_p1;
wire   [9:0] mul17_fu_526_p3;
wire   [9:0] zext_ln67_fu_533_p1;
wire   [9:0] add115_fu_536_p2;
wire   [5:0] empty_fu_547_p1;
wire   [31:0] add7_fu_550_p4;
wire   [31:0] trunc_ln170_fu_576_p1;
wire   [31:0] or_ln_fu_585_p4;
wire   [31:0] tmp_s_fu_599_p4;
wire   [31:0] or_ln125_s_fu_614_p4;
wire   [31:0] tmp_338_fu_628_p4;
wire   [31:0] or_ln125_103_fu_643_p4;
wire   [31:0] tmp_340_fu_657_p4;
wire   [31:0] or_ln125_104_fu_672_p4;
wire   [31:0] tmp_342_fu_686_p4;
wire   [31:0] or_ln125_105_fu_701_p4;
wire   [31:0] tmp_344_fu_715_p4;
wire   [31:0] or_ln125_106_fu_730_p4;
wire   [31:0] tmp_346_fu_744_p4;
wire   [31:0] or_ln125_107_fu_759_p4;
wire   [31:0] tmp_348_fu_773_p4;
wire   [255:0] cPrev_2_fu_788_p3;
wire   [0:0] inBounds_fu_901_p2;
wire   [31:0] grp_fu_287_p2;
wire   [0:0] inBounds_169_fu_912_p2;
wire   [31:0] grp_fu_291_p2;
wire   [0:0] inBounds_170_fu_923_p2;
wire   [31:0] grp_fu_295_p2;
wire   [0:0] inBounds_171_fu_934_p2;
wire   [31:0] grp_fu_299_p2;
wire   [0:0] inBounds_172_fu_945_p2;
wire   [31:0] grp_fu_303_p2;
wire   [0:0] inBounds_173_fu_956_p2;
wire   [31:0] grp_fu_307_p2;
wire   [0:0] inBounds_174_fu_967_p2;
wire   [31:0] grp_fu_311_p2;
wire   [0:0] inBounds_175_fu_978_p2;
wire   [31:0] grp_fu_315_p2;
wire   [31:0] bitcast_ln36_161_fu_1010_p1;
wire   [31:0] bitcast_ln36_160_fu_1007_p1;
wire   [31:0] bitcast_ln36_159_fu_1004_p1;
wire   [31:0] bitcast_ln36_158_fu_1001_p1;
wire   [31:0] bitcast_ln36_157_fu_998_p1;
wire   [31:0] bitcast_ln36_156_fu_995_p1;
wire   [31:0] bitcast_ln36_155_fu_992_p1;
wire   [31:0] bitcast_ln36_fu_989_p1;
reg    grp_fu_287_ce;
reg    grp_fu_291_ce;
reg    grp_fu_295_ce;
reg    grp_fu_299_ce;
reg    grp_fu_303_ce;
reg    grp_fu_307_ce;
reg    grp_fu_311_ce;
reg    grp_fu_315_ce;
reg    grp_fu_319_ce;
reg    grp_fu_323_ce;
reg    grp_fu_327_ce;
reg    grp_fu_331_ce;
reg    grp_fu_335_ce;
reg    grp_fu_339_ce;
reg    grp_fu_343_ce;
reg    grp_fu_347_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op66_store_state2;
reg    ap_enable_operation_66;
reg    ap_enable_state2_pp0_iter1_stage0;
wire    ap_enable_operation_71;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_operation_77;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 m1_fu_156 = 7'd0;
#0 n1_fu_160 = 5'd0;
#0 indvar_flatten6_fu_164 = 11'd0;
#0 ap_done_reg = 1'b0;
end

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U939(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_287_p0),
    .din1(res_568_reg_1252),
    .ce(grp_fu_287_ce),
    .dout(grp_fu_287_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U940(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_291_p0),
    .din1(res_569_reg_1262),
    .ce(grp_fu_291_ce),
    .dout(grp_fu_291_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U941(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_295_p0),
    .din1(res_570_reg_1272),
    .ce(grp_fu_295_ce),
    .dout(grp_fu_295_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U942(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_299_p0),
    .din1(res_571_reg_1282),
    .ce(grp_fu_299_ce),
    .dout(grp_fu_299_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U943(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_303_p0),
    .din1(res_572_reg_1292),
    .ce(grp_fu_303_ce),
    .dout(grp_fu_303_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U944(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_307_p0),
    .din1(res_573_reg_1302),
    .ce(grp_fu_307_ce),
    .dout(grp_fu_307_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U945(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_311_p0),
    .din1(res_574_reg_1312),
    .ce(grp_fu_311_ce),
    .dout(grp_fu_311_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U946(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_315_p0),
    .din1(res_575_reg_1322),
    .ce(grp_fu_315_ce),
    .dout(grp_fu_315_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U947(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_564_p1),
    .din1(grp_fu_319_p1),
    .ce(grp_fu_319_ce),
    .dout(grp_fu_319_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U948(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_564_p1),
    .din1(grp_fu_323_p1),
    .ce(grp_fu_323_ce),
    .dout(grp_fu_323_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U949(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_564_p1),
    .din1(grp_fu_327_p1),
    .ce(grp_fu_327_ce),
    .dout(grp_fu_327_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U950(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_564_p1),
    .din1(grp_fu_331_p1),
    .ce(grp_fu_331_ce),
    .dout(grp_fu_331_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U951(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_564_p1),
    .din1(grp_fu_335_p1),
    .ce(grp_fu_335_ce),
    .dout(grp_fu_335_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U952(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_564_p1),
    .din1(grp_fu_339_p1),
    .ce(grp_fu_339_ce),
    .dout(grp_fu_339_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U953(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_564_p1),
    .din1(grp_fu_343_p1),
    .ce(grp_fu_343_ce),
    .dout(grp_fu_343_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U954(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_564_p1),
    .din1(grp_fu_347_p1),
    .ce(grp_fu_347_ce),
    .dout(grp_fu_347_p2)
);

MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_369_p2 == 1'd0))) begin
            indvar_flatten6_fu_164 <= add_ln64_fu_375_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_164 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_369_p2 == 1'd0))) begin
            m1_fu_156 <= add_ln67_fu_448_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m1_fu_156 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            n1_fu_160 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            n1_fu_160 <= select_ln64_23_fu_473_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add91_reg_1127 <= add91_fu_484_p2;
        and_ln80_22_reg_1119 <= and_ln80_22_fu_436_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_271_reg_1132 <= empty_271_fu_498_p1;
        icmp_ln67_reg_1108 <= icmp_ln67_fu_384_p2;
        icmp_ln85_reg_1123 <= icmp_ln85_fu_442_p2;
        inBoundsN_reg_1137 <= inBoundsN_fu_512_p2;
        select_ln64_reg_1113 <= select_ln64_fu_390_p3;
        select_ln64_reg_1113_pp0_iter1_reg <= select_ln64_reg_1113;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        bitcast_ln32_354_reg_1332 <= bitcast_ln32_354_fu_869_p1;
        bitcast_ln32_354_reg_1332_pp0_iter6_reg <= bitcast_ln32_354_reg_1332;
        bitcast_ln32_356_reg_1338 <= bitcast_ln32_356_fu_873_p1;
        bitcast_ln32_356_reg_1338_pp0_iter6_reg <= bitcast_ln32_356_reg_1338;
        bitcast_ln32_358_reg_1344 <= bitcast_ln32_358_fu_877_p1;
        bitcast_ln32_358_reg_1344_pp0_iter6_reg <= bitcast_ln32_358_reg_1344;
        bitcast_ln32_360_reg_1350 <= bitcast_ln32_360_fu_881_p1;
        bitcast_ln32_360_reg_1350_pp0_iter6_reg <= bitcast_ln32_360_reg_1350;
        bitcast_ln32_362_reg_1356 <= bitcast_ln32_362_fu_885_p1;
        bitcast_ln32_362_reg_1356_pp0_iter6_reg <= bitcast_ln32_362_reg_1356;
        bitcast_ln32_364_reg_1362 <= bitcast_ln32_364_fu_889_p1;
        bitcast_ln32_364_reg_1362_pp0_iter6_reg <= bitcast_ln32_364_reg_1362;
        bitcast_ln32_366_reg_1368 <= bitcast_ln32_366_fu_893_p1;
        bitcast_ln32_366_reg_1368_pp0_iter6_reg <= bitcast_ln32_366_reg_1368;
        bitcast_ln32_368_reg_1374 <= bitcast_ln32_368_fu_897_p1;
        bitcast_ln32_368_reg_1374_pp0_iter6_reg <= bitcast_ln32_368_reg_1374;
        cBuffer_addr_reg_1154 <= add115_cast_fu_542_p1;
        cBuffer_addr_reg_1154_pp0_iter4_reg <= cBuffer_addr_reg_1154;
        cBuffer_addr_reg_1154_pp0_iter5_reg <= cBuffer_addr_reg_1154_pp0_iter4_reg;
        cBuffer_addr_reg_1154_pp0_iter6_reg <= cBuffer_addr_reg_1154_pp0_iter5_reg;
        cBuffer_addr_reg_1154_pp0_iter7_reg <= cBuffer_addr_reg_1154_pp0_iter6_reg;
        empty_271_reg_1132_pp0_iter2_reg <= empty_271_reg_1132;
        inBoundsM_169_reg_1182 <= inBoundsM_169_fu_594_p2;
        inBoundsM_169_reg_1182_pp0_iter4_reg <= inBoundsM_169_reg_1182;
        inBoundsM_169_reg_1182_pp0_iter5_reg <= inBoundsM_169_reg_1182_pp0_iter4_reg;
        inBoundsM_169_reg_1182_pp0_iter6_reg <= inBoundsM_169_reg_1182_pp0_iter5_reg;
        inBoundsM_170_reg_1192 <= inBoundsM_170_fu_623_p2;
        inBoundsM_170_reg_1192_pp0_iter4_reg <= inBoundsM_170_reg_1192;
        inBoundsM_170_reg_1192_pp0_iter5_reg <= inBoundsM_170_reg_1192_pp0_iter4_reg;
        inBoundsM_170_reg_1192_pp0_iter6_reg <= inBoundsM_170_reg_1192_pp0_iter5_reg;
        inBoundsM_171_reg_1202 <= inBoundsM_171_fu_652_p2;
        inBoundsM_171_reg_1202_pp0_iter4_reg <= inBoundsM_171_reg_1202;
        inBoundsM_171_reg_1202_pp0_iter5_reg <= inBoundsM_171_reg_1202_pp0_iter4_reg;
        inBoundsM_171_reg_1202_pp0_iter6_reg <= inBoundsM_171_reg_1202_pp0_iter5_reg;
        inBoundsM_172_reg_1212 <= inBoundsM_172_fu_681_p2;
        inBoundsM_172_reg_1212_pp0_iter4_reg <= inBoundsM_172_reg_1212;
        inBoundsM_172_reg_1212_pp0_iter5_reg <= inBoundsM_172_reg_1212_pp0_iter4_reg;
        inBoundsM_172_reg_1212_pp0_iter6_reg <= inBoundsM_172_reg_1212_pp0_iter5_reg;
        inBoundsM_173_reg_1222 <= inBoundsM_173_fu_710_p2;
        inBoundsM_173_reg_1222_pp0_iter4_reg <= inBoundsM_173_reg_1222;
        inBoundsM_173_reg_1222_pp0_iter5_reg <= inBoundsM_173_reg_1222_pp0_iter4_reg;
        inBoundsM_173_reg_1222_pp0_iter6_reg <= inBoundsM_173_reg_1222_pp0_iter5_reg;
        inBoundsM_174_reg_1232 <= inBoundsM_174_fu_739_p2;
        inBoundsM_174_reg_1232_pp0_iter4_reg <= inBoundsM_174_reg_1232;
        inBoundsM_174_reg_1232_pp0_iter5_reg <= inBoundsM_174_reg_1232_pp0_iter4_reg;
        inBoundsM_174_reg_1232_pp0_iter6_reg <= inBoundsM_174_reg_1232_pp0_iter5_reg;
        inBoundsM_175_reg_1242 <= inBoundsM_175_fu_768_p2;
        inBoundsM_175_reg_1242_pp0_iter4_reg <= inBoundsM_175_reg_1242;
        inBoundsM_175_reg_1242_pp0_iter5_reg <= inBoundsM_175_reg_1242_pp0_iter4_reg;
        inBoundsM_175_reg_1242_pp0_iter6_reg <= inBoundsM_175_reg_1242_pp0_iter5_reg;
        inBoundsM_reg_1160 <= inBoundsM_fu_559_p2;
        inBoundsM_reg_1160_pp0_iter4_reg <= inBoundsM_reg_1160;
        inBoundsM_reg_1160_pp0_iter5_reg <= inBoundsM_reg_1160_pp0_iter4_reg;
        inBoundsM_reg_1160_pp0_iter6_reg <= inBoundsM_reg_1160_pp0_iter5_reg;
        inBoundsN_reg_1137_pp0_iter2_reg <= inBoundsN_reg_1137;
        inBoundsN_reg_1137_pp0_iter3_reg <= inBoundsN_reg_1137_pp0_iter2_reg;
        inBoundsN_reg_1137_pp0_iter4_reg <= inBoundsN_reg_1137_pp0_iter3_reg;
        inBoundsN_reg_1137_pp0_iter5_reg <= inBoundsN_reg_1137_pp0_iter4_reg;
        inBoundsN_reg_1137_pp0_iter6_reg <= inBoundsN_reg_1137_pp0_iter5_reg;
        res_568_reg_1252 <= grp_fu_319_p2;
        res_569_reg_1262 <= grp_fu_323_p2;
        res_570_reg_1272 <= grp_fu_327_p2;
        res_571_reg_1282 <= grp_fu_331_p2;
        res_572_reg_1292 <= grp_fu_335_p2;
        res_573_reg_1302 <= grp_fu_339_p2;
        res_574_reg_1312 <= grp_fu_343_p2;
        res_575_reg_1322 <= grp_fu_347_p2;
        select_ln296_155_reg_1385 <= select_ln296_155_fu_916_p3;
        select_ln296_156_reg_1390 <= select_ln296_156_fu_927_p3;
        select_ln296_157_reg_1395 <= select_ln296_157_fu_938_p3;
        select_ln296_158_reg_1400 <= select_ln296_158_fu_949_p3;
        select_ln296_159_reg_1405 <= select_ln296_159_fu_960_p3;
        select_ln296_160_reg_1410 <= select_ln296_160_fu_971_p3;
        select_ln296_161_reg_1415 <= select_ln296_161_fu_982_p3;
        select_ln296_reg_1380 <= select_ln296_fu_905_p3;
        select_ln64_reg_1113_pp0_iter2_reg <= select_ln64_reg_1113_pp0_iter1_reg;
        tmp_337_reg_1267 <= {{cPrev_2_fu_788_p3[63:32]}};
        tmp_339_reg_1277 <= {{cPrev_2_fu_788_p3[95:64]}};
        tmp_341_reg_1287 <= {{cPrev_2_fu_788_p3[127:96]}};
        tmp_343_reg_1297 <= {{cPrev_2_fu_788_p3[159:128]}};
        tmp_345_reg_1307 <= {{cPrev_2_fu_788_p3[191:160]}};
        tmp_347_reg_1317 <= {{cPrev_2_fu_788_p3[223:192]}};
        tmp_349_reg_1327 <= {{cPrev_2_fu_788_p3[255:224]}};
        trunc_ln170_25_reg_1257 <= trunc_ln170_25_fu_795_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce0_local = 1'b1;
    end else begin
        aBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce1_local = 1'b1;
    end else begin
        aBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_reg_1123 == 1'd1) & (1'd1 == and_ln80_22_reg_1119) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_we0_local = 1'b1;
    end else begin
        aBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_22_reg_1119) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_16_blk_n = aPipes_16_empty_n;
    end else begin
        aPipes_16_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_22_reg_1119) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_16_read_local = 1'b1;
    end else begin
        aPipes_16_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op64_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_17_blk_n = aPipes_17_full_n;
    end else begin
        aPipes_17_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op64_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_17_write_local = 1'b1;
    end else begin
        aPipes_17_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_369_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_164;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_m1_load = 7'd0;
    end else begin
        ap_sig_allocacmp_m1_load = m1_fu_156;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_16_blk_n = bPipes_16_empty_n;
    end else begin
        bPipes_16_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_16_read_local = 1'b1;
    end else begin
        bPipes_16_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_17_blk_n = bPipes_17_full_n;
    end else begin
        bPipes_17_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_17_write_local = 1'b1;
    end else begin
        bPipes_17_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce0_local = 1'b1;
    end else begin
        cBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce1_local = 1'b1;
    end else begin
        cBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_we0_local = 1'b1;
    end else begin
        cBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_287_ce = 1'b1;
    end else begin
        grp_fu_287_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_291_ce = 1'b1;
    end else begin
        grp_fu_291_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_295_ce = 1'b1;
    end else begin
        grp_fu_295_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_299_ce = 1'b1;
    end else begin
        grp_fu_299_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_303_ce = 1'b1;
    end else begin
        grp_fu_303_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_307_ce = 1'b1;
    end else begin
        grp_fu_307_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_311_ce = 1'b1;
    end else begin
        grp_fu_311_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_315_ce = 1'b1;
    end else begin
        grp_fu_315_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_319_ce = 1'b1;
    end else begin
        grp_fu_319_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_323_ce = 1'b1;
    end else begin
        grp_fu_323_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_327_ce = 1'b1;
    end else begin
        grp_fu_327_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_331_ce = 1'b1;
    end else begin
        grp_fu_331_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_335_ce = 1'b1;
    end else begin
        grp_fu_335_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_339_ce = 1'b1;
    end else begin
        grp_fu_339_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_343_ce = 1'b1;
    end else begin
        grp_fu_343_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_347_ce = 1'b1;
    end else begin
        grp_fu_347_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aBuffer_address0 = add_cast_fu_507_p1;

assign aBuffer_address1 = add91_cast_fu_522_p1;

assign aBuffer_ce0 = aBuffer_ce0_local;

assign aBuffer_ce1 = aBuffer_ce1_local;

assign aBuffer_d0 = aPipes_16_dout;

assign aBuffer_we0 = aBuffer_we0_local;

assign aPipes_16_read = aPipes_16_read_local;

assign aPipes_17_din = aPipes_16_dout;

assign aPipes_17_write = aPipes_17_write_local;

assign add106_cast_fu_494_p1 = add106_fu_489_p2;

assign add106_fu_489_p2 = (mul + zext_ln64_fu_480_p1);

assign add115_cast_fu_542_p1 = add115_fu_536_p2;

assign add115_fu_536_p2 = (mul17_fu_526_p3 + zext_ln67_fu_533_p1);

assign add7_fu_550_p4 = {{{m0}, {empty_fu_547_p1}}, {3'd0}};

assign add91_cast_fu_522_p1 = add91_reg_1127;

assign add91_fu_484_p2 = (select_ln64_23_fu_473_p3 + cond90);

assign add_cast_fu_507_p1 = add_fu_502_p2;

assign add_fu_502_p2 = (select_ln64_23_fu_473_p3 + cond);

assign add_ln64_23_fu_467_p2 = (n1_fu_160 + 5'd1);

assign add_ln64_fu_375_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 11'd1);

assign add_ln67_fu_448_p2 = (select_ln64_fu_390_p3 + 7'd1);

assign and_ln80_22_fu_436_p2 = (icmp_ln83_fu_424_p2 & and_ln80_fu_430_p2);

assign and_ln80_fu_430_p2 = (icmp_ln82_fu_408_p2 & brmerge282);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op64_write_state2 == 1'b1) & (1'b0 == aPipes_17_full_n)) | ((1'd1 == and_ln80_22_reg_1119) & (1'b0 == aPipes_16_empty_n)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((bPipes_17_full_n == 1'b0) | (bPipes_16_empty_n == 1'b0));
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_66 = (ap_predicate_op66_store_state2 == 1'b1);
end

assign ap_enable_operation_71 = (1'b1 == 1'b1);

assign ap_enable_operation_77 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op64_write_state2 = ((icmp_ln85_reg_1123 == 1'd0) & (1'd1 == and_ln80_22_reg_1119));
end

always @ (*) begin
    ap_predicate_op66_store_state2 = ((icmp_ln85_reg_1123 == 1'd1) & (1'd1 == and_ln80_22_reg_1119));
end

assign ap_ready = ap_ready_sig;

assign bPipes_16_read = bPipes_16_read_local;

assign bPipes_17_din = bPipes_16_dout;

assign bPipes_17_write = bPipes_17_write_local;

assign bitcast_ln32_354_fu_869_p1 = trunc_ln170_25_reg_1257;

assign bitcast_ln32_356_fu_873_p1 = tmp_337_reg_1267;

assign bitcast_ln32_358_fu_877_p1 = tmp_339_reg_1277;

assign bitcast_ln32_360_fu_881_p1 = tmp_341_reg_1287;

assign bitcast_ln32_362_fu_885_p1 = tmp_343_reg_1297;

assign bitcast_ln32_364_fu_889_p1 = tmp_345_reg_1307;

assign bitcast_ln32_366_fu_893_p1 = tmp_347_reg_1317;

assign bitcast_ln32_368_fu_897_p1 = tmp_349_reg_1327;

assign bitcast_ln32_fu_564_p1 = aBuffer_q1;

assign bitcast_ln36_155_fu_992_p1 = select_ln296_155_reg_1385;

assign bitcast_ln36_156_fu_995_p1 = select_ln296_156_reg_1390;

assign bitcast_ln36_157_fu_998_p1 = select_ln296_157_reg_1395;

assign bitcast_ln36_158_fu_1001_p1 = select_ln296_158_reg_1400;

assign bitcast_ln36_159_fu_1004_p1 = select_ln296_159_reg_1405;

assign bitcast_ln36_160_fu_1007_p1 = select_ln296_160_reg_1410;

assign bitcast_ln36_161_fu_1010_p1 = select_ln296_161_reg_1415;

assign bitcast_ln36_fu_989_p1 = select_ln296_reg_1380;

assign cBuffer_address0 = cBuffer_addr_reg_1154_pp0_iter7_reg;

assign cBuffer_address1 = add115_cast_fu_542_p1;

assign cBuffer_ce0 = cBuffer_ce0_local;

assign cBuffer_ce1 = cBuffer_ce1_local;

assign cBuffer_d0 = tmp_350_fu_1013_p9;

assign cBuffer_we0 = cBuffer_we0_local;

assign cPrev_2_fu_788_p3 = ((cmp111[0:0] == 1'b1) ? 256'd0 : cBuffer_q1);

assign empty_271_fu_498_p1 = select_ln64_23_fu_473_p3[3:0];

assign empty_fu_547_p1 = select_ln64_reg_1113_pp0_iter2_reg[5:0];

assign grp_fu_287_p0 = trunc_ln170_25_reg_1257;

assign grp_fu_291_p0 = tmp_337_reg_1267;

assign grp_fu_295_p0 = tmp_339_reg_1277;

assign grp_fu_299_p0 = tmp_341_reg_1287;

assign grp_fu_303_p0 = tmp_343_reg_1297;

assign grp_fu_307_p0 = tmp_345_reg_1307;

assign grp_fu_311_p0 = tmp_347_reg_1317;

assign grp_fu_315_p0 = tmp_349_reg_1327;

assign grp_fu_319_p1 = trunc_ln170_fu_576_p1;

assign grp_fu_323_p1 = tmp_s_fu_599_p4;

assign grp_fu_327_p1 = tmp_338_fu_628_p4;

assign grp_fu_331_p1 = tmp_340_fu_657_p4;

assign grp_fu_335_p1 = tmp_342_fu_686_p4;

assign grp_fu_339_p1 = tmp_344_fu_715_p4;

assign grp_fu_343_p1 = tmp_346_fu_744_p4;

assign grp_fu_347_p1 = tmp_348_fu_773_p4;

assign icmp_ln64_fu_369_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_384_p2 = ((ap_sig_allocacmp_m1_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_408_p2 = ((tmp_fu_398_p4 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_424_p2 = ((tmp_29_fu_414_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_442_p2 = ((select_ln64_fu_390_p3 == 7'd16) ? 1'b1 : 1'b0);

assign inBoundsM_169_fu_594_p2 = ((or_ln_fu_585_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_170_fu_623_p2 = ((or_ln125_s_fu_614_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_171_fu_652_p2 = ((or_ln125_103_fu_643_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_172_fu_681_p2 = ((or_ln125_104_fu_672_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_173_fu_710_p2 = ((or_ln125_105_fu_701_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_174_fu_739_p2 = ((or_ln125_106_fu_730_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_175_fu_768_p2 = ((or_ln125_107_fu_759_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_fu_559_p2 = ((add7_fu_550_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsN_fu_512_p2 = ((add106_cast_fu_494_p1 < size_n) ? 1'b1 : 1'b0);

assign inBounds_169_fu_912_p2 = (inBoundsN_reg_1137_pp0_iter6_reg & inBoundsM_169_reg_1182_pp0_iter6_reg);

assign inBounds_170_fu_923_p2 = (inBoundsN_reg_1137_pp0_iter6_reg & inBoundsM_170_reg_1192_pp0_iter6_reg);

assign inBounds_171_fu_934_p2 = (inBoundsN_reg_1137_pp0_iter6_reg & inBoundsM_171_reg_1202_pp0_iter6_reg);

assign inBounds_172_fu_945_p2 = (inBoundsN_reg_1137_pp0_iter6_reg & inBoundsM_172_reg_1212_pp0_iter6_reg);

assign inBounds_173_fu_956_p2 = (inBoundsN_reg_1137_pp0_iter6_reg & inBoundsM_173_reg_1222_pp0_iter6_reg);

assign inBounds_174_fu_967_p2 = (inBoundsN_reg_1137_pp0_iter6_reg & inBoundsM_174_reg_1232_pp0_iter6_reg);

assign inBounds_175_fu_978_p2 = (inBoundsN_reg_1137_pp0_iter6_reg & inBoundsM_175_reg_1242_pp0_iter6_reg);

assign inBounds_fu_901_p2 = (inBoundsN_reg_1137_pp0_iter6_reg & inBoundsM_reg_1160_pp0_iter6_reg);

assign mul17_fu_526_p3 = {{empty_271_reg_1132_pp0_iter2_reg}, {6'd0}};

assign or_ln125_103_fu_643_p4 = {{{m0}, {empty_fu_547_p1}}, {3'd3}};

assign or_ln125_104_fu_672_p4 = {{{m0}, {empty_fu_547_p1}}, {3'd4}};

assign or_ln125_105_fu_701_p4 = {{{m0}, {empty_fu_547_p1}}, {3'd5}};

assign or_ln125_106_fu_730_p4 = {{{m0}, {empty_fu_547_p1}}, {3'd6}};

assign or_ln125_107_fu_759_p4 = {{{m0}, {empty_fu_547_p1}}, {3'd7}};

assign or_ln125_s_fu_614_p4 = {{{m0}, {empty_fu_547_p1}}, {3'd2}};

assign or_ln_fu_585_p4 = {{{m0}, {empty_fu_547_p1}}, {3'd1}};

assign select_ln296_155_fu_916_p3 = ((inBounds_169_fu_912_p2[0:0] == 1'b1) ? grp_fu_291_p2 : bitcast_ln32_356_reg_1338_pp0_iter6_reg);

assign select_ln296_156_fu_927_p3 = ((inBounds_170_fu_923_p2[0:0] == 1'b1) ? grp_fu_295_p2 : bitcast_ln32_358_reg_1344_pp0_iter6_reg);

assign select_ln296_157_fu_938_p3 = ((inBounds_171_fu_934_p2[0:0] == 1'b1) ? grp_fu_299_p2 : bitcast_ln32_360_reg_1350_pp0_iter6_reg);

assign select_ln296_158_fu_949_p3 = ((inBounds_172_fu_945_p2[0:0] == 1'b1) ? grp_fu_303_p2 : bitcast_ln32_362_reg_1356_pp0_iter6_reg);

assign select_ln296_159_fu_960_p3 = ((inBounds_173_fu_956_p2[0:0] == 1'b1) ? grp_fu_307_p2 : bitcast_ln32_364_reg_1362_pp0_iter6_reg);

assign select_ln296_160_fu_971_p3 = ((inBounds_174_fu_967_p2[0:0] == 1'b1) ? grp_fu_311_p2 : bitcast_ln32_366_reg_1368_pp0_iter6_reg);

assign select_ln296_161_fu_982_p3 = ((inBounds_175_fu_978_p2[0:0] == 1'b1) ? grp_fu_315_p2 : bitcast_ln32_368_reg_1374_pp0_iter6_reg);

assign select_ln296_fu_905_p3 = ((inBounds_fu_901_p2[0:0] == 1'b1) ? grp_fu_287_p2 : bitcast_ln32_354_reg_1332_pp0_iter6_reg);

assign select_ln64_23_fu_473_p3 = ((icmp_ln67_reg_1108[0:0] == 1'b1) ? add_ln64_23_fu_467_p2 : n1_fu_160);

assign select_ln64_fu_390_p3 = ((icmp_ln67_fu_384_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_m1_load);

assign tmp_29_fu_414_p4 = {{select_ln64_fu_390_p3[6:5]}};

assign tmp_338_fu_628_p4 = {{bPipes_16_dout[95:64]}};

assign tmp_340_fu_657_p4 = {{bPipes_16_dout[127:96]}};

assign tmp_342_fu_686_p4 = {{bPipes_16_dout[159:128]}};

assign tmp_344_fu_715_p4 = {{bPipes_16_dout[191:160]}};

assign tmp_346_fu_744_p4 = {{bPipes_16_dout[223:192]}};

assign tmp_348_fu_773_p4 = {{bPipes_16_dout[255:224]}};

assign tmp_350_fu_1013_p9 = {{{{{{{{bitcast_ln36_161_fu_1010_p1}, {bitcast_ln36_160_fu_1007_p1}}, {bitcast_ln36_159_fu_1004_p1}}, {bitcast_ln36_158_fu_1001_p1}}, {bitcast_ln36_157_fu_998_p1}}, {bitcast_ln36_156_fu_995_p1}}, {bitcast_ln36_155_fu_992_p1}}, {bitcast_ln36_fu_989_p1}};

assign tmp_fu_398_p4 = {{select_ln64_fu_390_p3[6:4]}};

assign tmp_s_fu_599_p4 = {{bPipes_16_dout[63:32]}};

assign trunc_ln170_25_fu_795_p1 = cPrev_2_fu_788_p3[31:0];

assign trunc_ln170_fu_576_p1 = bPipes_16_dout[31:0];

assign zext_ln64_fu_480_p1 = select_ln64_23_fu_473_p3;

assign zext_ln67_fu_533_p1 = select_ln64_reg_1113_pp0_iter2_reg;

endmodule //MatrixMultiplicationKernel_ProcessingElement_17_Pipeline_Pipeline_N_Pipeline_M
