// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMultiplicationKernel_ProcessingElement_Pipeline_Pipeline_N_Pipeline_M (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        aPipes_31_dout,
        aPipes_31_num_data_valid,
        aPipes_31_fifo_cap,
        aPipes_31_empty_n,
        aPipes_31_read,
        bPipes_31_dout,
        bPipes_31_num_data_valid,
        bPipes_31_fifo_cap,
        bPipes_31_empty_n,
        bPipes_31_read,
        m0,
        cBuffer_address0,
        cBuffer_ce0,
        cBuffer_we0,
        cBuffer_d0,
        cBuffer_address1,
        cBuffer_ce1,
        cBuffer_q1,
        cmp111,
        size_m_load,
        cond90,
        aBuffer_address0,
        aBuffer_ce0,
        aBuffer_we0,
        aBuffer_d0,
        aBuffer_address1,
        aBuffer_ce1,
        aBuffer_q1,
        mul,
        cond,
        size_n_load,
        brmerge282
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] aPipes_31_dout;
input  [2:0] aPipes_31_num_data_valid;
input  [2:0] aPipes_31_fifo_cap;
input   aPipes_31_empty_n;
output   aPipes_31_read;
input  [255:0] bPipes_31_dout;
input  [2:0] bPipes_31_num_data_valid;
input  [2:0] bPipes_31_fifo_cap;
input   bPipes_31_empty_n;
output   bPipes_31_read;
input  [22:0] m0;
output  [9:0] cBuffer_address0;
output   cBuffer_ce0;
output   cBuffer_we0;
output  [255:0] cBuffer_d0;
output  [9:0] cBuffer_address1;
output   cBuffer_ce1;
input  [255:0] cBuffer_q1;
input  [0:0] cmp111;
input  [31:0] size_m_load;
input  [4:0] cond90;
output  [4:0] aBuffer_address0;
output   aBuffer_ce0;
output   aBuffer_we0;
output  [31:0] aBuffer_d0;
output  [4:0] aBuffer_address1;
output   aBuffer_ce1;
input  [31:0] aBuffer_q1;
input  [26:0] mul;
input  [4:0] cond;
input  [31:0] size_n_load;
input  [0:0] brmerge282;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg   [0:0] and_ln80_1_reg_1075;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_341_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bPipes_31_blk_n;
wire    ap_block_pp0_stage0;
reg    aPipes_31_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_356_p2;
reg   [0:0] icmp_ln67_reg_1064;
wire   [6:0] select_ln64_fu_362_p3;
reg   [6:0] select_ln64_reg_1069;
reg   [6:0] select_ln64_reg_1069_pp0_iter1_reg;
reg   [6:0] select_ln64_reg_1069_pp0_iter2_reg;
wire   [0:0] and_ln80_1_fu_398_p2;
wire   [4:0] add91_fu_440_p2;
reg   [4:0] add91_reg_1079;
wire   [3:0] empty_159_fu_454_p1;
reg   [3:0] empty_159_reg_1084;
reg   [3:0] empty_159_reg_1084_pp0_iter2_reg;
wire   [0:0] inBoundsN_fu_468_p2;
reg   [0:0] inBoundsN_reg_1089;
reg   [0:0] inBoundsN_reg_1089_pp0_iter2_reg;
reg   [0:0] inBoundsN_reg_1089_pp0_iter3_reg;
reg   [0:0] inBoundsN_reg_1089_pp0_iter4_reg;
reg   [0:0] inBoundsN_reg_1089_pp0_iter5_reg;
reg   [0:0] inBoundsN_reg_1089_pp0_iter6_reg;
reg   [9:0] cBuffer_addr_reg_1106;
reg   [9:0] cBuffer_addr_reg_1106_pp0_iter4_reg;
reg   [9:0] cBuffer_addr_reg_1106_pp0_iter5_reg;
reg   [9:0] cBuffer_addr_reg_1106_pp0_iter6_reg;
reg   [9:0] cBuffer_addr_reg_1106_pp0_iter7_reg;
wire   [0:0] inBoundsM_fu_515_p2;
reg   [0:0] inBoundsM_reg_1112;
reg   [0:0] inBoundsM_reg_1112_pp0_iter4_reg;
reg   [0:0] inBoundsM_reg_1112_pp0_iter5_reg;
reg   [0:0] inBoundsM_reg_1112_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_fu_520_p1;
wire   [0:0] inBoundsM_1_fu_550_p2;
reg   [0:0] inBoundsM_1_reg_1134;
reg   [0:0] inBoundsM_1_reg_1134_pp0_iter4_reg;
reg   [0:0] inBoundsM_1_reg_1134_pp0_iter5_reg;
reg   [0:0] inBoundsM_1_reg_1134_pp0_iter6_reg;
wire   [0:0] inBoundsM_2_fu_579_p2;
reg   [0:0] inBoundsM_2_reg_1144;
reg   [0:0] inBoundsM_2_reg_1144_pp0_iter4_reg;
reg   [0:0] inBoundsM_2_reg_1144_pp0_iter5_reg;
reg   [0:0] inBoundsM_2_reg_1144_pp0_iter6_reg;
wire   [0:0] inBoundsM_3_fu_608_p2;
reg   [0:0] inBoundsM_3_reg_1154;
reg   [0:0] inBoundsM_3_reg_1154_pp0_iter4_reg;
reg   [0:0] inBoundsM_3_reg_1154_pp0_iter5_reg;
reg   [0:0] inBoundsM_3_reg_1154_pp0_iter6_reg;
wire   [0:0] inBoundsM_4_fu_637_p2;
reg   [0:0] inBoundsM_4_reg_1164;
reg   [0:0] inBoundsM_4_reg_1164_pp0_iter4_reg;
reg   [0:0] inBoundsM_4_reg_1164_pp0_iter5_reg;
reg   [0:0] inBoundsM_4_reg_1164_pp0_iter6_reg;
wire   [0:0] inBoundsM_5_fu_666_p2;
reg   [0:0] inBoundsM_5_reg_1174;
reg   [0:0] inBoundsM_5_reg_1174_pp0_iter4_reg;
reg   [0:0] inBoundsM_5_reg_1174_pp0_iter5_reg;
reg   [0:0] inBoundsM_5_reg_1174_pp0_iter6_reg;
wire   [0:0] inBoundsM_6_fu_695_p2;
reg   [0:0] inBoundsM_6_reg_1184;
reg   [0:0] inBoundsM_6_reg_1184_pp0_iter4_reg;
reg   [0:0] inBoundsM_6_reg_1184_pp0_iter5_reg;
reg   [0:0] inBoundsM_6_reg_1184_pp0_iter6_reg;
wire   [0:0] inBoundsM_7_fu_724_p2;
reg   [0:0] inBoundsM_7_reg_1194;
reg   [0:0] inBoundsM_7_reg_1194_pp0_iter4_reg;
reg   [0:0] inBoundsM_7_reg_1194_pp0_iter5_reg;
reg   [0:0] inBoundsM_7_reg_1194_pp0_iter6_reg;
wire   [31:0] grp_fu_291_p2;
reg   [31:0] res_16_reg_1204;
wire   [31:0] trunc_ln170_1_fu_751_p1;
reg   [31:0] trunc_ln170_1_reg_1209;
wire   [31:0] grp_fu_295_p2;
reg   [31:0] res_17_reg_1214;
reg   [31:0] tmp_1_reg_1219;
wire   [31:0] grp_fu_299_p2;
reg   [31:0] res_18_reg_1224;
reg   [31:0] tmp_3_reg_1229;
wire   [31:0] grp_fu_303_p2;
reg   [31:0] res_19_reg_1234;
reg   [31:0] tmp_5_reg_1239;
wire   [31:0] grp_fu_307_p2;
reg   [31:0] res_20_reg_1244;
reg   [31:0] tmp_7_reg_1249;
wire   [31:0] grp_fu_311_p2;
reg   [31:0] res_21_reg_1254;
reg   [31:0] tmp_9_reg_1259;
wire   [31:0] grp_fu_315_p2;
reg   [31:0] res_22_reg_1264;
reg   [31:0] tmp_11_reg_1269;
wire   [31:0] grp_fu_319_p2;
reg   [31:0] res_23_reg_1274;
reg   [31:0] tmp_13_reg_1279;
wire   [31:0] bitcast_ln32_2_fu_825_p1;
reg   [31:0] bitcast_ln32_2_reg_1284;
reg   [31:0] bitcast_ln32_2_reg_1284_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_4_fu_829_p1;
reg   [31:0] bitcast_ln32_4_reg_1290;
reg   [31:0] bitcast_ln32_4_reg_1290_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_6_fu_833_p1;
reg   [31:0] bitcast_ln32_6_reg_1296;
reg   [31:0] bitcast_ln32_6_reg_1296_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_8_fu_837_p1;
reg   [31:0] bitcast_ln32_8_reg_1302;
reg   [31:0] bitcast_ln32_8_reg_1302_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_10_fu_841_p1;
reg   [31:0] bitcast_ln32_10_reg_1308;
reg   [31:0] bitcast_ln32_10_reg_1308_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_12_fu_845_p1;
reg   [31:0] bitcast_ln32_12_reg_1314;
reg   [31:0] bitcast_ln32_12_reg_1314_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_14_fu_849_p1;
reg   [31:0] bitcast_ln32_14_reg_1320;
reg   [31:0] bitcast_ln32_14_reg_1320_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_16_fu_853_p1;
reg   [31:0] bitcast_ln32_16_reg_1326;
reg   [31:0] bitcast_ln32_16_reg_1326_pp0_iter6_reg;
wire   [31:0] select_ln296_fu_861_p3;
reg   [31:0] select_ln296_reg_1332;
wire   [31:0] select_ln296_1_fu_872_p3;
reg   [31:0] select_ln296_1_reg_1337;
wire   [31:0] select_ln296_2_fu_883_p3;
reg   [31:0] select_ln296_2_reg_1342;
wire   [31:0] select_ln296_3_fu_894_p3;
reg   [31:0] select_ln296_3_reg_1347;
wire   [31:0] select_ln296_4_fu_905_p3;
reg   [31:0] select_ln296_4_reg_1352;
wire   [31:0] select_ln296_5_fu_916_p3;
reg   [31:0] select_ln296_5_reg_1357;
wire   [31:0] select_ln296_6_fu_927_p3;
reg   [31:0] select_ln296_6_reg_1362;
wire   [31:0] select_ln296_7_fu_938_p3;
reg   [31:0] select_ln296_7_reg_1367;
wire   [63:0] add_cast_fu_463_p1;
wire   [63:0] add91_cast_fu_478_p1;
wire   [63:0] add115_cast_fu_498_p1;
reg   [6:0] m1_fu_144;
wire   [6:0] add_ln67_fu_404_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_m1_load;
reg   [4:0] n1_fu_148;
wire   [4:0] select_ln64_1_fu_429_p3;
reg   [10:0] indvar_flatten_fu_152;
wire   [10:0] add_ln64_fu_347_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
reg    aPipes_31_read_local;
reg    bPipes_31_read_local;
reg    aBuffer_we0_local;
reg    aBuffer_ce0_local;
reg    aBuffer_ce1_local;
reg    cBuffer_ce1_local;
reg    cBuffer_we0_local;
wire   [255:0] tmp_14_fu_969_p9;
reg    cBuffer_ce0_local;
wire   [31:0] grp_fu_259_p0;
wire   [31:0] grp_fu_263_p0;
wire   [31:0] grp_fu_267_p0;
wire   [31:0] grp_fu_271_p0;
wire   [31:0] grp_fu_275_p0;
wire   [31:0] grp_fu_279_p0;
wire   [31:0] grp_fu_283_p0;
wire   [31:0] grp_fu_287_p0;
wire   [31:0] grp_fu_291_p1;
wire   [31:0] grp_fu_295_p1;
wire   [31:0] grp_fu_299_p1;
wire   [31:0] grp_fu_303_p1;
wire   [31:0] grp_fu_307_p1;
wire   [31:0] grp_fu_311_p1;
wire   [31:0] grp_fu_315_p1;
wire   [31:0] grp_fu_319_p1;
wire   [1:0] tmp_fu_376_p4;
wire   [0:0] icmp_ln82_fu_370_p2;
wire   [0:0] and_ln80_fu_392_p2;
wire   [0:0] icmp_ln83_fu_386_p2;
wire   [4:0] add_ln64_1_fu_423_p2;
wire   [26:0] zext_ln64_fu_436_p1;
wire   [26:0] add106_fu_445_p2;
wire   [4:0] add_fu_458_p2;
wire   [31:0] add106_cast_fu_450_p1;
wire   [9:0] mul1_fu_482_p3;
wire   [9:0] zext_ln67_fu_489_p1;
wire   [9:0] add115_fu_492_p2;
wire   [5:0] empty_fu_503_p1;
wire   [31:0] add1_fu_506_p4;
wire   [31:0] trunc_ln170_fu_532_p1;
wire   [31:0] or_ln_fu_541_p4;
wire   [31:0] tmp_s_fu_555_p4;
wire   [31:0] or_ln125_s_fu_570_p4;
wire   [31:0] tmp_2_fu_584_p4;
wire   [31:0] or_ln125_1_fu_599_p4;
wire   [31:0] tmp_4_fu_613_p4;
wire   [31:0] or_ln125_2_fu_628_p4;
wire   [31:0] tmp_6_fu_642_p4;
wire   [31:0] or_ln125_3_fu_657_p4;
wire   [31:0] tmp_8_fu_671_p4;
wire   [31:0] or_ln125_4_fu_686_p4;
wire   [31:0] tmp_10_fu_700_p4;
wire   [31:0] or_ln125_5_fu_715_p4;
wire   [31:0] tmp_12_fu_729_p4;
wire   [255:0] cPrev_1_fu_744_p3;
wire   [0:0] inBounds_fu_857_p2;
wire   [31:0] grp_fu_259_p2;
wire   [0:0] inBounds_1_fu_868_p2;
wire   [31:0] grp_fu_263_p2;
wire   [0:0] inBounds_2_fu_879_p2;
wire   [31:0] grp_fu_267_p2;
wire   [0:0] inBounds_3_fu_890_p2;
wire   [31:0] grp_fu_271_p2;
wire   [0:0] inBounds_4_fu_901_p2;
wire   [31:0] grp_fu_275_p2;
wire   [0:0] inBounds_5_fu_912_p2;
wire   [31:0] grp_fu_279_p2;
wire   [0:0] inBounds_6_fu_923_p2;
wire   [31:0] grp_fu_283_p2;
wire   [0:0] inBounds_7_fu_934_p2;
wire   [31:0] grp_fu_287_p2;
wire   [31:0] bitcast_ln36_7_fu_966_p1;
wire   [31:0] bitcast_ln36_6_fu_963_p1;
wire   [31:0] bitcast_ln36_5_fu_960_p1;
wire   [31:0] bitcast_ln36_4_fu_957_p1;
wire   [31:0] bitcast_ln36_3_fu_954_p1;
wire   [31:0] bitcast_ln36_2_fu_951_p1;
wire   [31:0] bitcast_ln36_1_fu_948_p1;
wire   [31:0] bitcast_ln36_fu_945_p1;
reg    grp_fu_259_ce;
reg    grp_fu_263_ce;
reg    grp_fu_267_ce;
reg    grp_fu_271_ce;
reg    grp_fu_275_ce;
reg    grp_fu_279_ce;
reg    grp_fu_283_ce;
reg    grp_fu_287_ce;
reg    grp_fu_291_ce;
reg    grp_fu_295_ce;
reg    grp_fu_299_ce;
reg    grp_fu_303_ce;
reg    grp_fu_307_ce;
reg    grp_fu_311_ce;
reg    grp_fu_315_ce;
reg    grp_fu_319_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_enable_operation_58;
reg    ap_enable_state2_pp0_iter1_stage0;
wire    ap_enable_operation_63;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_operation_69;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 m1_fu_144 = 7'd0;
#0 n1_fu_148 = 5'd0;
#0 indvar_flatten_fu_152 = 11'd0;
#0 ap_done_reg = 1'b0;
end

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1676(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_259_p0),
    .din1(res_16_reg_1204),
    .ce(grp_fu_259_ce),
    .dout(grp_fu_259_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1677(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_263_p0),
    .din1(res_17_reg_1214),
    .ce(grp_fu_263_ce),
    .dout(grp_fu_263_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1678(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_267_p0),
    .din1(res_18_reg_1224),
    .ce(grp_fu_267_ce),
    .dout(grp_fu_267_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1679(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_271_p0),
    .din1(res_19_reg_1234),
    .ce(grp_fu_271_ce),
    .dout(grp_fu_271_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1680(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_275_p0),
    .din1(res_20_reg_1244),
    .ce(grp_fu_275_ce),
    .dout(grp_fu_275_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1681(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_279_p0),
    .din1(res_21_reg_1254),
    .ce(grp_fu_279_ce),
    .dout(grp_fu_279_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1682(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_283_p0),
    .din1(res_22_reg_1264),
    .ce(grp_fu_283_ce),
    .dout(grp_fu_283_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1683(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_287_p0),
    .din1(res_23_reg_1274),
    .ce(grp_fu_287_ce),
    .dout(grp_fu_287_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1684(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_520_p1),
    .din1(grp_fu_291_p1),
    .ce(grp_fu_291_ce),
    .dout(grp_fu_291_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1685(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_520_p1),
    .din1(grp_fu_295_p1),
    .ce(grp_fu_295_ce),
    .dout(grp_fu_295_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1686(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_520_p1),
    .din1(grp_fu_299_p1),
    .ce(grp_fu_299_ce),
    .dout(grp_fu_299_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1687(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_520_p1),
    .din1(grp_fu_303_p1),
    .ce(grp_fu_303_ce),
    .dout(grp_fu_303_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1688(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_520_p1),
    .din1(grp_fu_307_p1),
    .ce(grp_fu_307_ce),
    .dout(grp_fu_307_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1689(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_520_p1),
    .din1(grp_fu_311_p1),
    .ce(grp_fu_311_ce),
    .dout(grp_fu_311_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1690(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_520_p1),
    .din1(grp_fu_315_p1),
    .ce(grp_fu_315_ce),
    .dout(grp_fu_315_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1691(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_520_p1),
    .din1(grp_fu_319_p1),
    .ce(grp_fu_319_ce),
    .dout(grp_fu_319_p2)
);

MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln64_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_152 <= add_ln64_fu_347_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_152 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln64_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            m1_fu_144 <= add_ln67_fu_404_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m1_fu_144 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            n1_fu_148 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            n1_fu_148 <= select_ln64_1_fu_429_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add91_reg_1079 <= add91_fu_440_p2;
        and_ln80_1_reg_1075 <= and_ln80_1_fu_398_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_159_reg_1084 <= empty_159_fu_454_p1;
        icmp_ln67_reg_1064 <= icmp_ln67_fu_356_p2;
        inBoundsN_reg_1089 <= inBoundsN_fu_468_p2;
        select_ln64_reg_1069 <= select_ln64_fu_362_p3;
        select_ln64_reg_1069_pp0_iter1_reg <= select_ln64_reg_1069;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        bitcast_ln32_10_reg_1308 <= bitcast_ln32_10_fu_841_p1;
        bitcast_ln32_10_reg_1308_pp0_iter6_reg <= bitcast_ln32_10_reg_1308;
        bitcast_ln32_12_reg_1314 <= bitcast_ln32_12_fu_845_p1;
        bitcast_ln32_12_reg_1314_pp0_iter6_reg <= bitcast_ln32_12_reg_1314;
        bitcast_ln32_14_reg_1320 <= bitcast_ln32_14_fu_849_p1;
        bitcast_ln32_14_reg_1320_pp0_iter6_reg <= bitcast_ln32_14_reg_1320;
        bitcast_ln32_16_reg_1326 <= bitcast_ln32_16_fu_853_p1;
        bitcast_ln32_16_reg_1326_pp0_iter6_reg <= bitcast_ln32_16_reg_1326;
        bitcast_ln32_2_reg_1284 <= bitcast_ln32_2_fu_825_p1;
        bitcast_ln32_2_reg_1284_pp0_iter6_reg <= bitcast_ln32_2_reg_1284;
        bitcast_ln32_4_reg_1290 <= bitcast_ln32_4_fu_829_p1;
        bitcast_ln32_4_reg_1290_pp0_iter6_reg <= bitcast_ln32_4_reg_1290;
        bitcast_ln32_6_reg_1296 <= bitcast_ln32_6_fu_833_p1;
        bitcast_ln32_6_reg_1296_pp0_iter6_reg <= bitcast_ln32_6_reg_1296;
        bitcast_ln32_8_reg_1302 <= bitcast_ln32_8_fu_837_p1;
        bitcast_ln32_8_reg_1302_pp0_iter6_reg <= bitcast_ln32_8_reg_1302;
        cBuffer_addr_reg_1106 <= add115_cast_fu_498_p1;
        cBuffer_addr_reg_1106_pp0_iter4_reg <= cBuffer_addr_reg_1106;
        cBuffer_addr_reg_1106_pp0_iter5_reg <= cBuffer_addr_reg_1106_pp0_iter4_reg;
        cBuffer_addr_reg_1106_pp0_iter6_reg <= cBuffer_addr_reg_1106_pp0_iter5_reg;
        cBuffer_addr_reg_1106_pp0_iter7_reg <= cBuffer_addr_reg_1106_pp0_iter6_reg;
        empty_159_reg_1084_pp0_iter2_reg <= empty_159_reg_1084;
        inBoundsM_1_reg_1134 <= inBoundsM_1_fu_550_p2;
        inBoundsM_1_reg_1134_pp0_iter4_reg <= inBoundsM_1_reg_1134;
        inBoundsM_1_reg_1134_pp0_iter5_reg <= inBoundsM_1_reg_1134_pp0_iter4_reg;
        inBoundsM_1_reg_1134_pp0_iter6_reg <= inBoundsM_1_reg_1134_pp0_iter5_reg;
        inBoundsM_2_reg_1144 <= inBoundsM_2_fu_579_p2;
        inBoundsM_2_reg_1144_pp0_iter4_reg <= inBoundsM_2_reg_1144;
        inBoundsM_2_reg_1144_pp0_iter5_reg <= inBoundsM_2_reg_1144_pp0_iter4_reg;
        inBoundsM_2_reg_1144_pp0_iter6_reg <= inBoundsM_2_reg_1144_pp0_iter5_reg;
        inBoundsM_3_reg_1154 <= inBoundsM_3_fu_608_p2;
        inBoundsM_3_reg_1154_pp0_iter4_reg <= inBoundsM_3_reg_1154;
        inBoundsM_3_reg_1154_pp0_iter5_reg <= inBoundsM_3_reg_1154_pp0_iter4_reg;
        inBoundsM_3_reg_1154_pp0_iter6_reg <= inBoundsM_3_reg_1154_pp0_iter5_reg;
        inBoundsM_4_reg_1164 <= inBoundsM_4_fu_637_p2;
        inBoundsM_4_reg_1164_pp0_iter4_reg <= inBoundsM_4_reg_1164;
        inBoundsM_4_reg_1164_pp0_iter5_reg <= inBoundsM_4_reg_1164_pp0_iter4_reg;
        inBoundsM_4_reg_1164_pp0_iter6_reg <= inBoundsM_4_reg_1164_pp0_iter5_reg;
        inBoundsM_5_reg_1174 <= inBoundsM_5_fu_666_p2;
        inBoundsM_5_reg_1174_pp0_iter4_reg <= inBoundsM_5_reg_1174;
        inBoundsM_5_reg_1174_pp0_iter5_reg <= inBoundsM_5_reg_1174_pp0_iter4_reg;
        inBoundsM_5_reg_1174_pp0_iter6_reg <= inBoundsM_5_reg_1174_pp0_iter5_reg;
        inBoundsM_6_reg_1184 <= inBoundsM_6_fu_695_p2;
        inBoundsM_6_reg_1184_pp0_iter4_reg <= inBoundsM_6_reg_1184;
        inBoundsM_6_reg_1184_pp0_iter5_reg <= inBoundsM_6_reg_1184_pp0_iter4_reg;
        inBoundsM_6_reg_1184_pp0_iter6_reg <= inBoundsM_6_reg_1184_pp0_iter5_reg;
        inBoundsM_7_reg_1194 <= inBoundsM_7_fu_724_p2;
        inBoundsM_7_reg_1194_pp0_iter4_reg <= inBoundsM_7_reg_1194;
        inBoundsM_7_reg_1194_pp0_iter5_reg <= inBoundsM_7_reg_1194_pp0_iter4_reg;
        inBoundsM_7_reg_1194_pp0_iter6_reg <= inBoundsM_7_reg_1194_pp0_iter5_reg;
        inBoundsM_reg_1112 <= inBoundsM_fu_515_p2;
        inBoundsM_reg_1112_pp0_iter4_reg <= inBoundsM_reg_1112;
        inBoundsM_reg_1112_pp0_iter5_reg <= inBoundsM_reg_1112_pp0_iter4_reg;
        inBoundsM_reg_1112_pp0_iter6_reg <= inBoundsM_reg_1112_pp0_iter5_reg;
        inBoundsN_reg_1089_pp0_iter2_reg <= inBoundsN_reg_1089;
        inBoundsN_reg_1089_pp0_iter3_reg <= inBoundsN_reg_1089_pp0_iter2_reg;
        inBoundsN_reg_1089_pp0_iter4_reg <= inBoundsN_reg_1089_pp0_iter3_reg;
        inBoundsN_reg_1089_pp0_iter5_reg <= inBoundsN_reg_1089_pp0_iter4_reg;
        inBoundsN_reg_1089_pp0_iter6_reg <= inBoundsN_reg_1089_pp0_iter5_reg;
        res_16_reg_1204 <= grp_fu_291_p2;
        res_17_reg_1214 <= grp_fu_295_p2;
        res_18_reg_1224 <= grp_fu_299_p2;
        res_19_reg_1234 <= grp_fu_303_p2;
        res_20_reg_1244 <= grp_fu_307_p2;
        res_21_reg_1254 <= grp_fu_311_p2;
        res_22_reg_1264 <= grp_fu_315_p2;
        res_23_reg_1274 <= grp_fu_319_p2;
        select_ln296_1_reg_1337 <= select_ln296_1_fu_872_p3;
        select_ln296_2_reg_1342 <= select_ln296_2_fu_883_p3;
        select_ln296_3_reg_1347 <= select_ln296_3_fu_894_p3;
        select_ln296_4_reg_1352 <= select_ln296_4_fu_905_p3;
        select_ln296_5_reg_1357 <= select_ln296_5_fu_916_p3;
        select_ln296_6_reg_1362 <= select_ln296_6_fu_927_p3;
        select_ln296_7_reg_1367 <= select_ln296_7_fu_938_p3;
        select_ln296_reg_1332 <= select_ln296_fu_861_p3;
        select_ln64_reg_1069_pp0_iter2_reg <= select_ln64_reg_1069_pp0_iter1_reg;
        tmp_11_reg_1269 <= {{cPrev_1_fu_744_p3[223:192]}};
        tmp_13_reg_1279 <= {{cPrev_1_fu_744_p3[255:224]}};
        tmp_1_reg_1219 <= {{cPrev_1_fu_744_p3[63:32]}};
        tmp_3_reg_1229 <= {{cPrev_1_fu_744_p3[95:64]}};
        tmp_5_reg_1239 <= {{cPrev_1_fu_744_p3[127:96]}};
        tmp_7_reg_1249 <= {{cPrev_1_fu_744_p3[159:128]}};
        tmp_9_reg_1259 <= {{cPrev_1_fu_744_p3[191:160]}};
        trunc_ln170_1_reg_1209 <= trunc_ln170_1_fu_751_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        aBuffer_ce0_local = 1'b1;
    end else begin
        aBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        aBuffer_ce1_local = 1'b1;
    end else begin
        aBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln80_1_reg_1075) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        aBuffer_we0_local = 1'b1;
    end else begin
        aBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln80_1_reg_1075) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        aPipes_31_blk_n = aPipes_31_empty_n;
    end else begin
        aPipes_31_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln80_1_reg_1075) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        aPipes_31_read_local = 1'b1;
    end else begin
        aPipes_31_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln64_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_m1_load = 7'd0;
    end else begin
        ap_sig_allocacmp_m1_load = m1_fu_144;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bPipes_31_blk_n = bPipes_31_empty_n;
    end else begin
        bPipes_31_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        bPipes_31_read_local = 1'b1;
    end else begin
        bPipes_31_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        cBuffer_ce0_local = 1'b1;
    end else begin
        cBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        cBuffer_ce1_local = 1'b1;
    end else begin
        cBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        cBuffer_we0_local = 1'b1;
    end else begin
        cBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_259_ce = 1'b1;
    end else begin
        grp_fu_259_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_263_ce = 1'b1;
    end else begin
        grp_fu_263_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_267_ce = 1'b1;
    end else begin
        grp_fu_267_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_271_ce = 1'b1;
    end else begin
        grp_fu_271_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_275_ce = 1'b1;
    end else begin
        grp_fu_275_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_279_ce = 1'b1;
    end else begin
        grp_fu_279_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_283_ce = 1'b1;
    end else begin
        grp_fu_283_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_287_ce = 1'b1;
    end else begin
        grp_fu_287_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_291_ce = 1'b1;
    end else begin
        grp_fu_291_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_295_ce = 1'b1;
    end else begin
        grp_fu_295_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_299_ce = 1'b1;
    end else begin
        grp_fu_299_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_303_ce = 1'b1;
    end else begin
        grp_fu_303_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_307_ce = 1'b1;
    end else begin
        grp_fu_307_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_311_ce = 1'b1;
    end else begin
        grp_fu_311_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_315_ce = 1'b1;
    end else begin
        grp_fu_315_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_319_ce = 1'b1;
    end else begin
        grp_fu_319_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aBuffer_address0 = add_cast_fu_463_p1;

assign aBuffer_address1 = add91_cast_fu_478_p1;

assign aBuffer_ce0 = aBuffer_ce0_local;

assign aBuffer_ce1 = aBuffer_ce1_local;

assign aBuffer_d0 = aPipes_31_dout;

assign aBuffer_we0 = aBuffer_we0_local;

assign aPipes_31_read = aPipes_31_read_local;

assign add106_cast_fu_450_p1 = add106_fu_445_p2;

assign add106_fu_445_p2 = (mul + zext_ln64_fu_436_p1);

assign add115_cast_fu_498_p1 = add115_fu_492_p2;

assign add115_fu_492_p2 = (mul1_fu_482_p3 + zext_ln67_fu_489_p1);

assign add1_fu_506_p4 = {{{m0}, {empty_fu_503_p1}}, {3'd0}};

assign add91_cast_fu_478_p1 = add91_reg_1079;

assign add91_fu_440_p2 = (select_ln64_1_fu_429_p3 + cond90);

assign add_cast_fu_463_p1 = add_fu_458_p2;

assign add_fu_458_p2 = (select_ln64_1_fu_429_p3 + cond);

assign add_ln64_1_fu_423_p2 = (n1_fu_148 + 5'd1);

assign add_ln64_fu_347_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln67_fu_404_p2 = (select_ln64_fu_362_p3 + 7'd1);

assign and_ln80_1_fu_398_p2 = (icmp_ln83_fu_386_p2 & and_ln80_fu_392_p2);

assign and_ln80_fu_392_p2 = (icmp_ln82_fu_370_p2 & brmerge282);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((1'd1 == and_ln80_1_reg_1075) & (1'b0 == aPipes_31_empty_n));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = (bPipes_31_empty_n == 1'b0);
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_58 = (1'd1 == and_ln80_1_reg_1075);
end

assign ap_enable_operation_63 = (1'b1 == 1'b1);

assign ap_enable_operation_69 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bPipes_31_read = bPipes_31_read_local;

assign bitcast_ln32_10_fu_841_p1 = tmp_7_reg_1249;

assign bitcast_ln32_12_fu_845_p1 = tmp_9_reg_1259;

assign bitcast_ln32_14_fu_849_p1 = tmp_11_reg_1269;

assign bitcast_ln32_16_fu_853_p1 = tmp_13_reg_1279;

assign bitcast_ln32_2_fu_825_p1 = trunc_ln170_1_reg_1209;

assign bitcast_ln32_4_fu_829_p1 = tmp_1_reg_1219;

assign bitcast_ln32_6_fu_833_p1 = tmp_3_reg_1229;

assign bitcast_ln32_8_fu_837_p1 = tmp_5_reg_1239;

assign bitcast_ln32_fu_520_p1 = aBuffer_q1;

assign bitcast_ln36_1_fu_948_p1 = select_ln296_1_reg_1337;

assign bitcast_ln36_2_fu_951_p1 = select_ln296_2_reg_1342;

assign bitcast_ln36_3_fu_954_p1 = select_ln296_3_reg_1347;

assign bitcast_ln36_4_fu_957_p1 = select_ln296_4_reg_1352;

assign bitcast_ln36_5_fu_960_p1 = select_ln296_5_reg_1357;

assign bitcast_ln36_6_fu_963_p1 = select_ln296_6_reg_1362;

assign bitcast_ln36_7_fu_966_p1 = select_ln296_7_reg_1367;

assign bitcast_ln36_fu_945_p1 = select_ln296_reg_1332;

assign cBuffer_address0 = cBuffer_addr_reg_1106_pp0_iter7_reg;

assign cBuffer_address1 = add115_cast_fu_498_p1;

assign cBuffer_ce0 = cBuffer_ce0_local;

assign cBuffer_ce1 = cBuffer_ce1_local;

assign cBuffer_d0 = tmp_14_fu_969_p9;

assign cBuffer_we0 = cBuffer_we0_local;

assign cPrev_1_fu_744_p3 = ((cmp111[0:0] == 1'b1) ? 256'd0 : cBuffer_q1);

assign empty_159_fu_454_p1 = select_ln64_1_fu_429_p3[3:0];

assign empty_fu_503_p1 = select_ln64_reg_1069_pp0_iter2_reg[5:0];

assign grp_fu_259_p0 = trunc_ln170_1_reg_1209;

assign grp_fu_263_p0 = tmp_1_reg_1219;

assign grp_fu_267_p0 = tmp_3_reg_1229;

assign grp_fu_271_p0 = tmp_5_reg_1239;

assign grp_fu_275_p0 = tmp_7_reg_1249;

assign grp_fu_279_p0 = tmp_9_reg_1259;

assign grp_fu_283_p0 = tmp_11_reg_1269;

assign grp_fu_287_p0 = tmp_13_reg_1279;

assign grp_fu_291_p1 = trunc_ln170_fu_532_p1;

assign grp_fu_295_p1 = tmp_s_fu_555_p4;

assign grp_fu_299_p1 = tmp_2_fu_584_p4;

assign grp_fu_303_p1 = tmp_4_fu_613_p4;

assign grp_fu_307_p1 = tmp_6_fu_642_p4;

assign grp_fu_311_p1 = tmp_8_fu_671_p4;

assign grp_fu_315_p1 = tmp_10_fu_700_p4;

assign grp_fu_319_p1 = tmp_12_fu_729_p4;

assign icmp_ln64_fu_341_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_356_p2 = ((ap_sig_allocacmp_m1_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_370_p2 = ((select_ln64_fu_362_p3 > 7'd30) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_386_p2 = ((tmp_fu_376_p4 == 2'd0) ? 1'b1 : 1'b0);

assign inBoundsM_1_fu_550_p2 = ((or_ln_fu_541_p4 < size_m_load) ? 1'b1 : 1'b0);

assign inBoundsM_2_fu_579_p2 = ((or_ln125_s_fu_570_p4 < size_m_load) ? 1'b1 : 1'b0);

assign inBoundsM_3_fu_608_p2 = ((or_ln125_1_fu_599_p4 < size_m_load) ? 1'b1 : 1'b0);

assign inBoundsM_4_fu_637_p2 = ((or_ln125_2_fu_628_p4 < size_m_load) ? 1'b1 : 1'b0);

assign inBoundsM_5_fu_666_p2 = ((or_ln125_3_fu_657_p4 < size_m_load) ? 1'b1 : 1'b0);

assign inBoundsM_6_fu_695_p2 = ((or_ln125_4_fu_686_p4 < size_m_load) ? 1'b1 : 1'b0);

assign inBoundsM_7_fu_724_p2 = ((or_ln125_5_fu_715_p4 < size_m_load) ? 1'b1 : 1'b0);

assign inBoundsM_fu_515_p2 = ((add1_fu_506_p4 < size_m_load) ? 1'b1 : 1'b0);

assign inBoundsN_fu_468_p2 = ((add106_cast_fu_450_p1 < size_n_load) ? 1'b1 : 1'b0);

assign inBounds_1_fu_868_p2 = (inBoundsN_reg_1089_pp0_iter6_reg & inBoundsM_1_reg_1134_pp0_iter6_reg);

assign inBounds_2_fu_879_p2 = (inBoundsN_reg_1089_pp0_iter6_reg & inBoundsM_2_reg_1144_pp0_iter6_reg);

assign inBounds_3_fu_890_p2 = (inBoundsN_reg_1089_pp0_iter6_reg & inBoundsM_3_reg_1154_pp0_iter6_reg);

assign inBounds_4_fu_901_p2 = (inBoundsN_reg_1089_pp0_iter6_reg & inBoundsM_4_reg_1164_pp0_iter6_reg);

assign inBounds_5_fu_912_p2 = (inBoundsN_reg_1089_pp0_iter6_reg & inBoundsM_5_reg_1174_pp0_iter6_reg);

assign inBounds_6_fu_923_p2 = (inBoundsN_reg_1089_pp0_iter6_reg & inBoundsM_6_reg_1184_pp0_iter6_reg);

assign inBounds_7_fu_934_p2 = (inBoundsN_reg_1089_pp0_iter6_reg & inBoundsM_7_reg_1194_pp0_iter6_reg);

assign inBounds_fu_857_p2 = (inBoundsN_reg_1089_pp0_iter6_reg & inBoundsM_reg_1112_pp0_iter6_reg);

assign mul1_fu_482_p3 = {{empty_159_reg_1084_pp0_iter2_reg}, {6'd0}};

assign or_ln125_1_fu_599_p4 = {{{m0}, {empty_fu_503_p1}}, {3'd3}};

assign or_ln125_2_fu_628_p4 = {{{m0}, {empty_fu_503_p1}}, {3'd4}};

assign or_ln125_3_fu_657_p4 = {{{m0}, {empty_fu_503_p1}}, {3'd5}};

assign or_ln125_4_fu_686_p4 = {{{m0}, {empty_fu_503_p1}}, {3'd6}};

assign or_ln125_5_fu_715_p4 = {{{m0}, {empty_fu_503_p1}}, {3'd7}};

assign or_ln125_s_fu_570_p4 = {{{m0}, {empty_fu_503_p1}}, {3'd2}};

assign or_ln_fu_541_p4 = {{{m0}, {empty_fu_503_p1}}, {3'd1}};

assign select_ln296_1_fu_872_p3 = ((inBounds_1_fu_868_p2[0:0] == 1'b1) ? grp_fu_263_p2 : bitcast_ln32_4_reg_1290_pp0_iter6_reg);

assign select_ln296_2_fu_883_p3 = ((inBounds_2_fu_879_p2[0:0] == 1'b1) ? grp_fu_267_p2 : bitcast_ln32_6_reg_1296_pp0_iter6_reg);

assign select_ln296_3_fu_894_p3 = ((inBounds_3_fu_890_p2[0:0] == 1'b1) ? grp_fu_271_p2 : bitcast_ln32_8_reg_1302_pp0_iter6_reg);

assign select_ln296_4_fu_905_p3 = ((inBounds_4_fu_901_p2[0:0] == 1'b1) ? grp_fu_275_p2 : bitcast_ln32_10_reg_1308_pp0_iter6_reg);

assign select_ln296_5_fu_916_p3 = ((inBounds_5_fu_912_p2[0:0] == 1'b1) ? grp_fu_279_p2 : bitcast_ln32_12_reg_1314_pp0_iter6_reg);

assign select_ln296_6_fu_927_p3 = ((inBounds_6_fu_923_p2[0:0] == 1'b1) ? grp_fu_283_p2 : bitcast_ln32_14_reg_1320_pp0_iter6_reg);

assign select_ln296_7_fu_938_p3 = ((inBounds_7_fu_934_p2[0:0] == 1'b1) ? grp_fu_287_p2 : bitcast_ln32_16_reg_1326_pp0_iter6_reg);

assign select_ln296_fu_861_p3 = ((inBounds_fu_857_p2[0:0] == 1'b1) ? grp_fu_259_p2 : bitcast_ln32_2_reg_1284_pp0_iter6_reg);

assign select_ln64_1_fu_429_p3 = ((icmp_ln67_reg_1064[0:0] == 1'b1) ? add_ln64_1_fu_423_p2 : n1_fu_148);

assign select_ln64_fu_362_p3 = ((icmp_ln67_fu_356_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_m1_load);

assign tmp_10_fu_700_p4 = {{bPipes_31_dout[223:192]}};

assign tmp_12_fu_729_p4 = {{bPipes_31_dout[255:224]}};

assign tmp_14_fu_969_p9 = {{{{{{{{bitcast_ln36_7_fu_966_p1}, {bitcast_ln36_6_fu_963_p1}}, {bitcast_ln36_5_fu_960_p1}}, {bitcast_ln36_4_fu_957_p1}}, {bitcast_ln36_3_fu_954_p1}}, {bitcast_ln36_2_fu_951_p1}}, {bitcast_ln36_1_fu_948_p1}}, {bitcast_ln36_fu_945_p1}};

assign tmp_2_fu_584_p4 = {{bPipes_31_dout[95:64]}};

assign tmp_4_fu_613_p4 = {{bPipes_31_dout[127:96]}};

assign tmp_6_fu_642_p4 = {{bPipes_31_dout[159:128]}};

assign tmp_8_fu_671_p4 = {{bPipes_31_dout[191:160]}};

assign tmp_fu_376_p4 = {{select_ln64_fu_362_p3[6:5]}};

assign tmp_s_fu_555_p4 = {{bPipes_31_dout[63:32]}};

assign trunc_ln170_1_fu_751_p1 = cPrev_1_fu_744_p3[31:0];

assign trunc_ln170_fu_532_p1 = bPipes_31_dout[31:0];

assign zext_ln64_fu_436_p1 = select_ln64_1_fu_429_p3;

assign zext_ln67_fu_489_p1 = select_ln64_reg_1069_pp0_iter2_reg;

endmodule //MatrixMultiplicationKernel_ProcessingElement_Pipeline_Pipeline_N_Pipeline_M
