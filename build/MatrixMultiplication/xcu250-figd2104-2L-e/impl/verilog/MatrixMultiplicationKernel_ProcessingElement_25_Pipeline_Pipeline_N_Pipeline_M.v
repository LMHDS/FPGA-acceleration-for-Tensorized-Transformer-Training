// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMultiplicationKernel_ProcessingElement_25_Pipeline_Pipeline_N_Pipeline_M (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        aPipes_24_dout,
        aPipes_24_num_data_valid,
        aPipes_24_fifo_cap,
        aPipes_24_empty_n,
        aPipes_24_read,
        aPipes_25_din,
        aPipes_25_num_data_valid,
        aPipes_25_fifo_cap,
        aPipes_25_full_n,
        aPipes_25_write,
        bPipes_24_dout,
        bPipes_24_num_data_valid,
        bPipes_24_fifo_cap,
        bPipes_24_empty_n,
        bPipes_24_read,
        bPipes_25_din,
        bPipes_25_num_data_valid,
        bPipes_25_fifo_cap,
        bPipes_25_full_n,
        bPipes_25_write,
        m0,
        cBuffer_address0,
        cBuffer_ce0,
        cBuffer_we0,
        cBuffer_d0,
        cBuffer_address1,
        cBuffer_ce1,
        cBuffer_q1,
        cmp111,
        size_m,
        cond90,
        aBuffer_address0,
        aBuffer_ce0,
        aBuffer_we0,
        aBuffer_d0,
        aBuffer_address1,
        aBuffer_ce1,
        aBuffer_q1,
        mul,
        cond,
        size_n,
        brmerge282
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] aPipes_24_dout;
input  [2:0] aPipes_24_num_data_valid;
input  [2:0] aPipes_24_fifo_cap;
input   aPipes_24_empty_n;
output   aPipes_24_read;
output  [31:0] aPipes_25_din;
input  [2:0] aPipes_25_num_data_valid;
input  [2:0] aPipes_25_fifo_cap;
input   aPipes_25_full_n;
output   aPipes_25_write;
input  [255:0] bPipes_24_dout;
input  [2:0] bPipes_24_num_data_valid;
input  [2:0] bPipes_24_fifo_cap;
input   bPipes_24_empty_n;
output   bPipes_24_read;
output  [255:0] bPipes_25_din;
input  [2:0] bPipes_25_num_data_valid;
input  [2:0] bPipes_25_fifo_cap;
input   bPipes_25_full_n;
output   bPipes_25_write;
input  [22:0] m0;
output  [9:0] cBuffer_address0;
output   cBuffer_ce0;
output   cBuffer_we0;
output  [255:0] cBuffer_d0;
output  [9:0] cBuffer_address1;
output   cBuffer_ce1;
input  [255:0] cBuffer_q1;
input  [0:0] cmp111;
input  [31:0] size_m;
input  [4:0] cond90;
output  [4:0] aBuffer_address0;
output   aBuffer_ce0;
output   aBuffer_we0;
output  [31:0] aBuffer_d0;
output  [4:0] aBuffer_address1;
output   aBuffer_ce1;
input  [31:0] aBuffer_q1;
input  [26:0] mul;
input  [4:0] cond;
input  [31:0] size_n;
input  [0:0] brmerge282;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg   [0:0] and_ln80_14_reg_1107;
reg   [0:0] icmp_ln85_reg_1111;
reg    ap_predicate_op63_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_367_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bPipes_24_blk_n;
wire    ap_block_pp0_stage0;
reg    bPipes_25_blk_n;
reg    aPipes_24_blk_n;
reg    aPipes_25_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_382_p2;
reg   [0:0] icmp_ln67_reg_1096;
wire   [6:0] select_ln64_fu_388_p3;
reg   [6:0] select_ln64_reg_1101;
reg   [6:0] select_ln64_reg_1101_pp0_iter1_reg;
reg   [6:0] select_ln64_reg_1101_pp0_iter2_reg;
wire   [0:0] and_ln80_14_fu_424_p2;
wire   [0:0] icmp_ln85_fu_430_p2;
wire   [4:0] add91_fu_472_p2;
reg   [4:0] add91_reg_1115;
wire   [3:0] empty_226_fu_486_p1;
reg   [3:0] empty_226_reg_1120;
reg   [3:0] empty_226_reg_1120_pp0_iter2_reg;
wire   [0:0] inBoundsN_fu_500_p2;
reg   [0:0] inBoundsN_reg_1125;
reg   [0:0] inBoundsN_reg_1125_pp0_iter2_reg;
reg   [0:0] inBoundsN_reg_1125_pp0_iter3_reg;
reg   [0:0] inBoundsN_reg_1125_pp0_iter4_reg;
reg   [0:0] inBoundsN_reg_1125_pp0_iter5_reg;
reg   [0:0] inBoundsN_reg_1125_pp0_iter6_reg;
reg   [9:0] cBuffer_addr_reg_1142;
reg   [9:0] cBuffer_addr_reg_1142_pp0_iter4_reg;
reg   [9:0] cBuffer_addr_reg_1142_pp0_iter5_reg;
reg   [9:0] cBuffer_addr_reg_1142_pp0_iter6_reg;
reg   [9:0] cBuffer_addr_reg_1142_pp0_iter7_reg;
wire   [0:0] inBoundsM_fu_547_p2;
reg   [0:0] inBoundsM_reg_1148;
reg   [0:0] inBoundsM_reg_1148_pp0_iter4_reg;
reg   [0:0] inBoundsM_reg_1148_pp0_iter5_reg;
reg   [0:0] inBoundsM_reg_1148_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_fu_552_p1;
wire   [0:0] inBoundsM_106_fu_582_p2;
reg   [0:0] inBoundsM_106_reg_1170;
reg   [0:0] inBoundsM_106_reg_1170_pp0_iter4_reg;
reg   [0:0] inBoundsM_106_reg_1170_pp0_iter5_reg;
reg   [0:0] inBoundsM_106_reg_1170_pp0_iter6_reg;
wire   [0:0] inBoundsM_107_fu_611_p2;
reg   [0:0] inBoundsM_107_reg_1180;
reg   [0:0] inBoundsM_107_reg_1180_pp0_iter4_reg;
reg   [0:0] inBoundsM_107_reg_1180_pp0_iter5_reg;
reg   [0:0] inBoundsM_107_reg_1180_pp0_iter6_reg;
wire   [0:0] inBoundsM_108_fu_640_p2;
reg   [0:0] inBoundsM_108_reg_1190;
reg   [0:0] inBoundsM_108_reg_1190_pp0_iter4_reg;
reg   [0:0] inBoundsM_108_reg_1190_pp0_iter5_reg;
reg   [0:0] inBoundsM_108_reg_1190_pp0_iter6_reg;
wire   [0:0] inBoundsM_109_fu_669_p2;
reg   [0:0] inBoundsM_109_reg_1200;
reg   [0:0] inBoundsM_109_reg_1200_pp0_iter4_reg;
reg   [0:0] inBoundsM_109_reg_1200_pp0_iter5_reg;
reg   [0:0] inBoundsM_109_reg_1200_pp0_iter6_reg;
wire   [0:0] inBoundsM_110_fu_698_p2;
reg   [0:0] inBoundsM_110_reg_1210;
reg   [0:0] inBoundsM_110_reg_1210_pp0_iter4_reg;
reg   [0:0] inBoundsM_110_reg_1210_pp0_iter5_reg;
reg   [0:0] inBoundsM_110_reg_1210_pp0_iter6_reg;
wire   [0:0] inBoundsM_111_fu_727_p2;
reg   [0:0] inBoundsM_111_reg_1220;
reg   [0:0] inBoundsM_111_reg_1220_pp0_iter4_reg;
reg   [0:0] inBoundsM_111_reg_1220_pp0_iter5_reg;
reg   [0:0] inBoundsM_111_reg_1220_pp0_iter6_reg;
wire   [0:0] inBoundsM_112_fu_756_p2;
reg   [0:0] inBoundsM_112_reg_1230;
reg   [0:0] inBoundsM_112_reg_1230_pp0_iter4_reg;
reg   [0:0] inBoundsM_112_reg_1230_pp0_iter5_reg;
reg   [0:0] inBoundsM_112_reg_1230_pp0_iter6_reg;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] res_361_reg_1240;
wire   [31:0] trunc_ln170_16_fu_783_p1;
reg   [31:0] trunc_ln170_16_reg_1245;
wire   [31:0] grp_fu_321_p2;
reg   [31:0] res_362_reg_1250;
reg   [31:0] tmp_211_reg_1255;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] res_363_reg_1260;
reg   [31:0] tmp_213_reg_1265;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] res_364_reg_1270;
reg   [31:0] tmp_215_reg_1275;
wire   [31:0] grp_fu_333_p2;
reg   [31:0] res_365_reg_1280;
reg   [31:0] tmp_217_reg_1285;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] res_366_reg_1290;
reg   [31:0] tmp_219_reg_1295;
wire   [31:0] grp_fu_341_p2;
reg   [31:0] res_367_reg_1300;
reg   [31:0] tmp_221_reg_1305;
wire   [31:0] grp_fu_345_p2;
reg   [31:0] res_368_reg_1310;
reg   [31:0] tmp_223_reg_1315;
wire   [31:0] bitcast_ln32_210_fu_857_p1;
reg   [31:0] bitcast_ln32_210_reg_1320;
reg   [31:0] bitcast_ln32_210_reg_1320_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_212_fu_861_p1;
reg   [31:0] bitcast_ln32_212_reg_1326;
reg   [31:0] bitcast_ln32_212_reg_1326_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_214_fu_865_p1;
reg   [31:0] bitcast_ln32_214_reg_1332;
reg   [31:0] bitcast_ln32_214_reg_1332_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_216_fu_869_p1;
reg   [31:0] bitcast_ln32_216_reg_1338;
reg   [31:0] bitcast_ln32_216_reg_1338_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_218_fu_873_p1;
reg   [31:0] bitcast_ln32_218_reg_1344;
reg   [31:0] bitcast_ln32_218_reg_1344_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_220_fu_877_p1;
reg   [31:0] bitcast_ln32_220_reg_1350;
reg   [31:0] bitcast_ln32_220_reg_1350_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_222_fu_881_p1;
reg   [31:0] bitcast_ln32_222_reg_1356;
reg   [31:0] bitcast_ln32_222_reg_1356_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_224_fu_885_p1;
reg   [31:0] bitcast_ln32_224_reg_1362;
reg   [31:0] bitcast_ln32_224_reg_1362_pp0_iter6_reg;
wire   [31:0] select_ln296_fu_893_p3;
reg   [31:0] select_ln296_reg_1368;
wire   [31:0] select_ln296_92_fu_904_p3;
reg   [31:0] select_ln296_92_reg_1373;
wire   [31:0] select_ln296_93_fu_915_p3;
reg   [31:0] select_ln296_93_reg_1378;
wire   [31:0] select_ln296_94_fu_926_p3;
reg   [31:0] select_ln296_94_reg_1383;
wire   [31:0] select_ln296_95_fu_937_p3;
reg   [31:0] select_ln296_95_reg_1388;
wire   [31:0] select_ln296_96_fu_948_p3;
reg   [31:0] select_ln296_96_reg_1393;
wire   [31:0] select_ln296_97_fu_959_p3;
reg   [31:0] select_ln296_97_reg_1398;
wire   [31:0] select_ln296_98_fu_970_p3;
reg   [31:0] select_ln296_98_reg_1403;
wire   [63:0] add_cast_fu_495_p1;
wire   [63:0] add91_cast_fu_510_p1;
wire   [63:0] add115_cast_fu_530_p1;
reg   [6:0] m1_fu_154;
wire   [6:0] add_ln67_fu_436_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_m1_load;
reg   [4:0] n1_fu_158;
wire   [4:0] select_ln64_14_fu_461_p3;
reg   [10:0] indvar_flatten6_fu_162;
wire   [10:0] add_ln64_fu_373_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten6_load;
reg    aPipes_24_read_local;
reg    ap_block_pp0_stage0_01001;
reg    aPipes_25_write_local;
reg    bPipes_24_read_local;
reg    bPipes_25_write_local;
reg    aBuffer_we0_local;
reg    aBuffer_ce0_local;
reg    aBuffer_ce1_local;
reg    cBuffer_ce1_local;
reg    cBuffer_we0_local;
wire   [255:0] tmp_224_fu_1001_p9;
reg    cBuffer_ce0_local;
wire   [31:0] grp_fu_285_p0;
wire   [31:0] grp_fu_289_p0;
wire   [31:0] grp_fu_293_p0;
wire   [31:0] grp_fu_297_p0;
wire   [31:0] grp_fu_301_p0;
wire   [31:0] grp_fu_305_p0;
wire   [31:0] grp_fu_309_p0;
wire   [31:0] grp_fu_313_p0;
wire   [31:0] grp_fu_317_p1;
wire   [31:0] grp_fu_321_p1;
wire   [31:0] grp_fu_325_p1;
wire   [31:0] grp_fu_329_p1;
wire   [31:0] grp_fu_333_p1;
wire   [31:0] grp_fu_337_p1;
wire   [31:0] grp_fu_341_p1;
wire   [31:0] grp_fu_345_p1;
wire   [1:0] tmp_fu_402_p4;
wire   [0:0] icmp_ln82_fu_396_p2;
wire   [0:0] and_ln80_fu_418_p2;
wire   [0:0] icmp_ln83_fu_412_p2;
wire   [4:0] add_ln64_14_fu_455_p2;
wire   [26:0] zext_ln64_fu_468_p1;
wire   [26:0] add106_fu_477_p2;
wire   [4:0] add_fu_490_p2;
wire   [31:0] add106_cast_fu_482_p1;
wire   [9:0] mul8_fu_514_p3;
wire   [9:0] zext_ln67_fu_521_p1;
wire   [9:0] add115_fu_524_p2;
wire   [5:0] empty_fu_535_p1;
wire   [31:0] add5_fu_538_p4;
wire   [31:0] trunc_ln170_fu_564_p1;
wire   [31:0] or_ln_fu_573_p4;
wire   [31:0] tmp_s_fu_587_p4;
wire   [31:0] or_ln125_s_fu_602_p4;
wire   [31:0] tmp_212_fu_616_p4;
wire   [31:0] or_ln125_58_fu_631_p4;
wire   [31:0] tmp_214_fu_645_p4;
wire   [31:0] or_ln125_59_fu_660_p4;
wire   [31:0] tmp_216_fu_674_p4;
wire   [31:0] or_ln125_60_fu_689_p4;
wire   [31:0] tmp_218_fu_703_p4;
wire   [31:0] or_ln125_61_fu_718_p4;
wire   [31:0] tmp_220_fu_732_p4;
wire   [31:0] or_ln125_62_fu_747_p4;
wire   [31:0] tmp_222_fu_761_p4;
wire   [255:0] cPrev_2_fu_776_p3;
wire   [0:0] inBounds_fu_889_p2;
wire   [31:0] grp_fu_285_p2;
wire   [0:0] inBounds_106_fu_900_p2;
wire   [31:0] grp_fu_289_p2;
wire   [0:0] inBounds_107_fu_911_p2;
wire   [31:0] grp_fu_293_p2;
wire   [0:0] inBounds_108_fu_922_p2;
wire   [31:0] grp_fu_297_p2;
wire   [0:0] inBounds_109_fu_933_p2;
wire   [31:0] grp_fu_301_p2;
wire   [0:0] inBounds_110_fu_944_p2;
wire   [31:0] grp_fu_305_p2;
wire   [0:0] inBounds_111_fu_955_p2;
wire   [31:0] grp_fu_309_p2;
wire   [0:0] inBounds_112_fu_966_p2;
wire   [31:0] grp_fu_313_p2;
wire   [31:0] bitcast_ln36_98_fu_998_p1;
wire   [31:0] bitcast_ln36_97_fu_995_p1;
wire   [31:0] bitcast_ln36_96_fu_992_p1;
wire   [31:0] bitcast_ln36_95_fu_989_p1;
wire   [31:0] bitcast_ln36_94_fu_986_p1;
wire   [31:0] bitcast_ln36_93_fu_983_p1;
wire   [31:0] bitcast_ln36_92_fu_980_p1;
wire   [31:0] bitcast_ln36_fu_977_p1;
reg    grp_fu_285_ce;
reg    grp_fu_289_ce;
reg    grp_fu_293_ce;
reg    grp_fu_297_ce;
reg    grp_fu_301_ce;
reg    grp_fu_305_ce;
reg    grp_fu_309_ce;
reg    grp_fu_313_ce;
reg    grp_fu_317_ce;
reg    grp_fu_321_ce;
reg    grp_fu_325_ce;
reg    grp_fu_329_ce;
reg    grp_fu_333_ce;
reg    grp_fu_337_ce;
reg    grp_fu_341_ce;
reg    grp_fu_345_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op65_store_state2;
reg    ap_enable_operation_65;
reg    ap_enable_state2_pp0_iter1_stage0;
wire    ap_enable_operation_70;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_operation_76;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 m1_fu_154 = 7'd0;
#0 n1_fu_158 = 5'd0;
#0 indvar_flatten6_fu_162 = 11'd0;
#0 ap_done_reg = 1'b0;
end

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1331(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(res_361_reg_1240),
    .ce(grp_fu_285_ce),
    .dout(grp_fu_285_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1332(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_289_p0),
    .din1(res_362_reg_1250),
    .ce(grp_fu_289_ce),
    .dout(grp_fu_289_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1333(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_293_p0),
    .din1(res_363_reg_1260),
    .ce(grp_fu_293_ce),
    .dout(grp_fu_293_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1334(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(res_364_reg_1270),
    .ce(grp_fu_297_ce),
    .dout(grp_fu_297_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1335(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_301_p0),
    .din1(res_365_reg_1280),
    .ce(grp_fu_301_ce),
    .dout(grp_fu_301_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1336(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_305_p0),
    .din1(res_366_reg_1290),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1337(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_309_p0),
    .din1(res_367_reg_1300),
    .ce(grp_fu_309_ce),
    .dout(grp_fu_309_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U1338(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_313_p0),
    .din1(res_368_reg_1310),
    .ce(grp_fu_313_ce),
    .dout(grp_fu_313_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1339(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_552_p1),
    .din1(grp_fu_317_p1),
    .ce(grp_fu_317_ce),
    .dout(grp_fu_317_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1340(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_552_p1),
    .din1(grp_fu_321_p1),
    .ce(grp_fu_321_ce),
    .dout(grp_fu_321_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1341(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_552_p1),
    .din1(grp_fu_325_p1),
    .ce(grp_fu_325_ce),
    .dout(grp_fu_325_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1342(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_552_p1),
    .din1(grp_fu_329_p1),
    .ce(grp_fu_329_ce),
    .dout(grp_fu_329_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1343(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_552_p1),
    .din1(grp_fu_333_p1),
    .ce(grp_fu_333_ce),
    .dout(grp_fu_333_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1344(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_552_p1),
    .din1(grp_fu_337_p1),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1345(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_552_p1),
    .din1(grp_fu_341_p1),
    .ce(grp_fu_341_ce),
    .dout(grp_fu_341_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U1346(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_552_p1),
    .din1(grp_fu_345_p1),
    .ce(grp_fu_345_ce),
    .dout(grp_fu_345_p2)
);

MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_367_p2 == 1'd0))) begin
            indvar_flatten6_fu_162 <= add_ln64_fu_373_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_162 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_367_p2 == 1'd0))) begin
            m1_fu_154 <= add_ln67_fu_436_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m1_fu_154 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            n1_fu_158 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            n1_fu_158 <= select_ln64_14_fu_461_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add91_reg_1115 <= add91_fu_472_p2;
        and_ln80_14_reg_1107 <= and_ln80_14_fu_424_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_226_reg_1120 <= empty_226_fu_486_p1;
        icmp_ln67_reg_1096 <= icmp_ln67_fu_382_p2;
        icmp_ln85_reg_1111 <= icmp_ln85_fu_430_p2;
        inBoundsN_reg_1125 <= inBoundsN_fu_500_p2;
        select_ln64_reg_1101 <= select_ln64_fu_388_p3;
        select_ln64_reg_1101_pp0_iter1_reg <= select_ln64_reg_1101;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        bitcast_ln32_210_reg_1320 <= bitcast_ln32_210_fu_857_p1;
        bitcast_ln32_210_reg_1320_pp0_iter6_reg <= bitcast_ln32_210_reg_1320;
        bitcast_ln32_212_reg_1326 <= bitcast_ln32_212_fu_861_p1;
        bitcast_ln32_212_reg_1326_pp0_iter6_reg <= bitcast_ln32_212_reg_1326;
        bitcast_ln32_214_reg_1332 <= bitcast_ln32_214_fu_865_p1;
        bitcast_ln32_214_reg_1332_pp0_iter6_reg <= bitcast_ln32_214_reg_1332;
        bitcast_ln32_216_reg_1338 <= bitcast_ln32_216_fu_869_p1;
        bitcast_ln32_216_reg_1338_pp0_iter6_reg <= bitcast_ln32_216_reg_1338;
        bitcast_ln32_218_reg_1344 <= bitcast_ln32_218_fu_873_p1;
        bitcast_ln32_218_reg_1344_pp0_iter6_reg <= bitcast_ln32_218_reg_1344;
        bitcast_ln32_220_reg_1350 <= bitcast_ln32_220_fu_877_p1;
        bitcast_ln32_220_reg_1350_pp0_iter6_reg <= bitcast_ln32_220_reg_1350;
        bitcast_ln32_222_reg_1356 <= bitcast_ln32_222_fu_881_p1;
        bitcast_ln32_222_reg_1356_pp0_iter6_reg <= bitcast_ln32_222_reg_1356;
        bitcast_ln32_224_reg_1362 <= bitcast_ln32_224_fu_885_p1;
        bitcast_ln32_224_reg_1362_pp0_iter6_reg <= bitcast_ln32_224_reg_1362;
        cBuffer_addr_reg_1142 <= add115_cast_fu_530_p1;
        cBuffer_addr_reg_1142_pp0_iter4_reg <= cBuffer_addr_reg_1142;
        cBuffer_addr_reg_1142_pp0_iter5_reg <= cBuffer_addr_reg_1142_pp0_iter4_reg;
        cBuffer_addr_reg_1142_pp0_iter6_reg <= cBuffer_addr_reg_1142_pp0_iter5_reg;
        cBuffer_addr_reg_1142_pp0_iter7_reg <= cBuffer_addr_reg_1142_pp0_iter6_reg;
        empty_226_reg_1120_pp0_iter2_reg <= empty_226_reg_1120;
        inBoundsM_106_reg_1170 <= inBoundsM_106_fu_582_p2;
        inBoundsM_106_reg_1170_pp0_iter4_reg <= inBoundsM_106_reg_1170;
        inBoundsM_106_reg_1170_pp0_iter5_reg <= inBoundsM_106_reg_1170_pp0_iter4_reg;
        inBoundsM_106_reg_1170_pp0_iter6_reg <= inBoundsM_106_reg_1170_pp0_iter5_reg;
        inBoundsM_107_reg_1180 <= inBoundsM_107_fu_611_p2;
        inBoundsM_107_reg_1180_pp0_iter4_reg <= inBoundsM_107_reg_1180;
        inBoundsM_107_reg_1180_pp0_iter5_reg <= inBoundsM_107_reg_1180_pp0_iter4_reg;
        inBoundsM_107_reg_1180_pp0_iter6_reg <= inBoundsM_107_reg_1180_pp0_iter5_reg;
        inBoundsM_108_reg_1190 <= inBoundsM_108_fu_640_p2;
        inBoundsM_108_reg_1190_pp0_iter4_reg <= inBoundsM_108_reg_1190;
        inBoundsM_108_reg_1190_pp0_iter5_reg <= inBoundsM_108_reg_1190_pp0_iter4_reg;
        inBoundsM_108_reg_1190_pp0_iter6_reg <= inBoundsM_108_reg_1190_pp0_iter5_reg;
        inBoundsM_109_reg_1200 <= inBoundsM_109_fu_669_p2;
        inBoundsM_109_reg_1200_pp0_iter4_reg <= inBoundsM_109_reg_1200;
        inBoundsM_109_reg_1200_pp0_iter5_reg <= inBoundsM_109_reg_1200_pp0_iter4_reg;
        inBoundsM_109_reg_1200_pp0_iter6_reg <= inBoundsM_109_reg_1200_pp0_iter5_reg;
        inBoundsM_110_reg_1210 <= inBoundsM_110_fu_698_p2;
        inBoundsM_110_reg_1210_pp0_iter4_reg <= inBoundsM_110_reg_1210;
        inBoundsM_110_reg_1210_pp0_iter5_reg <= inBoundsM_110_reg_1210_pp0_iter4_reg;
        inBoundsM_110_reg_1210_pp0_iter6_reg <= inBoundsM_110_reg_1210_pp0_iter5_reg;
        inBoundsM_111_reg_1220 <= inBoundsM_111_fu_727_p2;
        inBoundsM_111_reg_1220_pp0_iter4_reg <= inBoundsM_111_reg_1220;
        inBoundsM_111_reg_1220_pp0_iter5_reg <= inBoundsM_111_reg_1220_pp0_iter4_reg;
        inBoundsM_111_reg_1220_pp0_iter6_reg <= inBoundsM_111_reg_1220_pp0_iter5_reg;
        inBoundsM_112_reg_1230 <= inBoundsM_112_fu_756_p2;
        inBoundsM_112_reg_1230_pp0_iter4_reg <= inBoundsM_112_reg_1230;
        inBoundsM_112_reg_1230_pp0_iter5_reg <= inBoundsM_112_reg_1230_pp0_iter4_reg;
        inBoundsM_112_reg_1230_pp0_iter6_reg <= inBoundsM_112_reg_1230_pp0_iter5_reg;
        inBoundsM_reg_1148 <= inBoundsM_fu_547_p2;
        inBoundsM_reg_1148_pp0_iter4_reg <= inBoundsM_reg_1148;
        inBoundsM_reg_1148_pp0_iter5_reg <= inBoundsM_reg_1148_pp0_iter4_reg;
        inBoundsM_reg_1148_pp0_iter6_reg <= inBoundsM_reg_1148_pp0_iter5_reg;
        inBoundsN_reg_1125_pp0_iter2_reg <= inBoundsN_reg_1125;
        inBoundsN_reg_1125_pp0_iter3_reg <= inBoundsN_reg_1125_pp0_iter2_reg;
        inBoundsN_reg_1125_pp0_iter4_reg <= inBoundsN_reg_1125_pp0_iter3_reg;
        inBoundsN_reg_1125_pp0_iter5_reg <= inBoundsN_reg_1125_pp0_iter4_reg;
        inBoundsN_reg_1125_pp0_iter6_reg <= inBoundsN_reg_1125_pp0_iter5_reg;
        res_361_reg_1240 <= grp_fu_317_p2;
        res_362_reg_1250 <= grp_fu_321_p2;
        res_363_reg_1260 <= grp_fu_325_p2;
        res_364_reg_1270 <= grp_fu_329_p2;
        res_365_reg_1280 <= grp_fu_333_p2;
        res_366_reg_1290 <= grp_fu_337_p2;
        res_367_reg_1300 <= grp_fu_341_p2;
        res_368_reg_1310 <= grp_fu_345_p2;
        select_ln296_92_reg_1373 <= select_ln296_92_fu_904_p3;
        select_ln296_93_reg_1378 <= select_ln296_93_fu_915_p3;
        select_ln296_94_reg_1383 <= select_ln296_94_fu_926_p3;
        select_ln296_95_reg_1388 <= select_ln296_95_fu_937_p3;
        select_ln296_96_reg_1393 <= select_ln296_96_fu_948_p3;
        select_ln296_97_reg_1398 <= select_ln296_97_fu_959_p3;
        select_ln296_98_reg_1403 <= select_ln296_98_fu_970_p3;
        select_ln296_reg_1368 <= select_ln296_fu_893_p3;
        select_ln64_reg_1101_pp0_iter2_reg <= select_ln64_reg_1101_pp0_iter1_reg;
        tmp_211_reg_1255 <= {{cPrev_2_fu_776_p3[63:32]}};
        tmp_213_reg_1265 <= {{cPrev_2_fu_776_p3[95:64]}};
        tmp_215_reg_1275 <= {{cPrev_2_fu_776_p3[127:96]}};
        tmp_217_reg_1285 <= {{cPrev_2_fu_776_p3[159:128]}};
        tmp_219_reg_1295 <= {{cPrev_2_fu_776_p3[191:160]}};
        tmp_221_reg_1305 <= {{cPrev_2_fu_776_p3[223:192]}};
        tmp_223_reg_1315 <= {{cPrev_2_fu_776_p3[255:224]}};
        trunc_ln170_16_reg_1245 <= trunc_ln170_16_fu_783_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce0_local = 1'b1;
    end else begin
        aBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce1_local = 1'b1;
    end else begin
        aBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_reg_1111 == 1'd1) & (1'd1 == and_ln80_14_reg_1107) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_we0_local = 1'b1;
    end else begin
        aBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_14_reg_1107) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_24_blk_n = aPipes_24_empty_n;
    end else begin
        aPipes_24_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_14_reg_1107) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_24_read_local = 1'b1;
    end else begin
        aPipes_24_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op63_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_25_blk_n = aPipes_25_full_n;
    end else begin
        aPipes_25_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op63_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_25_write_local = 1'b1;
    end else begin
        aPipes_25_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_367_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_162;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_m1_load = 7'd0;
    end else begin
        ap_sig_allocacmp_m1_load = m1_fu_154;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_24_blk_n = bPipes_24_empty_n;
    end else begin
        bPipes_24_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_24_read_local = 1'b1;
    end else begin
        bPipes_24_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_25_blk_n = bPipes_25_full_n;
    end else begin
        bPipes_25_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_25_write_local = 1'b1;
    end else begin
        bPipes_25_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce0_local = 1'b1;
    end else begin
        cBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce1_local = 1'b1;
    end else begin
        cBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_we0_local = 1'b1;
    end else begin
        cBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_285_ce = 1'b1;
    end else begin
        grp_fu_285_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_289_ce = 1'b1;
    end else begin
        grp_fu_289_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_293_ce = 1'b1;
    end else begin
        grp_fu_293_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_297_ce = 1'b1;
    end else begin
        grp_fu_297_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_301_ce = 1'b1;
    end else begin
        grp_fu_301_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_309_ce = 1'b1;
    end else begin
        grp_fu_309_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_313_ce = 1'b1;
    end else begin
        grp_fu_313_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_317_ce = 1'b1;
    end else begin
        grp_fu_317_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_321_ce = 1'b1;
    end else begin
        grp_fu_321_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_325_ce = 1'b1;
    end else begin
        grp_fu_325_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_329_ce = 1'b1;
    end else begin
        grp_fu_329_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_333_ce = 1'b1;
    end else begin
        grp_fu_333_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_341_ce = 1'b1;
    end else begin
        grp_fu_341_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_345_ce = 1'b1;
    end else begin
        grp_fu_345_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aBuffer_address0 = add_cast_fu_495_p1;

assign aBuffer_address1 = add91_cast_fu_510_p1;

assign aBuffer_ce0 = aBuffer_ce0_local;

assign aBuffer_ce1 = aBuffer_ce1_local;

assign aBuffer_d0 = aPipes_24_dout;

assign aBuffer_we0 = aBuffer_we0_local;

assign aPipes_24_read = aPipes_24_read_local;

assign aPipes_25_din = aPipes_24_dout;

assign aPipes_25_write = aPipes_25_write_local;

assign add106_cast_fu_482_p1 = add106_fu_477_p2;

assign add106_fu_477_p2 = (mul + zext_ln64_fu_468_p1);

assign add115_cast_fu_530_p1 = add115_fu_524_p2;

assign add115_fu_524_p2 = (mul8_fu_514_p3 + zext_ln67_fu_521_p1);

assign add5_fu_538_p4 = {{{m0}, {empty_fu_535_p1}}, {3'd0}};

assign add91_cast_fu_510_p1 = add91_reg_1115;

assign add91_fu_472_p2 = (select_ln64_14_fu_461_p3 + cond90);

assign add_cast_fu_495_p1 = add_fu_490_p2;

assign add_fu_490_p2 = (select_ln64_14_fu_461_p3 + cond);

assign add_ln64_14_fu_455_p2 = (n1_fu_158 + 5'd1);

assign add_ln64_fu_373_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 11'd1);

assign add_ln67_fu_436_p2 = (select_ln64_fu_388_p3 + 7'd1);

assign and_ln80_14_fu_424_p2 = (icmp_ln83_fu_412_p2 & and_ln80_fu_418_p2);

assign and_ln80_fu_418_p2 = (icmp_ln82_fu_396_p2 & brmerge282);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op63_write_state2 == 1'b1) & (1'b0 == aPipes_25_full_n)) | ((1'd1 == and_ln80_14_reg_1107) & (1'b0 == aPipes_24_empty_n)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((bPipes_25_full_n == 1'b0) | (bPipes_24_empty_n == 1'b0));
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_65 = (ap_predicate_op65_store_state2 == 1'b1);
end

assign ap_enable_operation_70 = (1'b1 == 1'b1);

assign ap_enable_operation_76 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op63_write_state2 = ((icmp_ln85_reg_1111 == 1'd0) & (1'd1 == and_ln80_14_reg_1107));
end

always @ (*) begin
    ap_predicate_op65_store_state2 = ((icmp_ln85_reg_1111 == 1'd1) & (1'd1 == and_ln80_14_reg_1107));
end

assign ap_ready = ap_ready_sig;

assign bPipes_24_read = bPipes_24_read_local;

assign bPipes_25_din = bPipes_24_dout;

assign bPipes_25_write = bPipes_25_write_local;

assign bitcast_ln32_210_fu_857_p1 = trunc_ln170_16_reg_1245;

assign bitcast_ln32_212_fu_861_p1 = tmp_211_reg_1255;

assign bitcast_ln32_214_fu_865_p1 = tmp_213_reg_1265;

assign bitcast_ln32_216_fu_869_p1 = tmp_215_reg_1275;

assign bitcast_ln32_218_fu_873_p1 = tmp_217_reg_1285;

assign bitcast_ln32_220_fu_877_p1 = tmp_219_reg_1295;

assign bitcast_ln32_222_fu_881_p1 = tmp_221_reg_1305;

assign bitcast_ln32_224_fu_885_p1 = tmp_223_reg_1315;

assign bitcast_ln32_fu_552_p1 = aBuffer_q1;

assign bitcast_ln36_92_fu_980_p1 = select_ln296_92_reg_1373;

assign bitcast_ln36_93_fu_983_p1 = select_ln296_93_reg_1378;

assign bitcast_ln36_94_fu_986_p1 = select_ln296_94_reg_1383;

assign bitcast_ln36_95_fu_989_p1 = select_ln296_95_reg_1388;

assign bitcast_ln36_96_fu_992_p1 = select_ln296_96_reg_1393;

assign bitcast_ln36_97_fu_995_p1 = select_ln296_97_reg_1398;

assign bitcast_ln36_98_fu_998_p1 = select_ln296_98_reg_1403;

assign bitcast_ln36_fu_977_p1 = select_ln296_reg_1368;

assign cBuffer_address0 = cBuffer_addr_reg_1142_pp0_iter7_reg;

assign cBuffer_address1 = add115_cast_fu_530_p1;

assign cBuffer_ce0 = cBuffer_ce0_local;

assign cBuffer_ce1 = cBuffer_ce1_local;

assign cBuffer_d0 = tmp_224_fu_1001_p9;

assign cBuffer_we0 = cBuffer_we0_local;

assign cPrev_2_fu_776_p3 = ((cmp111[0:0] == 1'b1) ? 256'd0 : cBuffer_q1);

assign empty_226_fu_486_p1 = select_ln64_14_fu_461_p3[3:0];

assign empty_fu_535_p1 = select_ln64_reg_1101_pp0_iter2_reg[5:0];

assign grp_fu_285_p0 = trunc_ln170_16_reg_1245;

assign grp_fu_289_p0 = tmp_211_reg_1255;

assign grp_fu_293_p0 = tmp_213_reg_1265;

assign grp_fu_297_p0 = tmp_215_reg_1275;

assign grp_fu_301_p0 = tmp_217_reg_1285;

assign grp_fu_305_p0 = tmp_219_reg_1295;

assign grp_fu_309_p0 = tmp_221_reg_1305;

assign grp_fu_313_p0 = tmp_223_reg_1315;

assign grp_fu_317_p1 = trunc_ln170_fu_564_p1;

assign grp_fu_321_p1 = tmp_s_fu_587_p4;

assign grp_fu_325_p1 = tmp_212_fu_616_p4;

assign grp_fu_329_p1 = tmp_214_fu_645_p4;

assign grp_fu_333_p1 = tmp_216_fu_674_p4;

assign grp_fu_337_p1 = tmp_218_fu_703_p4;

assign grp_fu_341_p1 = tmp_220_fu_732_p4;

assign grp_fu_345_p1 = tmp_222_fu_761_p4;

assign icmp_ln64_fu_367_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_382_p2 = ((ap_sig_allocacmp_m1_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_396_p2 = ((select_ln64_fu_388_p3 > 7'd23) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_412_p2 = ((tmp_fu_402_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_430_p2 = ((select_ln64_fu_388_p3 == 7'd24) ? 1'b1 : 1'b0);

assign inBoundsM_106_fu_582_p2 = ((or_ln_fu_573_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_107_fu_611_p2 = ((or_ln125_s_fu_602_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_108_fu_640_p2 = ((or_ln125_58_fu_631_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_109_fu_669_p2 = ((or_ln125_59_fu_660_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_110_fu_698_p2 = ((or_ln125_60_fu_689_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_111_fu_727_p2 = ((or_ln125_61_fu_718_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_112_fu_756_p2 = ((or_ln125_62_fu_747_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_fu_547_p2 = ((add5_fu_538_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsN_fu_500_p2 = ((add106_cast_fu_482_p1 < size_n) ? 1'b1 : 1'b0);

assign inBounds_106_fu_900_p2 = (inBoundsN_reg_1125_pp0_iter6_reg & inBoundsM_106_reg_1170_pp0_iter6_reg);

assign inBounds_107_fu_911_p2 = (inBoundsN_reg_1125_pp0_iter6_reg & inBoundsM_107_reg_1180_pp0_iter6_reg);

assign inBounds_108_fu_922_p2 = (inBoundsN_reg_1125_pp0_iter6_reg & inBoundsM_108_reg_1190_pp0_iter6_reg);

assign inBounds_109_fu_933_p2 = (inBoundsN_reg_1125_pp0_iter6_reg & inBoundsM_109_reg_1200_pp0_iter6_reg);

assign inBounds_110_fu_944_p2 = (inBoundsN_reg_1125_pp0_iter6_reg & inBoundsM_110_reg_1210_pp0_iter6_reg);

assign inBounds_111_fu_955_p2 = (inBoundsN_reg_1125_pp0_iter6_reg & inBoundsM_111_reg_1220_pp0_iter6_reg);

assign inBounds_112_fu_966_p2 = (inBoundsN_reg_1125_pp0_iter6_reg & inBoundsM_112_reg_1230_pp0_iter6_reg);

assign inBounds_fu_889_p2 = (inBoundsN_reg_1125_pp0_iter6_reg & inBoundsM_reg_1148_pp0_iter6_reg);

assign mul8_fu_514_p3 = {{empty_226_reg_1120_pp0_iter2_reg}, {6'd0}};

assign or_ln125_58_fu_631_p4 = {{{m0}, {empty_fu_535_p1}}, {3'd3}};

assign or_ln125_59_fu_660_p4 = {{{m0}, {empty_fu_535_p1}}, {3'd4}};

assign or_ln125_60_fu_689_p4 = {{{m0}, {empty_fu_535_p1}}, {3'd5}};

assign or_ln125_61_fu_718_p4 = {{{m0}, {empty_fu_535_p1}}, {3'd6}};

assign or_ln125_62_fu_747_p4 = {{{m0}, {empty_fu_535_p1}}, {3'd7}};

assign or_ln125_s_fu_602_p4 = {{{m0}, {empty_fu_535_p1}}, {3'd2}};

assign or_ln_fu_573_p4 = {{{m0}, {empty_fu_535_p1}}, {3'd1}};

assign select_ln296_92_fu_904_p3 = ((inBounds_106_fu_900_p2[0:0] == 1'b1) ? grp_fu_289_p2 : bitcast_ln32_212_reg_1326_pp0_iter6_reg);

assign select_ln296_93_fu_915_p3 = ((inBounds_107_fu_911_p2[0:0] == 1'b1) ? grp_fu_293_p2 : bitcast_ln32_214_reg_1332_pp0_iter6_reg);

assign select_ln296_94_fu_926_p3 = ((inBounds_108_fu_922_p2[0:0] == 1'b1) ? grp_fu_297_p2 : bitcast_ln32_216_reg_1338_pp0_iter6_reg);

assign select_ln296_95_fu_937_p3 = ((inBounds_109_fu_933_p2[0:0] == 1'b1) ? grp_fu_301_p2 : bitcast_ln32_218_reg_1344_pp0_iter6_reg);

assign select_ln296_96_fu_948_p3 = ((inBounds_110_fu_944_p2[0:0] == 1'b1) ? grp_fu_305_p2 : bitcast_ln32_220_reg_1350_pp0_iter6_reg);

assign select_ln296_97_fu_959_p3 = ((inBounds_111_fu_955_p2[0:0] == 1'b1) ? grp_fu_309_p2 : bitcast_ln32_222_reg_1356_pp0_iter6_reg);

assign select_ln296_98_fu_970_p3 = ((inBounds_112_fu_966_p2[0:0] == 1'b1) ? grp_fu_313_p2 : bitcast_ln32_224_reg_1362_pp0_iter6_reg);

assign select_ln296_fu_893_p3 = ((inBounds_fu_889_p2[0:0] == 1'b1) ? grp_fu_285_p2 : bitcast_ln32_210_reg_1320_pp0_iter6_reg);

assign select_ln64_14_fu_461_p3 = ((icmp_ln67_reg_1096[0:0] == 1'b1) ? add_ln64_14_fu_455_p2 : n1_fu_158);

assign select_ln64_fu_388_p3 = ((icmp_ln67_fu_382_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_m1_load);

assign tmp_212_fu_616_p4 = {{bPipes_24_dout[95:64]}};

assign tmp_214_fu_645_p4 = {{bPipes_24_dout[127:96]}};

assign tmp_216_fu_674_p4 = {{bPipes_24_dout[159:128]}};

assign tmp_218_fu_703_p4 = {{bPipes_24_dout[191:160]}};

assign tmp_220_fu_732_p4 = {{bPipes_24_dout[223:192]}};

assign tmp_222_fu_761_p4 = {{bPipes_24_dout[255:224]}};

assign tmp_224_fu_1001_p9 = {{{{{{{{bitcast_ln36_98_fu_998_p1}, {bitcast_ln36_97_fu_995_p1}}, {bitcast_ln36_96_fu_992_p1}}, {bitcast_ln36_95_fu_989_p1}}, {bitcast_ln36_94_fu_986_p1}}, {bitcast_ln36_93_fu_983_p1}}, {bitcast_ln36_92_fu_980_p1}}, {bitcast_ln36_fu_977_p1}};

assign tmp_fu_402_p4 = {{select_ln64_fu_388_p3[6:5]}};

assign tmp_s_fu_587_p4 = {{bPipes_24_dout[63:32]}};

assign trunc_ln170_16_fu_783_p1 = cPrev_2_fu_776_p3[31:0];

assign trunc_ln170_fu_564_p1 = bPipes_24_dout[31:0];

assign zext_ln64_fu_468_p1 = select_ln64_14_fu_461_p3;

assign zext_ln67_fu_521_p1 = select_ln64_reg_1101_pp0_iter2_reg;

endmodule //MatrixMultiplicationKernel_ProcessingElement_25_Pipeline_Pipeline_N_Pipeline_M
