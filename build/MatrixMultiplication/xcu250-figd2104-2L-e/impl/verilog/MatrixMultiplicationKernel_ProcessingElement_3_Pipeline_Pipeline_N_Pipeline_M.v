// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module MatrixMultiplicationKernel_ProcessingElement_3_Pipeline_Pipeline_N_Pipeline_M (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        aPipes_2_dout,
        aPipes_2_num_data_valid,
        aPipes_2_fifo_cap,
        aPipes_2_empty_n,
        aPipes_2_read,
        aPipes_3_din,
        aPipes_3_num_data_valid,
        aPipes_3_fifo_cap,
        aPipes_3_full_n,
        aPipes_3_write,
        bPipes_2_dout,
        bPipes_2_num_data_valid,
        bPipes_2_fifo_cap,
        bPipes_2_empty_n,
        bPipes_2_read,
        bPipes_3_din,
        bPipes_3_num_data_valid,
        bPipes_3_fifo_cap,
        bPipes_3_full_n,
        bPipes_3_write,
        m0,
        cBuffer_address0,
        cBuffer_ce0,
        cBuffer_we0,
        cBuffer_d0,
        cBuffer_address1,
        cBuffer_ce1,
        cBuffer_q1,
        cmp111,
        size_m,
        cond90,
        aBuffer_address0,
        aBuffer_ce0,
        aBuffer_we0,
        aBuffer_d0,
        aBuffer_address1,
        aBuffer_ce1,
        aBuffer_q1,
        mul,
        cond,
        size_n,
        brmerge282
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] aPipes_2_dout;
input  [2:0] aPipes_2_num_data_valid;
input  [2:0] aPipes_2_fifo_cap;
input   aPipes_2_empty_n;
output   aPipes_2_read;
output  [31:0] aPipes_3_din;
input  [2:0] aPipes_3_num_data_valid;
input  [2:0] aPipes_3_fifo_cap;
input   aPipes_3_full_n;
output   aPipes_3_write;
input  [255:0] bPipes_2_dout;
input  [2:0] bPipes_2_num_data_valid;
input  [2:0] bPipes_2_fifo_cap;
input   bPipes_2_empty_n;
output   bPipes_2_read;
output  [255:0] bPipes_3_din;
input  [2:0] bPipes_3_num_data_valid;
input  [2:0] bPipes_3_fifo_cap;
input   bPipes_3_full_n;
output   bPipes_3_write;
input  [22:0] m0;
output  [9:0] cBuffer_address0;
output   cBuffer_ce0;
output   cBuffer_we0;
output  [255:0] cBuffer_d0;
output  [9:0] cBuffer_address1;
output   cBuffer_ce1;
input  [255:0] cBuffer_q1;
input  [0:0] cmp111;
input  [31:0] size_m;
input  [4:0] cond90;
output  [4:0] aBuffer_address0;
output   aBuffer_ce0;
output   aBuffer_we0;
output  [31:0] aBuffer_d0;
output  [4:0] aBuffer_address1;
output   aBuffer_ce1;
input  [31:0] aBuffer_q1;
input  [26:0] mul;
input  [4:0] cond;
input  [31:0] size_n;
input  [0:0] brmerge282;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
reg   [0:0] and_ln80_7_reg_1117;
reg   [0:0] icmp_ln85_reg_1121;
reg    ap_predicate_op64_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln64_fu_367_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    bPipes_2_blk_n;
wire    ap_block_pp0_stage0;
reg    bPipes_3_blk_n;
reg    aPipes_2_blk_n;
reg    aPipes_3_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln67_fu_382_p2;
reg   [0:0] icmp_ln67_reg_1106;
wire   [6:0] select_ln64_fu_388_p3;
reg   [6:0] select_ln64_reg_1111;
reg   [6:0] select_ln64_reg_1111_pp0_iter1_reg;
reg   [6:0] select_ln64_reg_1111_pp0_iter2_reg;
wire   [0:0] and_ln80_7_fu_434_p2;
wire   [0:0] icmp_ln85_fu_440_p2;
wire   [4:0] add91_fu_482_p2;
reg   [4:0] add91_reg_1125;
wire   [3:0] empty_190_fu_496_p1;
reg   [3:0] empty_190_reg_1130;
reg   [3:0] empty_190_reg_1130_pp0_iter2_reg;
wire   [0:0] inBoundsN_fu_510_p2;
reg   [0:0] inBoundsN_reg_1135;
reg   [0:0] inBoundsN_reg_1135_pp0_iter2_reg;
reg   [0:0] inBoundsN_reg_1135_pp0_iter3_reg;
reg   [0:0] inBoundsN_reg_1135_pp0_iter4_reg;
reg   [0:0] inBoundsN_reg_1135_pp0_iter5_reg;
reg   [0:0] inBoundsN_reg_1135_pp0_iter6_reg;
reg   [9:0] cBuffer_addr_reg_1152;
reg   [9:0] cBuffer_addr_reg_1152_pp0_iter4_reg;
reg   [9:0] cBuffer_addr_reg_1152_pp0_iter5_reg;
reg   [9:0] cBuffer_addr_reg_1152_pp0_iter6_reg;
reg   [9:0] cBuffer_addr_reg_1152_pp0_iter7_reg;
wire   [0:0] inBoundsM_fu_557_p2;
reg   [0:0] inBoundsM_reg_1158;
reg   [0:0] inBoundsM_reg_1158_pp0_iter4_reg;
reg   [0:0] inBoundsM_reg_1158_pp0_iter5_reg;
reg   [0:0] inBoundsM_reg_1158_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_fu_562_p1;
wire   [0:0] inBoundsM_50_fu_592_p2;
reg   [0:0] inBoundsM_50_reg_1180;
reg   [0:0] inBoundsM_50_reg_1180_pp0_iter4_reg;
reg   [0:0] inBoundsM_50_reg_1180_pp0_iter5_reg;
reg   [0:0] inBoundsM_50_reg_1180_pp0_iter6_reg;
wire   [0:0] inBoundsM_51_fu_621_p2;
reg   [0:0] inBoundsM_51_reg_1190;
reg   [0:0] inBoundsM_51_reg_1190_pp0_iter4_reg;
reg   [0:0] inBoundsM_51_reg_1190_pp0_iter5_reg;
reg   [0:0] inBoundsM_51_reg_1190_pp0_iter6_reg;
wire   [0:0] inBoundsM_52_fu_650_p2;
reg   [0:0] inBoundsM_52_reg_1200;
reg   [0:0] inBoundsM_52_reg_1200_pp0_iter4_reg;
reg   [0:0] inBoundsM_52_reg_1200_pp0_iter5_reg;
reg   [0:0] inBoundsM_52_reg_1200_pp0_iter6_reg;
wire   [0:0] inBoundsM_53_fu_679_p2;
reg   [0:0] inBoundsM_53_reg_1210;
reg   [0:0] inBoundsM_53_reg_1210_pp0_iter4_reg;
reg   [0:0] inBoundsM_53_reg_1210_pp0_iter5_reg;
reg   [0:0] inBoundsM_53_reg_1210_pp0_iter6_reg;
wire   [0:0] inBoundsM_54_fu_708_p2;
reg   [0:0] inBoundsM_54_reg_1220;
reg   [0:0] inBoundsM_54_reg_1220_pp0_iter4_reg;
reg   [0:0] inBoundsM_54_reg_1220_pp0_iter5_reg;
reg   [0:0] inBoundsM_54_reg_1220_pp0_iter6_reg;
wire   [0:0] inBoundsM_55_fu_737_p2;
reg   [0:0] inBoundsM_55_reg_1230;
reg   [0:0] inBoundsM_55_reg_1230_pp0_iter4_reg;
reg   [0:0] inBoundsM_55_reg_1230_pp0_iter5_reg;
reg   [0:0] inBoundsM_55_reg_1230_pp0_iter6_reg;
wire   [0:0] inBoundsM_56_fu_766_p2;
reg   [0:0] inBoundsM_56_reg_1240;
reg   [0:0] inBoundsM_56_reg_1240_pp0_iter4_reg;
reg   [0:0] inBoundsM_56_reg_1240_pp0_iter5_reg;
reg   [0:0] inBoundsM_56_reg_1240_pp0_iter6_reg;
wire   [31:0] grp_fu_317_p2;
reg   [31:0] res_177_reg_1250;
wire   [31:0] trunc_ln170_8_fu_793_p1;
reg   [31:0] trunc_ln170_8_reg_1255;
wire   [31:0] grp_fu_321_p2;
reg   [31:0] res_178_reg_1260;
reg   [31:0] tmp_99_reg_1265;
wire   [31:0] grp_fu_325_p2;
reg   [31:0] res_179_reg_1270;
reg   [31:0] tmp_101_reg_1275;
wire   [31:0] grp_fu_329_p2;
reg   [31:0] res_180_reg_1280;
reg   [31:0] tmp_103_reg_1285;
wire   [31:0] grp_fu_333_p2;
reg   [31:0] res_181_reg_1290;
reg   [31:0] tmp_105_reg_1295;
wire   [31:0] grp_fu_337_p2;
reg   [31:0] res_182_reg_1300;
reg   [31:0] tmp_107_reg_1305;
wire   [31:0] grp_fu_341_p2;
reg   [31:0] res_183_reg_1310;
reg   [31:0] tmp_109_reg_1315;
wire   [31:0] grp_fu_345_p2;
reg   [31:0] res_184_reg_1320;
reg   [31:0] tmp_111_reg_1325;
wire   [31:0] bitcast_ln32_98_fu_867_p1;
reg   [31:0] bitcast_ln32_98_reg_1330;
reg   [31:0] bitcast_ln32_98_reg_1330_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_100_fu_871_p1;
reg   [31:0] bitcast_ln32_100_reg_1336;
reg   [31:0] bitcast_ln32_100_reg_1336_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_102_fu_875_p1;
reg   [31:0] bitcast_ln32_102_reg_1342;
reg   [31:0] bitcast_ln32_102_reg_1342_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_104_fu_879_p1;
reg   [31:0] bitcast_ln32_104_reg_1348;
reg   [31:0] bitcast_ln32_104_reg_1348_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_106_fu_883_p1;
reg   [31:0] bitcast_ln32_106_reg_1354;
reg   [31:0] bitcast_ln32_106_reg_1354_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_108_fu_887_p1;
reg   [31:0] bitcast_ln32_108_reg_1360;
reg   [31:0] bitcast_ln32_108_reg_1360_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_110_fu_891_p1;
reg   [31:0] bitcast_ln32_110_reg_1366;
reg   [31:0] bitcast_ln32_110_reg_1366_pp0_iter6_reg;
wire   [31:0] bitcast_ln32_112_fu_895_p1;
reg   [31:0] bitcast_ln32_112_reg_1372;
reg   [31:0] bitcast_ln32_112_reg_1372_pp0_iter6_reg;
wire   [31:0] select_ln296_fu_903_p3;
reg   [31:0] select_ln296_reg_1378;
wire   [31:0] select_ln296_43_fu_914_p3;
reg   [31:0] select_ln296_43_reg_1383;
wire   [31:0] select_ln296_44_fu_925_p3;
reg   [31:0] select_ln296_44_reg_1388;
wire   [31:0] select_ln296_45_fu_936_p3;
reg   [31:0] select_ln296_45_reg_1393;
wire   [31:0] select_ln296_46_fu_947_p3;
reg   [31:0] select_ln296_46_reg_1398;
wire   [31:0] select_ln296_47_fu_958_p3;
reg   [31:0] select_ln296_47_reg_1403;
wire   [31:0] select_ln296_48_fu_969_p3;
reg   [31:0] select_ln296_48_reg_1408;
wire   [31:0] select_ln296_49_fu_980_p3;
reg   [31:0] select_ln296_49_reg_1413;
wire   [63:0] add_cast_fu_505_p1;
wire   [63:0] add91_cast_fu_520_p1;
wire   [63:0] add115_cast_fu_540_p1;
reg   [6:0] m1_fu_154;
wire   [6:0] add_ln67_fu_446_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_m1_load;
reg   [4:0] n1_fu_158;
wire   [4:0] select_ln64_7_fu_471_p3;
reg   [10:0] indvar_flatten6_fu_162;
wire   [10:0] add_ln64_fu_373_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten6_load;
reg    aPipes_2_read_local;
reg    ap_block_pp0_stage0_01001;
reg    aPipes_3_write_local;
reg    bPipes_2_read_local;
reg    bPipes_3_write_local;
reg    aBuffer_we0_local;
reg    aBuffer_ce0_local;
reg    aBuffer_ce1_local;
reg    cBuffer_ce1_local;
reg    cBuffer_we0_local;
wire   [255:0] tmp_112_fu_1011_p9;
reg    cBuffer_ce0_local;
wire   [31:0] grp_fu_285_p0;
wire   [31:0] grp_fu_289_p0;
wire   [31:0] grp_fu_293_p0;
wire   [31:0] grp_fu_297_p0;
wire   [31:0] grp_fu_301_p0;
wire   [31:0] grp_fu_305_p0;
wire   [31:0] grp_fu_309_p0;
wire   [31:0] grp_fu_313_p0;
wire   [31:0] grp_fu_317_p1;
wire   [31:0] grp_fu_321_p1;
wire   [31:0] grp_fu_325_p1;
wire   [31:0] grp_fu_329_p1;
wire   [31:0] grp_fu_333_p1;
wire   [31:0] grp_fu_337_p1;
wire   [31:0] grp_fu_341_p1;
wire   [31:0] grp_fu_345_p1;
wire   [5:0] tmp_fu_396_p4;
wire   [1:0] tmp_11_fu_412_p4;
wire   [0:0] icmp_ln82_fu_406_p2;
wire   [0:0] and_ln80_fu_428_p2;
wire   [0:0] icmp_ln83_fu_422_p2;
wire   [4:0] add_ln64_7_fu_465_p2;
wire   [26:0] zext_ln64_fu_478_p1;
wire   [26:0] add106_fu_487_p2;
wire   [4:0] add_fu_500_p2;
wire   [31:0] add106_cast_fu_492_p1;
wire   [9:0] mul2_fu_524_p3;
wire   [9:0] zext_ln67_fu_531_p1;
wire   [9:0] add115_fu_534_p2;
wire   [5:0] empty_fu_545_p1;
wire   [31:0] add9_fu_548_p4;
wire   [31:0] trunc_ln170_fu_574_p1;
wire   [31:0] or_ln_fu_583_p4;
wire   [31:0] tmp_s_fu_597_p4;
wire   [31:0] or_ln125_s_fu_612_p4;
wire   [31:0] tmp_100_fu_626_p4;
wire   [31:0] or_ln125_21_fu_641_p4;
wire   [31:0] tmp_102_fu_655_p4;
wire   [31:0] or_ln125_22_fu_670_p4;
wire   [31:0] tmp_104_fu_684_p4;
wire   [31:0] or_ln125_23_fu_699_p4;
wire   [31:0] tmp_106_fu_713_p4;
wire   [31:0] or_ln125_24_fu_728_p4;
wire   [31:0] tmp_108_fu_742_p4;
wire   [31:0] or_ln125_25_fu_757_p4;
wire   [31:0] tmp_110_fu_771_p4;
wire   [255:0] cPrev_2_fu_786_p3;
wire   [0:0] inBounds_fu_899_p2;
wire   [31:0] grp_fu_285_p2;
wire   [0:0] inBounds_50_fu_910_p2;
wire   [31:0] grp_fu_289_p2;
wire   [0:0] inBounds_51_fu_921_p2;
wire   [31:0] grp_fu_293_p2;
wire   [0:0] inBounds_52_fu_932_p2;
wire   [31:0] grp_fu_297_p2;
wire   [0:0] inBounds_53_fu_943_p2;
wire   [31:0] grp_fu_301_p2;
wire   [0:0] inBounds_54_fu_954_p2;
wire   [31:0] grp_fu_305_p2;
wire   [0:0] inBounds_55_fu_965_p2;
wire   [31:0] grp_fu_309_p2;
wire   [0:0] inBounds_56_fu_976_p2;
wire   [31:0] grp_fu_313_p2;
wire   [31:0] bitcast_ln36_49_fu_1008_p1;
wire   [31:0] bitcast_ln36_48_fu_1005_p1;
wire   [31:0] bitcast_ln36_47_fu_1002_p1;
wire   [31:0] bitcast_ln36_46_fu_999_p1;
wire   [31:0] bitcast_ln36_45_fu_996_p1;
wire   [31:0] bitcast_ln36_44_fu_993_p1;
wire   [31:0] bitcast_ln36_43_fu_990_p1;
wire   [31:0] bitcast_ln36_fu_987_p1;
reg    grp_fu_285_ce;
reg    grp_fu_289_ce;
reg    grp_fu_293_ce;
reg    grp_fu_297_ce;
reg    grp_fu_301_ce;
reg    grp_fu_305_ce;
reg    grp_fu_309_ce;
reg    grp_fu_313_ce;
reg    grp_fu_317_ce;
reg    grp_fu_321_ce;
reg    grp_fu_325_ce;
reg    grp_fu_329_ce;
reg    grp_fu_333_ce;
reg    grp_fu_337_ce;
reg    grp_fu_341_ce;
reg    grp_fu_345_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op66_store_state2;
reg    ap_enable_operation_66;
reg    ap_enable_state2_pp0_iter1_stage0;
wire    ap_enable_operation_71;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_operation_77;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 m1_fu_154 = 7'd0;
#0 n1_fu_158 = 5'd0;
#0 indvar_flatten6_fu_162 = 11'd0;
#0 ap_done_reg = 1'b0;
end

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U253(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_285_p0),
    .din1(res_177_reg_1250),
    .ce(grp_fu_285_ce),
    .dout(grp_fu_285_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U254(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_289_p0),
    .din1(res_178_reg_1260),
    .ce(grp_fu_289_ce),
    .dout(grp_fu_289_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U255(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_293_p0),
    .din1(res_179_reg_1270),
    .ce(grp_fu_293_ce),
    .dout(grp_fu_293_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U256(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_297_p0),
    .din1(res_180_reg_1280),
    .ce(grp_fu_297_ce),
    .dout(grp_fu_297_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U257(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_301_p0),
    .din1(res_181_reg_1290),
    .ce(grp_fu_301_ce),
    .dout(grp_fu_301_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U258(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_305_p0),
    .din1(res_182_reg_1300),
    .ce(grp_fu_305_ce),
    .dout(grp_fu_305_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U259(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_309_p0),
    .din1(res_183_reg_1310),
    .ce(grp_fu_309_ce),
    .dout(grp_fu_309_p2)
);

MatrixMultiplicationKernel_fadd_32ns_32ns_32_3_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_3_full_dsp_1_U260(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_313_p0),
    .din1(res_184_reg_1320),
    .ce(grp_fu_313_ce),
    .dout(grp_fu_313_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U261(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_562_p1),
    .din1(grp_fu_317_p1),
    .ce(grp_fu_317_ce),
    .dout(grp_fu_317_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U262(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_562_p1),
    .din1(grp_fu_321_p1),
    .ce(grp_fu_321_ce),
    .dout(grp_fu_321_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U263(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_562_p1),
    .din1(grp_fu_325_p1),
    .ce(grp_fu_325_ce),
    .dout(grp_fu_325_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U264(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_562_p1),
    .din1(grp_fu_329_p1),
    .ce(grp_fu_329_ce),
    .dout(grp_fu_329_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U265(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_562_p1),
    .din1(grp_fu_333_p1),
    .ce(grp_fu_333_ce),
    .dout(grp_fu_333_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U266(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_562_p1),
    .din1(grp_fu_337_p1),
    .ce(grp_fu_337_ce),
    .dout(grp_fu_337_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U267(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_562_p1),
    .din1(grp_fu_341_p1),
    .ce(grp_fu_341_ce),
    .dout(grp_fu_341_p2)
);

MatrixMultiplicationKernel_fmul_32ns_32ns_32_2_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_2_max_dsp_1_U268(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(bitcast_ln32_fu_562_p1),
    .din1(grp_fu_345_p1),
    .ce(grp_fu_345_ce),
    .dout(grp_fu_345_p2)
);

MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_367_p2 == 1'd0))) begin
            indvar_flatten6_fu_162 <= add_ln64_fu_373_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten6_fu_162 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln64_fu_367_p2 == 1'd0))) begin
            m1_fu_154 <= add_ln67_fu_446_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            m1_fu_154 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((ap_loop_init == 1'b1)) begin
            n1_fu_158 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            n1_fu_158 <= select_ln64_7_fu_471_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add91_reg_1125 <= add91_fu_482_p2;
        and_ln80_7_reg_1117 <= and_ln80_7_fu_434_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_190_reg_1130 <= empty_190_fu_496_p1;
        icmp_ln67_reg_1106 <= icmp_ln67_fu_382_p2;
        icmp_ln85_reg_1121 <= icmp_ln85_fu_440_p2;
        inBoundsN_reg_1135 <= inBoundsN_fu_510_p2;
        select_ln64_reg_1111 <= select_ln64_fu_388_p3;
        select_ln64_reg_1111_pp0_iter1_reg <= select_ln64_reg_1111;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        bitcast_ln32_100_reg_1336 <= bitcast_ln32_100_fu_871_p1;
        bitcast_ln32_100_reg_1336_pp0_iter6_reg <= bitcast_ln32_100_reg_1336;
        bitcast_ln32_102_reg_1342 <= bitcast_ln32_102_fu_875_p1;
        bitcast_ln32_102_reg_1342_pp0_iter6_reg <= bitcast_ln32_102_reg_1342;
        bitcast_ln32_104_reg_1348 <= bitcast_ln32_104_fu_879_p1;
        bitcast_ln32_104_reg_1348_pp0_iter6_reg <= bitcast_ln32_104_reg_1348;
        bitcast_ln32_106_reg_1354 <= bitcast_ln32_106_fu_883_p1;
        bitcast_ln32_106_reg_1354_pp0_iter6_reg <= bitcast_ln32_106_reg_1354;
        bitcast_ln32_108_reg_1360 <= bitcast_ln32_108_fu_887_p1;
        bitcast_ln32_108_reg_1360_pp0_iter6_reg <= bitcast_ln32_108_reg_1360;
        bitcast_ln32_110_reg_1366 <= bitcast_ln32_110_fu_891_p1;
        bitcast_ln32_110_reg_1366_pp0_iter6_reg <= bitcast_ln32_110_reg_1366;
        bitcast_ln32_112_reg_1372 <= bitcast_ln32_112_fu_895_p1;
        bitcast_ln32_112_reg_1372_pp0_iter6_reg <= bitcast_ln32_112_reg_1372;
        bitcast_ln32_98_reg_1330 <= bitcast_ln32_98_fu_867_p1;
        bitcast_ln32_98_reg_1330_pp0_iter6_reg <= bitcast_ln32_98_reg_1330;
        cBuffer_addr_reg_1152 <= add115_cast_fu_540_p1;
        cBuffer_addr_reg_1152_pp0_iter4_reg <= cBuffer_addr_reg_1152;
        cBuffer_addr_reg_1152_pp0_iter5_reg <= cBuffer_addr_reg_1152_pp0_iter4_reg;
        cBuffer_addr_reg_1152_pp0_iter6_reg <= cBuffer_addr_reg_1152_pp0_iter5_reg;
        cBuffer_addr_reg_1152_pp0_iter7_reg <= cBuffer_addr_reg_1152_pp0_iter6_reg;
        empty_190_reg_1130_pp0_iter2_reg <= empty_190_reg_1130;
        inBoundsM_50_reg_1180 <= inBoundsM_50_fu_592_p2;
        inBoundsM_50_reg_1180_pp0_iter4_reg <= inBoundsM_50_reg_1180;
        inBoundsM_50_reg_1180_pp0_iter5_reg <= inBoundsM_50_reg_1180_pp0_iter4_reg;
        inBoundsM_50_reg_1180_pp0_iter6_reg <= inBoundsM_50_reg_1180_pp0_iter5_reg;
        inBoundsM_51_reg_1190 <= inBoundsM_51_fu_621_p2;
        inBoundsM_51_reg_1190_pp0_iter4_reg <= inBoundsM_51_reg_1190;
        inBoundsM_51_reg_1190_pp0_iter5_reg <= inBoundsM_51_reg_1190_pp0_iter4_reg;
        inBoundsM_51_reg_1190_pp0_iter6_reg <= inBoundsM_51_reg_1190_pp0_iter5_reg;
        inBoundsM_52_reg_1200 <= inBoundsM_52_fu_650_p2;
        inBoundsM_52_reg_1200_pp0_iter4_reg <= inBoundsM_52_reg_1200;
        inBoundsM_52_reg_1200_pp0_iter5_reg <= inBoundsM_52_reg_1200_pp0_iter4_reg;
        inBoundsM_52_reg_1200_pp0_iter6_reg <= inBoundsM_52_reg_1200_pp0_iter5_reg;
        inBoundsM_53_reg_1210 <= inBoundsM_53_fu_679_p2;
        inBoundsM_53_reg_1210_pp0_iter4_reg <= inBoundsM_53_reg_1210;
        inBoundsM_53_reg_1210_pp0_iter5_reg <= inBoundsM_53_reg_1210_pp0_iter4_reg;
        inBoundsM_53_reg_1210_pp0_iter6_reg <= inBoundsM_53_reg_1210_pp0_iter5_reg;
        inBoundsM_54_reg_1220 <= inBoundsM_54_fu_708_p2;
        inBoundsM_54_reg_1220_pp0_iter4_reg <= inBoundsM_54_reg_1220;
        inBoundsM_54_reg_1220_pp0_iter5_reg <= inBoundsM_54_reg_1220_pp0_iter4_reg;
        inBoundsM_54_reg_1220_pp0_iter6_reg <= inBoundsM_54_reg_1220_pp0_iter5_reg;
        inBoundsM_55_reg_1230 <= inBoundsM_55_fu_737_p2;
        inBoundsM_55_reg_1230_pp0_iter4_reg <= inBoundsM_55_reg_1230;
        inBoundsM_55_reg_1230_pp0_iter5_reg <= inBoundsM_55_reg_1230_pp0_iter4_reg;
        inBoundsM_55_reg_1230_pp0_iter6_reg <= inBoundsM_55_reg_1230_pp0_iter5_reg;
        inBoundsM_56_reg_1240 <= inBoundsM_56_fu_766_p2;
        inBoundsM_56_reg_1240_pp0_iter4_reg <= inBoundsM_56_reg_1240;
        inBoundsM_56_reg_1240_pp0_iter5_reg <= inBoundsM_56_reg_1240_pp0_iter4_reg;
        inBoundsM_56_reg_1240_pp0_iter6_reg <= inBoundsM_56_reg_1240_pp0_iter5_reg;
        inBoundsM_reg_1158 <= inBoundsM_fu_557_p2;
        inBoundsM_reg_1158_pp0_iter4_reg <= inBoundsM_reg_1158;
        inBoundsM_reg_1158_pp0_iter5_reg <= inBoundsM_reg_1158_pp0_iter4_reg;
        inBoundsM_reg_1158_pp0_iter6_reg <= inBoundsM_reg_1158_pp0_iter5_reg;
        inBoundsN_reg_1135_pp0_iter2_reg <= inBoundsN_reg_1135;
        inBoundsN_reg_1135_pp0_iter3_reg <= inBoundsN_reg_1135_pp0_iter2_reg;
        inBoundsN_reg_1135_pp0_iter4_reg <= inBoundsN_reg_1135_pp0_iter3_reg;
        inBoundsN_reg_1135_pp0_iter5_reg <= inBoundsN_reg_1135_pp0_iter4_reg;
        inBoundsN_reg_1135_pp0_iter6_reg <= inBoundsN_reg_1135_pp0_iter5_reg;
        res_177_reg_1250 <= grp_fu_317_p2;
        res_178_reg_1260 <= grp_fu_321_p2;
        res_179_reg_1270 <= grp_fu_325_p2;
        res_180_reg_1280 <= grp_fu_329_p2;
        res_181_reg_1290 <= grp_fu_333_p2;
        res_182_reg_1300 <= grp_fu_337_p2;
        res_183_reg_1310 <= grp_fu_341_p2;
        res_184_reg_1320 <= grp_fu_345_p2;
        select_ln296_43_reg_1383 <= select_ln296_43_fu_914_p3;
        select_ln296_44_reg_1388 <= select_ln296_44_fu_925_p3;
        select_ln296_45_reg_1393 <= select_ln296_45_fu_936_p3;
        select_ln296_46_reg_1398 <= select_ln296_46_fu_947_p3;
        select_ln296_47_reg_1403 <= select_ln296_47_fu_958_p3;
        select_ln296_48_reg_1408 <= select_ln296_48_fu_969_p3;
        select_ln296_49_reg_1413 <= select_ln296_49_fu_980_p3;
        select_ln296_reg_1378 <= select_ln296_fu_903_p3;
        select_ln64_reg_1111_pp0_iter2_reg <= select_ln64_reg_1111_pp0_iter1_reg;
        tmp_101_reg_1275 <= {{cPrev_2_fu_786_p3[95:64]}};
        tmp_103_reg_1285 <= {{cPrev_2_fu_786_p3[127:96]}};
        tmp_105_reg_1295 <= {{cPrev_2_fu_786_p3[159:128]}};
        tmp_107_reg_1305 <= {{cPrev_2_fu_786_p3[191:160]}};
        tmp_109_reg_1315 <= {{cPrev_2_fu_786_p3[223:192]}};
        tmp_111_reg_1325 <= {{cPrev_2_fu_786_p3[255:224]}};
        tmp_99_reg_1265 <= {{cPrev_2_fu_786_p3[63:32]}};
        trunc_ln170_8_reg_1255 <= trunc_ln170_8_fu_793_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce0_local = 1'b1;
    end else begin
        aBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_ce1_local = 1'b1;
    end else begin
        aBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln85_reg_1121 == 1'd1) & (1'd1 == and_ln80_7_reg_1117) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aBuffer_we0_local = 1'b1;
    end else begin
        aBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_7_reg_1117) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_2_blk_n = aPipes_2_empty_n;
    end else begin
        aPipes_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln80_7_reg_1117) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_2_read_local = 1'b1;
    end else begin
        aPipes_2_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op64_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        aPipes_3_blk_n = aPipes_3_full_n;
    end else begin
        aPipes_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op64_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        aPipes_3_write_local = 1'b1;
    end else begin
        aPipes_3_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln64_fu_367_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten6_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten6_load = indvar_flatten6_fu_162;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_m1_load = 7'd0;
    end else begin
        ap_sig_allocacmp_m1_load = m1_fu_154;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_2_blk_n = bPipes_2_empty_n;
    end else begin
        bPipes_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_2_read_local = 1'b1;
    end else begin
        bPipes_2_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        bPipes_3_blk_n = bPipes_3_full_n;
    end else begin
        bPipes_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        bPipes_3_write_local = 1'b1;
    end else begin
        bPipes_3_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce0_local = 1'b1;
    end else begin
        cBuffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_ce1_local = 1'b1;
    end else begin
        cBuffer_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cBuffer_we0_local = 1'b1;
    end else begin
        cBuffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_285_ce = 1'b1;
    end else begin
        grp_fu_285_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_289_ce = 1'b1;
    end else begin
        grp_fu_289_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_293_ce = 1'b1;
    end else begin
        grp_fu_293_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_297_ce = 1'b1;
    end else begin
        grp_fu_297_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_301_ce = 1'b1;
    end else begin
        grp_fu_301_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_309_ce = 1'b1;
    end else begin
        grp_fu_309_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_313_ce = 1'b1;
    end else begin
        grp_fu_313_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_317_ce = 1'b1;
    end else begin
        grp_fu_317_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_321_ce = 1'b1;
    end else begin
        grp_fu_321_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_325_ce = 1'b1;
    end else begin
        grp_fu_325_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_329_ce = 1'b1;
    end else begin
        grp_fu_329_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_333_ce = 1'b1;
    end else begin
        grp_fu_333_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_337_ce = 1'b1;
    end else begin
        grp_fu_337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_341_ce = 1'b1;
    end else begin
        grp_fu_341_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_345_ce = 1'b1;
    end else begin
        grp_fu_345_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aBuffer_address0 = add_cast_fu_505_p1;

assign aBuffer_address1 = add91_cast_fu_520_p1;

assign aBuffer_ce0 = aBuffer_ce0_local;

assign aBuffer_ce1 = aBuffer_ce1_local;

assign aBuffer_d0 = aPipes_2_dout;

assign aBuffer_we0 = aBuffer_we0_local;

assign aPipes_2_read = aPipes_2_read_local;

assign aPipes_3_din = aPipes_2_dout;

assign aPipes_3_write = aPipes_3_write_local;

assign add106_cast_fu_492_p1 = add106_fu_487_p2;

assign add106_fu_487_p2 = (mul + zext_ln64_fu_478_p1);

assign add115_cast_fu_540_p1 = add115_fu_534_p2;

assign add115_fu_534_p2 = (mul2_fu_524_p3 + zext_ln67_fu_531_p1);

assign add91_cast_fu_520_p1 = add91_reg_1125;

assign add91_fu_482_p2 = (select_ln64_7_fu_471_p3 + cond90);

assign add9_fu_548_p4 = {{{m0}, {empty_fu_545_p1}}, {3'd0}};

assign add_cast_fu_505_p1 = add_fu_500_p2;

assign add_fu_500_p2 = (select_ln64_7_fu_471_p3 + cond);

assign add_ln64_7_fu_465_p2 = (n1_fu_158 + 5'd1);

assign add_ln64_fu_373_p2 = (ap_sig_allocacmp_indvar_flatten6_load + 11'd1);

assign add_ln67_fu_446_p2 = (select_ln64_fu_388_p3 + 7'd1);

assign and_ln80_7_fu_434_p2 = (icmp_ln83_fu_422_p2 & and_ln80_fu_428_p2);

assign and_ln80_fu_428_p2 = (icmp_ln82_fu_406_p2 & brmerge282);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage0_iter3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op64_write_state2 == 1'b1) & (1'b0 == aPipes_3_full_n)) | ((1'd1 == and_ln80_7_reg_1117) & (1'b0 == aPipes_2_empty_n)));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((bPipes_3_full_n == 1'b0) | (bPipes_2_empty_n == 1'b0));
end

assign ap_done = ap_done_sig;

always @ (*) begin
    ap_enable_operation_66 = (ap_predicate_op66_store_state2 == 1'b1);
end

assign ap_enable_operation_71 = (1'b1 == 1'b1);

assign ap_enable_operation_77 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op64_write_state2 = ((icmp_ln85_reg_1121 == 1'd0) & (1'd1 == and_ln80_7_reg_1117));
end

always @ (*) begin
    ap_predicate_op66_store_state2 = ((icmp_ln85_reg_1121 == 1'd1) & (1'd1 == and_ln80_7_reg_1117));
end

assign ap_ready = ap_ready_sig;

assign bPipes_2_read = bPipes_2_read_local;

assign bPipes_3_din = bPipes_2_dout;

assign bPipes_3_write = bPipes_3_write_local;

assign bitcast_ln32_100_fu_871_p1 = tmp_99_reg_1265;

assign bitcast_ln32_102_fu_875_p1 = tmp_101_reg_1275;

assign bitcast_ln32_104_fu_879_p1 = tmp_103_reg_1285;

assign bitcast_ln32_106_fu_883_p1 = tmp_105_reg_1295;

assign bitcast_ln32_108_fu_887_p1 = tmp_107_reg_1305;

assign bitcast_ln32_110_fu_891_p1 = tmp_109_reg_1315;

assign bitcast_ln32_112_fu_895_p1 = tmp_111_reg_1325;

assign bitcast_ln32_98_fu_867_p1 = trunc_ln170_8_reg_1255;

assign bitcast_ln32_fu_562_p1 = aBuffer_q1;

assign bitcast_ln36_43_fu_990_p1 = select_ln296_43_reg_1383;

assign bitcast_ln36_44_fu_993_p1 = select_ln296_44_reg_1388;

assign bitcast_ln36_45_fu_996_p1 = select_ln296_45_reg_1393;

assign bitcast_ln36_46_fu_999_p1 = select_ln296_46_reg_1398;

assign bitcast_ln36_47_fu_1002_p1 = select_ln296_47_reg_1403;

assign bitcast_ln36_48_fu_1005_p1 = select_ln296_48_reg_1408;

assign bitcast_ln36_49_fu_1008_p1 = select_ln296_49_reg_1413;

assign bitcast_ln36_fu_987_p1 = select_ln296_reg_1378;

assign cBuffer_address0 = cBuffer_addr_reg_1152_pp0_iter7_reg;

assign cBuffer_address1 = add115_cast_fu_540_p1;

assign cBuffer_ce0 = cBuffer_ce0_local;

assign cBuffer_ce1 = cBuffer_ce1_local;

assign cBuffer_d0 = tmp_112_fu_1011_p9;

assign cBuffer_we0 = cBuffer_we0_local;

assign cPrev_2_fu_786_p3 = ((cmp111[0:0] == 1'b1) ? 256'd0 : cBuffer_q1);

assign empty_190_fu_496_p1 = select_ln64_7_fu_471_p3[3:0];

assign empty_fu_545_p1 = select_ln64_reg_1111_pp0_iter2_reg[5:0];

assign grp_fu_285_p0 = trunc_ln170_8_reg_1255;

assign grp_fu_289_p0 = tmp_99_reg_1265;

assign grp_fu_293_p0 = tmp_101_reg_1275;

assign grp_fu_297_p0 = tmp_103_reg_1285;

assign grp_fu_301_p0 = tmp_105_reg_1295;

assign grp_fu_305_p0 = tmp_107_reg_1305;

assign grp_fu_309_p0 = tmp_109_reg_1315;

assign grp_fu_313_p0 = tmp_111_reg_1325;

assign grp_fu_317_p1 = trunc_ln170_fu_574_p1;

assign grp_fu_321_p1 = tmp_s_fu_597_p4;

assign grp_fu_325_p1 = tmp_100_fu_626_p4;

assign grp_fu_329_p1 = tmp_102_fu_655_p4;

assign grp_fu_333_p1 = tmp_104_fu_684_p4;

assign grp_fu_337_p1 = tmp_106_fu_713_p4;

assign grp_fu_341_p1 = tmp_108_fu_742_p4;

assign grp_fu_345_p1 = tmp_110_fu_771_p4;

assign icmp_ln64_fu_367_p2 = ((ap_sig_allocacmp_indvar_flatten6_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_382_p2 = ((ap_sig_allocacmp_m1_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_406_p2 = ((tmp_fu_396_p4 != 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_422_p2 = ((tmp_11_fu_412_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_440_p2 = ((select_ln64_fu_388_p3 == 7'd2) ? 1'b1 : 1'b0);

assign inBoundsM_50_fu_592_p2 = ((or_ln_fu_583_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_51_fu_621_p2 = ((or_ln125_s_fu_612_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_52_fu_650_p2 = ((or_ln125_21_fu_641_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_53_fu_679_p2 = ((or_ln125_22_fu_670_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_54_fu_708_p2 = ((or_ln125_23_fu_699_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_55_fu_737_p2 = ((or_ln125_24_fu_728_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_56_fu_766_p2 = ((or_ln125_25_fu_757_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsM_fu_557_p2 = ((add9_fu_548_p4 < size_m) ? 1'b1 : 1'b0);

assign inBoundsN_fu_510_p2 = ((add106_cast_fu_492_p1 < size_n) ? 1'b1 : 1'b0);

assign inBounds_50_fu_910_p2 = (inBoundsN_reg_1135_pp0_iter6_reg & inBoundsM_50_reg_1180_pp0_iter6_reg);

assign inBounds_51_fu_921_p2 = (inBoundsN_reg_1135_pp0_iter6_reg & inBoundsM_51_reg_1190_pp0_iter6_reg);

assign inBounds_52_fu_932_p2 = (inBoundsN_reg_1135_pp0_iter6_reg & inBoundsM_52_reg_1200_pp0_iter6_reg);

assign inBounds_53_fu_943_p2 = (inBoundsN_reg_1135_pp0_iter6_reg & inBoundsM_53_reg_1210_pp0_iter6_reg);

assign inBounds_54_fu_954_p2 = (inBoundsN_reg_1135_pp0_iter6_reg & inBoundsM_54_reg_1220_pp0_iter6_reg);

assign inBounds_55_fu_965_p2 = (inBoundsN_reg_1135_pp0_iter6_reg & inBoundsM_55_reg_1230_pp0_iter6_reg);

assign inBounds_56_fu_976_p2 = (inBoundsN_reg_1135_pp0_iter6_reg & inBoundsM_56_reg_1240_pp0_iter6_reg);

assign inBounds_fu_899_p2 = (inBoundsN_reg_1135_pp0_iter6_reg & inBoundsM_reg_1158_pp0_iter6_reg);

assign mul2_fu_524_p3 = {{empty_190_reg_1130_pp0_iter2_reg}, {6'd0}};

assign or_ln125_21_fu_641_p4 = {{{m0}, {empty_fu_545_p1}}, {3'd3}};

assign or_ln125_22_fu_670_p4 = {{{m0}, {empty_fu_545_p1}}, {3'd4}};

assign or_ln125_23_fu_699_p4 = {{{m0}, {empty_fu_545_p1}}, {3'd5}};

assign or_ln125_24_fu_728_p4 = {{{m0}, {empty_fu_545_p1}}, {3'd6}};

assign or_ln125_25_fu_757_p4 = {{{m0}, {empty_fu_545_p1}}, {3'd7}};

assign or_ln125_s_fu_612_p4 = {{{m0}, {empty_fu_545_p1}}, {3'd2}};

assign or_ln_fu_583_p4 = {{{m0}, {empty_fu_545_p1}}, {3'd1}};

assign select_ln296_43_fu_914_p3 = ((inBounds_50_fu_910_p2[0:0] == 1'b1) ? grp_fu_289_p2 : bitcast_ln32_100_reg_1336_pp0_iter6_reg);

assign select_ln296_44_fu_925_p3 = ((inBounds_51_fu_921_p2[0:0] == 1'b1) ? grp_fu_293_p2 : bitcast_ln32_102_reg_1342_pp0_iter6_reg);

assign select_ln296_45_fu_936_p3 = ((inBounds_52_fu_932_p2[0:0] == 1'b1) ? grp_fu_297_p2 : bitcast_ln32_104_reg_1348_pp0_iter6_reg);

assign select_ln296_46_fu_947_p3 = ((inBounds_53_fu_943_p2[0:0] == 1'b1) ? grp_fu_301_p2 : bitcast_ln32_106_reg_1354_pp0_iter6_reg);

assign select_ln296_47_fu_958_p3 = ((inBounds_54_fu_954_p2[0:0] == 1'b1) ? grp_fu_305_p2 : bitcast_ln32_108_reg_1360_pp0_iter6_reg);

assign select_ln296_48_fu_969_p3 = ((inBounds_55_fu_965_p2[0:0] == 1'b1) ? grp_fu_309_p2 : bitcast_ln32_110_reg_1366_pp0_iter6_reg);

assign select_ln296_49_fu_980_p3 = ((inBounds_56_fu_976_p2[0:0] == 1'b1) ? grp_fu_313_p2 : bitcast_ln32_112_reg_1372_pp0_iter6_reg);

assign select_ln296_fu_903_p3 = ((inBounds_fu_899_p2[0:0] == 1'b1) ? grp_fu_285_p2 : bitcast_ln32_98_reg_1330_pp0_iter6_reg);

assign select_ln64_7_fu_471_p3 = ((icmp_ln67_reg_1106[0:0] == 1'b1) ? add_ln64_7_fu_465_p2 : n1_fu_158);

assign select_ln64_fu_388_p3 = ((icmp_ln67_fu_382_p2[0:0] == 1'b1) ? 7'd0 : ap_sig_allocacmp_m1_load);

assign tmp_100_fu_626_p4 = {{bPipes_2_dout[95:64]}};

assign tmp_102_fu_655_p4 = {{bPipes_2_dout[127:96]}};

assign tmp_104_fu_684_p4 = {{bPipes_2_dout[159:128]}};

assign tmp_106_fu_713_p4 = {{bPipes_2_dout[191:160]}};

assign tmp_108_fu_742_p4 = {{bPipes_2_dout[223:192]}};

assign tmp_110_fu_771_p4 = {{bPipes_2_dout[255:224]}};

assign tmp_112_fu_1011_p9 = {{{{{{{{bitcast_ln36_49_fu_1008_p1}, {bitcast_ln36_48_fu_1005_p1}}, {bitcast_ln36_47_fu_1002_p1}}, {bitcast_ln36_46_fu_999_p1}}, {bitcast_ln36_45_fu_996_p1}}, {bitcast_ln36_44_fu_993_p1}}, {bitcast_ln36_43_fu_990_p1}}, {bitcast_ln36_fu_987_p1}};

assign tmp_11_fu_412_p4 = {{select_ln64_fu_388_p3[6:5]}};

assign tmp_fu_396_p4 = {{select_ln64_fu_388_p3[6:1]}};

assign tmp_s_fu_597_p4 = {{bPipes_2_dout[63:32]}};

assign trunc_ln170_8_fu_793_p1 = cPrev_2_fu_786_p3[31:0];

assign trunc_ln170_fu_574_p1 = bPipes_2_dout[31:0];

assign zext_ln64_fu_478_p1 = select_ln64_7_fu_471_p3;

assign zext_ln67_fu_531_p1 = select_ln64_reg_1111_pp0_iter2_reg;

endmodule //MatrixMultiplicationKernel_ProcessingElement_3_Pipeline_Pipeline_N_Pipeline_M
