-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MatrixMultiplicationKernel_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    aSplit_14_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_14_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_14_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_14_empty_n : IN STD_LOGIC;
    aSplit_14_read : OUT STD_LOGIC;
    aSplit_13_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_13_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_13_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_13_empty_n : IN STD_LOGIC;
    aSplit_13_read : OUT STD_LOGIC;
    aSplit_12_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_12_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_12_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_12_empty_n : IN STD_LOGIC;
    aSplit_12_read : OUT STD_LOGIC;
    aSplit_11_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_11_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_11_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_11_empty_n : IN STD_LOGIC;
    aSplit_11_read : OUT STD_LOGIC;
    aSplit_10_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_10_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_10_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_10_empty_n : IN STD_LOGIC;
    aSplit_10_read : OUT STD_LOGIC;
    aSplit_9_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_9_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_9_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_9_empty_n : IN STD_LOGIC;
    aSplit_9_read : OUT STD_LOGIC;
    aSplit_8_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_8_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_8_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_8_empty_n : IN STD_LOGIC;
    aSplit_8_read : OUT STD_LOGIC;
    aSplit_7_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_7_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_7_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_7_empty_n : IN STD_LOGIC;
    aSplit_7_read : OUT STD_LOGIC;
    aSplit_6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_6_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_6_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_6_empty_n : IN STD_LOGIC;
    aSplit_6_read : OUT STD_LOGIC;
    aSplit_5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_5_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_5_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_5_empty_n : IN STD_LOGIC;
    aSplit_5_read : OUT STD_LOGIC;
    aSplit_4_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_4_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_4_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_4_empty_n : IN STD_LOGIC;
    aSplit_4_read : OUT STD_LOGIC;
    aSplit_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_3_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_3_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_3_empty_n : IN STD_LOGIC;
    aSplit_3_read : OUT STD_LOGIC;
    aSplit_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_2_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_2_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_2_empty_n : IN STD_LOGIC;
    aSplit_2_read : OUT STD_LOGIC;
    aSplit_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_1_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_1_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_1_empty_n : IN STD_LOGIC;
    aSplit_1_read : OUT STD_LOGIC;
    aSplit_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_0_empty_n : IN STD_LOGIC;
    aSplit_0_read : OUT STD_LOGIC;
    aSplit_15_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aSplit_15_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_15_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    aSplit_15_empty_n : IN STD_LOGIC;
    aSplit_15_read : OUT STD_LOGIC;
    aPipes_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    aPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_0_full_n : IN STD_LOGIC;
    aPipes_0_write : OUT STD_LOGIC;
    bound16 : IN STD_LOGIC_VECTOR (86 downto 0);
    bound4 : IN STD_LOGIC_VECTOR (63 downto 0);
    size_k_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    bound : IN STD_LOGIC_VECTOR (40 downto 0) );
end;


architecture behav of MatrixMultiplicationKernel_TransposeA_Pipeline_TransposeA_N0_TransposeA_M0_TransposeA_K_VITIS_LOOP_153_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv66_0 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv87_0 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv87_1 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv42_1 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    constant ap_const_lv66_1 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln172_reg_601 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln176_reg_605 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_predicate_op77_read_state3 : BOOLEAN;
    signal ap_predicate_op79_read_state3 : BOOLEAN;
    signal ap_predicate_op81_read_state3 : BOOLEAN;
    signal ap_predicate_op83_read_state3 : BOOLEAN;
    signal ap_predicate_op85_read_state3 : BOOLEAN;
    signal ap_predicate_op87_read_state3 : BOOLEAN;
    signal ap_predicate_op89_read_state3 : BOOLEAN;
    signal ap_predicate_op91_read_state3 : BOOLEAN;
    signal ap_predicate_op93_read_state3 : BOOLEAN;
    signal ap_predicate_op95_read_state3 : BOOLEAN;
    signal ap_predicate_op97_read_state3 : BOOLEAN;
    signal ap_predicate_op99_read_state3 : BOOLEAN;
    signal ap_predicate_op101_read_state3 : BOOLEAN;
    signal ap_predicate_op103_read_state3 : BOOLEAN;
    signal ap_predicate_op105_read_state3 : BOOLEAN;
    signal ap_predicate_op107_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln172_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal aPipes_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal aSplit_0_blk_n : STD_LOGIC;
    signal aSplit_1_blk_n : STD_LOGIC;
    signal aSplit_2_blk_n : STD_LOGIC;
    signal aSplit_3_blk_n : STD_LOGIC;
    signal aSplit_4_blk_n : STD_LOGIC;
    signal aSplit_5_blk_n : STD_LOGIC;
    signal aSplit_6_blk_n : STD_LOGIC;
    signal aSplit_7_blk_n : STD_LOGIC;
    signal aSplit_8_blk_n : STD_LOGIC;
    signal aSplit_9_blk_n : STD_LOGIC;
    signal aSplit_10_blk_n : STD_LOGIC;
    signal aSplit_11_blk_n : STD_LOGIC;
    signal aSplit_12_blk_n : STD_LOGIC;
    signal aSplit_13_blk_n : STD_LOGIC;
    signal aSplit_14_blk_n : STD_LOGIC;
    signal aSplit_15_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bound_cast_fu_323_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal bound_cast_reg_591 : STD_LOGIC_VECTOR (41 downto 0);
    signal bound4_cast_fu_327_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal bound4_cast_reg_596 : STD_LOGIC_VECTOR (65 downto 0);
    signal trunc_ln176_fu_463_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_empty_phi_fu_272_p32 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_reg_269 : STD_LOGIC_VECTOR (31 downto 0);
    signal n1_fu_122 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal n1_3_fu_485_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal k_1_fu_126 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal select_ln176_fu_455_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_130 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    signal select_ln176_1_fu_499_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal indvar_flatten11_fu_134 : STD_LOGIC_VECTOR (65 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000";
    signal select_ln174_1_fu_513_p3 : STD_LOGIC_VECTOR (65 downto 0);
    signal indvar_flatten31_fu_138 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal add_ln172_fu_376_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal aSplit_14_read_local : STD_LOGIC;
    signal aSplit_13_read_local : STD_LOGIC;
    signal aSplit_12_read_local : STD_LOGIC;
    signal aSplit_11_read_local : STD_LOGIC;
    signal aSplit_10_read_local : STD_LOGIC;
    signal aSplit_9_read_local : STD_LOGIC;
    signal aSplit_8_read_local : STD_LOGIC;
    signal aSplit_7_read_local : STD_LOGIC;
    signal aSplit_6_read_local : STD_LOGIC;
    signal aSplit_5_read_local : STD_LOGIC;
    signal aSplit_4_read_local : STD_LOGIC;
    signal aSplit_3_read_local : STD_LOGIC;
    signal aSplit_2_read_local : STD_LOGIC;
    signal aSplit_1_read_local : STD_LOGIC;
    signal aSplit_0_read_local : STD_LOGIC;
    signal aSplit_15_read_local : STD_LOGIC;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal aPipes_0_write_local : STD_LOGIC;
    signal icmp_ln174_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln176_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln176_1_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln172_fu_409_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln174_fu_431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln172_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln172_fu_437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln153_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln174_fu_423_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln174_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_fu_449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln153_fu_473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln153_1_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln153_fu_467_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln176_1_fu_493_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal add_ln174_fu_507_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component MatrixMultiplicationKernel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten11_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten11_fu_134 <= ap_const_lv66_0;
                elsif (((icmp_ln172_fu_368_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten11_fu_134 <= select_ln174_1_fu_513_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten31_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten31_fu_138 <= ap_const_lv87_0;
                elsif (((icmp_ln172_fu_368_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten31_fu_138 <= add_ln172_fu_376_p2;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_130 <= ap_const_lv42_0;
                elsif (((icmp_ln172_fu_368_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_130 <= select_ln176_1_fu_499_p3;
                end if;
            end if; 
        end if;
    end process;

    k_1_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_1_fu_126 <= ap_const_lv32_0;
                elsif (((icmp_ln172_fu_368_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_1_fu_126 <= select_ln176_fu_455_p3;
                end if;
            end if; 
        end if;
    end process;

    n1_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    n1_fu_122 <= ap_const_lv10_0;
                elsif (((icmp_ln172_fu_368_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    n1_fu_122 <= n1_3_fu_485_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    bound4_cast_reg_596(63 downto 0) <= bound4_cast_fu_327_p1(63 downto 0);
                    bound_cast_reg_591(40 downto 0) <= bound_cast_fu_323_p1(40 downto 0);
                icmp_ln172_reg_601 <= icmp_ln172_fu_368_p2;
                trunc_ln176_reg_605 <= trunc_ln176_fu_463_p1;
            end if;
        end if;
    end process;
    bound_cast_reg_591(41) <= '0';
    bound4_cast_reg_596(65 downto 64) <= "00";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    aPipes_0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aPipes_0_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aPipes_0_blk_n <= aPipes_0_full_n;
        else 
            aPipes_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aPipes_0_din <= ap_phi_mux_empty_phi_fu_272_p32;
    aPipes_0_write <= aPipes_0_write_local;

    aPipes_0_write_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aPipes_0_write_local <= ap_const_logic_1;
        else 
            aPipes_0_write_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_0_empty_n, ap_predicate_op105_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op105_read_state3 = ap_const_boolean_1))) then 
            aSplit_0_blk_n <= aSplit_0_empty_n;
        else 
            aSplit_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_0_read <= aSplit_0_read_local;

    aSplit_0_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op105_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op105_read_state3 = ap_const_boolean_1))) then 
            aSplit_0_read_local <= ap_const_logic_1;
        else 
            aSplit_0_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_10_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_10_empty_n, ap_predicate_op85_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op85_read_state3 = ap_const_boolean_1))) then 
            aSplit_10_blk_n <= aSplit_10_empty_n;
        else 
            aSplit_10_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_10_read <= aSplit_10_read_local;

    aSplit_10_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op85_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op85_read_state3 = ap_const_boolean_1))) then 
            aSplit_10_read_local <= ap_const_logic_1;
        else 
            aSplit_10_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_11_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_11_empty_n, ap_predicate_op83_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op83_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aSplit_11_blk_n <= aSplit_11_empty_n;
        else 
            aSplit_11_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_11_read <= aSplit_11_read_local;

    aSplit_11_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op83_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op83_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aSplit_11_read_local <= ap_const_logic_1;
        else 
            aSplit_11_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_12_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_12_empty_n, ap_predicate_op81_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op81_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aSplit_12_blk_n <= aSplit_12_empty_n;
        else 
            aSplit_12_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_12_read <= aSplit_12_read_local;

    aSplit_12_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op81_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op81_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aSplit_12_read_local <= ap_const_logic_1;
        else 
            aSplit_12_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_13_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_13_empty_n, ap_predicate_op79_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op79_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aSplit_13_blk_n <= aSplit_13_empty_n;
        else 
            aSplit_13_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_13_read <= aSplit_13_read_local;

    aSplit_13_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op79_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op79_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aSplit_13_read_local <= ap_const_logic_1;
        else 
            aSplit_13_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_14_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_14_empty_n, ap_predicate_op77_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aSplit_14_blk_n <= aSplit_14_empty_n;
        else 
            aSplit_14_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_14_read <= aSplit_14_read_local;

    aSplit_14_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op77_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            aSplit_14_read_local <= ap_const_logic_1;
        else 
            aSplit_14_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_15_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_15_empty_n, ap_predicate_op107_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op107_read_state3 = ap_const_boolean_1))) then 
            aSplit_15_blk_n <= aSplit_15_empty_n;
        else 
            aSplit_15_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_15_read <= aSplit_15_read_local;

    aSplit_15_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op107_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op107_read_state3 = ap_const_boolean_1))) then 
            aSplit_15_read_local <= ap_const_logic_1;
        else 
            aSplit_15_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_1_empty_n, ap_predicate_op103_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op103_read_state3 = ap_const_boolean_1))) then 
            aSplit_1_blk_n <= aSplit_1_empty_n;
        else 
            aSplit_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_1_read <= aSplit_1_read_local;

    aSplit_1_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op103_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op103_read_state3 = ap_const_boolean_1))) then 
            aSplit_1_read_local <= ap_const_logic_1;
        else 
            aSplit_1_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_2_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_2_empty_n, ap_predicate_op101_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op101_read_state3 = ap_const_boolean_1))) then 
            aSplit_2_blk_n <= aSplit_2_empty_n;
        else 
            aSplit_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_2_read <= aSplit_2_read_local;

    aSplit_2_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op101_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op101_read_state3 = ap_const_boolean_1))) then 
            aSplit_2_read_local <= ap_const_logic_1;
        else 
            aSplit_2_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_3_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_3_empty_n, ap_predicate_op99_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op99_read_state3 = ap_const_boolean_1))) then 
            aSplit_3_blk_n <= aSplit_3_empty_n;
        else 
            aSplit_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_3_read <= aSplit_3_read_local;

    aSplit_3_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op99_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op99_read_state3 = ap_const_boolean_1))) then 
            aSplit_3_read_local <= ap_const_logic_1;
        else 
            aSplit_3_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_4_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_4_empty_n, ap_predicate_op97_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op97_read_state3 = ap_const_boolean_1))) then 
            aSplit_4_blk_n <= aSplit_4_empty_n;
        else 
            aSplit_4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_4_read <= aSplit_4_read_local;

    aSplit_4_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op97_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op97_read_state3 = ap_const_boolean_1))) then 
            aSplit_4_read_local <= ap_const_logic_1;
        else 
            aSplit_4_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_5_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_5_empty_n, ap_predicate_op95_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op95_read_state3 = ap_const_boolean_1))) then 
            aSplit_5_blk_n <= aSplit_5_empty_n;
        else 
            aSplit_5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_5_read <= aSplit_5_read_local;

    aSplit_5_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op95_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op95_read_state3 = ap_const_boolean_1))) then 
            aSplit_5_read_local <= ap_const_logic_1;
        else 
            aSplit_5_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_6_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_6_empty_n, ap_predicate_op93_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op93_read_state3 = ap_const_boolean_1))) then 
            aSplit_6_blk_n <= aSplit_6_empty_n;
        else 
            aSplit_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_6_read <= aSplit_6_read_local;

    aSplit_6_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op93_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op93_read_state3 = ap_const_boolean_1))) then 
            aSplit_6_read_local <= ap_const_logic_1;
        else 
            aSplit_6_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_7_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_7_empty_n, ap_predicate_op91_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op91_read_state3 = ap_const_boolean_1))) then 
            aSplit_7_blk_n <= aSplit_7_empty_n;
        else 
            aSplit_7_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_7_read <= aSplit_7_read_local;

    aSplit_7_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op91_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op91_read_state3 = ap_const_boolean_1))) then 
            aSplit_7_read_local <= ap_const_logic_1;
        else 
            aSplit_7_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_8_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_8_empty_n, ap_predicate_op89_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op89_read_state3 = ap_const_boolean_1))) then 
            aSplit_8_blk_n <= aSplit_8_empty_n;
        else 
            aSplit_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_8_read <= aSplit_8_read_local;

    aSplit_8_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op89_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op89_read_state3 = ap_const_boolean_1))) then 
            aSplit_8_read_local <= ap_const_logic_1;
        else 
            aSplit_8_read_local <= ap_const_logic_0;
        end if; 
    end process;


    aSplit_9_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, aSplit_9_empty_n, ap_predicate_op87_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op87_read_state3 = ap_const_boolean_1))) then 
            aSplit_9_blk_n <= aSplit_9_empty_n;
        else 
            aSplit_9_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    aSplit_9_read <= aSplit_9_read_local;

    aSplit_9_read_local_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op87_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_predicate_op87_read_state3 = ap_const_boolean_1))) then 
            aSplit_9_read_local <= ap_const_logic_1;
        else 
            aSplit_9_read_local <= ap_const_logic_0;
        end if; 
    end process;

    add_ln153_fu_467_p2 <= std_logic_vector(unsigned(n1_fu_122) + unsigned(ap_const_lv10_1));
    add_ln172_fu_376_p2 <= std_logic_vector(unsigned(indvar_flatten31_fu_138) + unsigned(ap_const_lv87_1));
    add_ln174_fu_507_p2 <= std_logic_vector(unsigned(indvar_flatten11_fu_134) + unsigned(ap_const_lv66_1));
    add_ln176_1_fu_493_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_130) + unsigned(ap_const_lv42_1));
    and_ln172_fu_437_p2 <= (xor_ln174_fu_431_p2 and xor_ln172_fu_387_p2);
    and_ln174_fu_443_p2 <= (icmp_ln153_fu_393_p2 and and_ln172_fu_437_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(aSplit_14_empty_n, ap_predicate_op77_read_state3, aSplit_13_empty_n, ap_predicate_op79_read_state3, aSplit_12_empty_n, ap_predicate_op81_read_state3, aSplit_11_empty_n, ap_predicate_op83_read_state3, aSplit_10_empty_n, ap_predicate_op85_read_state3, aSplit_9_empty_n, ap_predicate_op87_read_state3, aSplit_8_empty_n, ap_predicate_op89_read_state3, aSplit_7_empty_n, ap_predicate_op91_read_state3, aSplit_6_empty_n, ap_predicate_op93_read_state3, aSplit_5_empty_n, ap_predicate_op95_read_state3, aSplit_4_empty_n, ap_predicate_op97_read_state3, aSplit_3_empty_n, ap_predicate_op99_read_state3, aSplit_2_empty_n, ap_predicate_op101_read_state3, aSplit_1_empty_n, ap_predicate_op103_read_state3, aSplit_0_empty_n, ap_predicate_op105_read_state3, aSplit_15_empty_n, ap_predicate_op107_read_state3, aPipes_0_full_n)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_const_logic_0 = aPipes_0_full_n) or ((ap_const_logic_0 = aSplit_10_empty_n) and (ap_predicate_op85_read_state3 = ap_const_boolean_1)) or ((ap_predicate_op83_read_state3 = ap_const_boolean_1) and (ap_const_logic_0 = aSplit_11_empty_n)) or ((ap_predicate_op81_read_state3 = ap_const_boolean_1) and (ap_const_logic_0 = aSplit_12_empty_n)) or ((ap_predicate_op79_read_state3 = ap_const_boolean_1) and (ap_const_logic_0 = aSplit_13_empty_n)) or ((ap_predicate_op77_read_state3 = ap_const_boolean_1) and (ap_const_logic_0 = aSplit_14_empty_n)) or ((ap_const_logic_0 = aSplit_15_empty_n) and (ap_predicate_op107_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_0_empty_n) and (ap_predicate_op105_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_1_empty_n) and (ap_predicate_op103_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_2_empty_n) and (ap_predicate_op101_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_3_empty_n) and (ap_predicate_op99_read_state3 
    = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_4_empty_n) and (ap_predicate_op97_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_5_empty_n) and (ap_predicate_op95_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_6_empty_n) and (ap_predicate_op93_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_7_empty_n) and (ap_predicate_op91_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_8_empty_n) and (ap_predicate_op89_read_state3 = ap_const_boolean_1)) or ((ap_const_logic_0 = aSplit_9_empty_n) and (ap_predicate_op87_read_state3 = ap_const_boolean_1)));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln172_fu_368_p2)
    begin
        if (((icmp_ln172_fu_368_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_phi_mux_empty_phi_fu_272_p32_assign_proc : process(aSplit_14_dout, icmp_ln172_reg_601, trunc_ln176_reg_605, aSplit_13_dout, aSplit_12_dout, aSplit_11_dout, aSplit_10_dout, aSplit_9_dout, aSplit_8_dout, aSplit_7_dout, aSplit_6_dout, aSplit_5_dout, aSplit_4_dout, aSplit_3_dout, aSplit_2_dout, aSplit_1_dout, aSplit_0_dout, aSplit_15_dout, ap_phi_reg_pp0_iter2_empty_reg_269)
    begin
        if ((icmp_ln172_reg_601 = ap_const_lv1_0)) then
            if ((trunc_ln176_reg_605 = ap_const_lv4_F)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_15_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_E)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_14_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_D)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_13_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_C)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_12_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_B)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_11_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_A)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_10_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_9)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_9_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_8)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_8_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_7)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_7_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_6)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_6_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_5)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_5_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_4)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_4_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_3)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_3_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_2)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_2_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_1)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_1_dout;
            elsif ((trunc_ln176_reg_605 = ap_const_lv4_0)) then 
                ap_phi_mux_empty_phi_fu_272_p32 <= aSplit_0_dout;
            else 
                ap_phi_mux_empty_phi_fu_272_p32 <= ap_phi_reg_pp0_iter2_empty_reg_269;
            end if;
        else 
            ap_phi_mux_empty_phi_fu_272_p32 <= ap_phi_reg_pp0_iter2_empty_reg_269;
        end if; 
    end process;

    ap_phi_reg_pp0_iter2_empty_reg_269 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op101_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op101_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_2) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op103_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op103_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_1) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op105_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op105_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_0) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op107_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op107_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_F) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op77_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op77_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_E) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op79_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op79_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_D) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op81_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op81_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_C) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op83_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op83_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_B) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op85_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op85_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_A) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op87_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op87_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_9) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op89_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op89_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_8) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op91_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op91_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_7) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op93_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op93_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_6) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op95_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op95_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_5) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op97_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op97_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_4) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;


    ap_predicate_op99_read_state3_assign_proc : process(icmp_ln172_reg_601, trunc_ln176_reg_605)
    begin
                ap_predicate_op99_read_state3 <= ((trunc_ln176_reg_605 = ap_const_lv4_3) and (icmp_ln172_reg_601 = ap_const_lv1_0));
    end process;

    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bound4_cast_fu_327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound4),66));
    bound_cast_fu_323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound),42));
    icmp_ln153_fu_393_p2 <= "1" when (n1_fu_122 = ap_const_lv10_200) else "0";
    icmp_ln172_fu_368_p2 <= "1" when (indvar_flatten31_fu_138 = bound16) else "0";
    icmp_ln174_fu_382_p2 <= "1" when (indvar_flatten11_fu_134 = bound4_cast_reg_596) else "0";
    icmp_ln176_1_fu_404_p2 <= "1" when (indvar_flatten_fu_130 = bound_cast_reg_591) else "0";
    icmp_ln176_fu_399_p2 <= "1" when (size_k_1 = ap_const_lv32_0) else "0";
    k_fu_449_p2 <= std_logic_vector(unsigned(select_ln174_fu_423_p3) + unsigned(ap_const_lv32_1));
    n1_3_fu_485_p3 <= 
        ap_const_lv10_1 when (or_ln153_1_fu_479_p2(0) = '1') else 
        add_ln153_fu_467_p2;
    or_ln153_1_fu_479_p2 <= (or_ln153_fu_473_p2 or and_ln174_fu_443_p2);
    or_ln153_fu_473_p2 <= (select_ln172_fu_409_p3 or icmp_ln174_fu_382_p2);
    or_ln174_fu_417_p2 <= (select_ln172_fu_409_p3 or icmp_ln174_fu_382_p2);
    select_ln172_fu_409_p3 <= 
        icmp_ln176_fu_399_p2 when (icmp_ln174_fu_382_p2(0) = '1') else 
        icmp_ln176_1_fu_404_p2;
    select_ln174_1_fu_513_p3 <= 
        ap_const_lv66_1 when (icmp_ln174_fu_382_p2(0) = '1') else 
        add_ln174_fu_507_p2;
    select_ln174_fu_423_p3 <= 
        ap_const_lv32_0 when (or_ln174_fu_417_p2(0) = '1') else 
        k_1_fu_126;
    select_ln176_1_fu_499_p3 <= 
        ap_const_lv42_1 when (or_ln174_fu_417_p2(0) = '1') else 
        add_ln176_1_fu_493_p2;
    select_ln176_fu_455_p3 <= 
        k_fu_449_p2 when (and_ln174_fu_443_p2(0) = '1') else 
        select_ln174_fu_423_p3;
    trunc_ln176_fu_463_p1 <= select_ln176_fu_455_p3(4 - 1 downto 0);
    xor_ln172_fu_387_p2 <= (icmp_ln174_fu_382_p2 xor ap_const_lv1_1);
    xor_ln174_fu_431_p2 <= (select_ln172_fu_409_p3 xor ap_const_lv1_1);
end behav;
