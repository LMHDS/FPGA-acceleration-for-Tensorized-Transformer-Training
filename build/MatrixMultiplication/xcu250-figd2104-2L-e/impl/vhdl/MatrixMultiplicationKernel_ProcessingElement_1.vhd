-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity MatrixMultiplicationKernel_ProcessingElement_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    aPipes_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    aPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_0_empty_n : IN STD_LOGIC;
    aPipes_0_read : OUT STD_LOGIC;
    aPipes_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    aPipes_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    aPipes_1_full_n : IN STD_LOGIC;
    aPipes_1_write : OUT STD_LOGIC;
    bPipes_0_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    bPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    bPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    bPipes_0_empty_n : IN STD_LOGIC;
    bPipes_0_read : OUT STD_LOGIC;
    bPipes_1_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    bPipes_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    bPipes_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    bPipes_1_full_n : IN STD_LOGIC;
    bPipes_1_write : OUT STD_LOGIC;
    cPipes_0_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    cPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    cPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    cPipes_0_full_n : IN STD_LOGIC;
    cPipes_0_write : OUT STD_LOGIC;
    cPipes_1_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    cPipes_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    cPipes_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    cPipes_1_empty_n : IN STD_LOGIC;
    cPipes_1_read : OUT STD_LOGIC;
    size_n : IN STD_LOGIC_VECTOR (31 downto 0);
    size_k : IN STD_LOGIC_VECTOR (31 downto 0);
    size_m : IN STD_LOGIC_VECTOR (31 downto 0);
    size_n_c1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    size_n_c1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    size_n_c1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    size_n_c1_full_n : IN STD_LOGIC;
    size_n_c1_write : OUT STD_LOGIC;
    size_m_c9_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    size_m_c9_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    size_m_c9_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    size_m_c9_full_n : IN STD_LOGIC;
    size_m_c9_write : OUT STD_LOGIC );
end;


architecture behav of MatrixMultiplicationKernel_ProcessingElement_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv33_1FF : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000111111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv24_1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal size_n_c1_blk_n : STD_LOGIC;
    signal size_m_c9_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_ap_done : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_ap_done : STD_LOGIC;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal div_i_cast1_fu_234_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal div_i_cast1_reg_416 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal div_i104_cast3_fu_253_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal div_i104_cast3_reg_421 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub60_fu_263_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub60_reg_426 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub63_fu_269_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub63_reg_431 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub66_fu_275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub66_reg_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln54_fu_288_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln54_reg_444 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal cmp61_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp61_reg_449 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_fu_303_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal mul_reg_454 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln56_fu_316_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln56_reg_462 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln56_fu_322_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln56_reg_467 : STD_LOGIC_VECTOR (22 downto 0);
    signal cmp64_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp64_reg_472 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_31_fu_340_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_31_reg_480 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal cond90_fu_350_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal cond90_reg_485 : STD_LOGIC_VECTOR (4 downto 0);
    signal cmp111_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp111_reg_490 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_fu_371_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal cond_reg_495 : STD_LOGIC_VECTOR (4 downto 0);
    signal brmerge282_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge282_reg_500 : STD_LOGIC_VECTOR (0 downto 0);
    signal aBuffer_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal aBuffer_ce0 : STD_LOGIC;
    signal aBuffer_we0 : STD_LOGIC;
    signal aBuffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal aBuffer_ce1 : STD_LOGIC;
    signal aBuffer_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cBuffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal cBuffer_ce0 : STD_LOGIC;
    signal cBuffer_we0 : STD_LOGIC;
    signal cBuffer_d0 : STD_LOGIC_VECTOR (255 downto 0);
    signal cBuffer_q0 : STD_LOGIC_VECTOR (255 downto 0);
    signal cBuffer_ce1 : STD_LOGIC;
    signal cBuffer_q1 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_ap_idle : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_ap_ready : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_ce0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_we0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_ap_idle : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_ap_ready : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_ce0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_we0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_d0 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_done : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_idle : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_ready : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_0_read : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_1_write : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_ce0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_we0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_done : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_idle : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_ready : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_0_read : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_write : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_0_read : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_1_din : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_1_write : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_ce0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_we0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_d0 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_ce1 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_ce0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_we0 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_ce1 : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_done : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_idle : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_ready : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_1_read : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_0_din : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_0_write : STD_LOGIC;
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cBuffer_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cBuffer_ce0 : STD_LOGIC;
    signal m0_reg_146 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln54_fu_283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal k_reg_157 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln56_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call16 : BOOLEAN;
    signal grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call17 : BOOLEAN;
    signal grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln60_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start_reg : STD_LOGIC := '0';
    signal n0_fu_100 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    signal size_m_c9_write_local : STD_LOGIC;
    signal size_n_c1_write_local : STD_LOGIC;
    signal size_n_cast_fu_225_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_i_fu_228_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal size_m_cast_fu_244_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_i103_fu_247_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal empty_312_fu_299_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln60_fu_346_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp67_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        aBuffer_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        aBuffer_ce0 : OUT STD_LOGIC;
        aBuffer_we0 : OUT STD_LOGIC;
        aBuffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cBuffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        cBuffer_ce0 : OUT STD_LOGIC;
        cBuffer_we0 : OUT STD_LOGIC;
        cBuffer_d0 : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;


    component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        aPipes_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_0_empty_n : IN STD_LOGIC;
        aPipes_0_read : OUT STD_LOGIC;
        aPipes_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        aPipes_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_1_full_n : IN STD_LOGIC;
        aPipes_1_write : OUT STD_LOGIC;
        aBuffer_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        aBuffer_ce0 : OUT STD_LOGIC;
        aBuffer_we0 : OUT STD_LOGIC;
        aBuffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        aPipes_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        aPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_0_empty_n : IN STD_LOGIC;
        aPipes_0_read : OUT STD_LOGIC;
        aPipes_1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        aPipes_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        aPipes_1_full_n : IN STD_LOGIC;
        aPipes_1_write : OUT STD_LOGIC;
        bPipes_0_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        bPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        bPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        bPipes_0_empty_n : IN STD_LOGIC;
        bPipes_0_read : OUT STD_LOGIC;
        bPipes_1_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        bPipes_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        bPipes_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        bPipes_1_full_n : IN STD_LOGIC;
        bPipes_1_write : OUT STD_LOGIC;
        m0 : IN STD_LOGIC_VECTOR (22 downto 0);
        cBuffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        cBuffer_ce0 : OUT STD_LOGIC;
        cBuffer_we0 : OUT STD_LOGIC;
        cBuffer_d0 : OUT STD_LOGIC_VECTOR (255 downto 0);
        cBuffer_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        cBuffer_ce1 : OUT STD_LOGIC;
        cBuffer_q1 : IN STD_LOGIC_VECTOR (255 downto 0);
        cmp111 : IN STD_LOGIC_VECTOR (0 downto 0);
        size_m : IN STD_LOGIC_VECTOR (31 downto 0);
        cond90 : IN STD_LOGIC_VECTOR (4 downto 0);
        aBuffer_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        aBuffer_ce0 : OUT STD_LOGIC;
        aBuffer_we0 : OUT STD_LOGIC;
        aBuffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        aBuffer_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        aBuffer_ce1 : OUT STD_LOGIC;
        aBuffer_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul : IN STD_LOGIC_VECTOR (26 downto 0);
        cond : IN STD_LOGIC_VECTOR (4 downto 0);
        size_n : IN STD_LOGIC_VECTOR (31 downto 0);
        brmerge282 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_WriteC_Flattened IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cPipes_1_dout : IN STD_LOGIC_VECTOR (255 downto 0);
        cPipes_1_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        cPipes_1_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        cPipes_1_empty_n : IN STD_LOGIC;
        cPipes_1_read : OUT STD_LOGIC;
        cPipes_0_din : OUT STD_LOGIC_VECTOR (255 downto 0);
        cPipes_0_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
        cPipes_0_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
        cPipes_0_full_n : IN STD_LOGIC;
        cPipes_0_write : OUT STD_LOGIC;
        cBuffer_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        cBuffer_ce0 : OUT STD_LOGIC;
        cBuffer_q0 : IN STD_LOGIC_VECTOR (255 downto 0) );
    end component;


    component MatrixMultiplicationKernel_ProcessingElement_1_aBuffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component MatrixMultiplicationKernel_ProcessingElement_1_cBuffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (255 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (255 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;



begin
    aBuffer_U : component MatrixMultiplicationKernel_ProcessingElement_1_aBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => aBuffer_address0,
        ce0 => aBuffer_ce0,
        we0 => aBuffer_we0,
        d0 => aBuffer_d0,
        address1 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_address1,
        ce1 => aBuffer_ce1,
        q1 => aBuffer_q1);

    cBuffer_U : component MatrixMultiplicationKernel_ProcessingElement_1_cBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 256,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cBuffer_address0,
        ce0 => cBuffer_ce0,
        we0 => cBuffer_we0,
        d0 => cBuffer_d0,
        q0 => cBuffer_q0,
        address1 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_address1,
        ce1 => cBuffer_ce1,
        q1 => cBuffer_q1);

    grp_ProcessingElement_1_Pipeline_1_fu_168 : component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start,
        ap_done => grp_ProcessingElement_1_Pipeline_1_fu_168_ap_done,
        ap_idle => grp_ProcessingElement_1_Pipeline_1_fu_168_ap_idle,
        ap_ready => grp_ProcessingElement_1_Pipeline_1_fu_168_ap_ready,
        aBuffer_address0 => grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_address0,
        aBuffer_ce0 => grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_ce0,
        aBuffer_we0 => grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_we0,
        aBuffer_d0 => grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_d0);

    grp_ProcessingElement_1_Pipeline_2_fu_174 : component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start,
        ap_done => grp_ProcessingElement_1_Pipeline_2_fu_174_ap_done,
        ap_idle => grp_ProcessingElement_1_Pipeline_2_fu_174_ap_idle,
        ap_ready => grp_ProcessingElement_1_Pipeline_2_fu_174_ap_ready,
        cBuffer_address0 => grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_address0,
        cBuffer_ce0 => grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_ce0,
        cBuffer_we0 => grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_we0,
        cBuffer_d0 => grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_d0);

    grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180 : component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start,
        ap_done => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_done,
        ap_idle => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_idle,
        ap_ready => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_ready,
        aPipes_0_dout => aPipes_0_dout,
        aPipes_0_num_data_valid => ap_const_lv3_0,
        aPipes_0_fifo_cap => ap_const_lv3_0,
        aPipes_0_empty_n => aPipes_0_empty_n,
        aPipes_0_read => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_0_read,
        aPipes_1_din => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_1_din,
        aPipes_1_num_data_valid => ap_const_lv3_0,
        aPipes_1_fifo_cap => ap_const_lv3_0,
        aPipes_1_full_n => aPipes_1_full_n,
        aPipes_1_write => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_1_write,
        aBuffer_address0 => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_address0,
        aBuffer_ce0 => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_ce0,
        aBuffer_we0 => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_we0,
        aBuffer_d0 => grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_d0);

    grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189 : component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start,
        ap_done => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_done,
        ap_idle => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_idle,
        ap_ready => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_ready,
        aPipes_0_dout => aPipes_0_dout,
        aPipes_0_num_data_valid => ap_const_lv3_0,
        aPipes_0_fifo_cap => ap_const_lv3_0,
        aPipes_0_empty_n => aPipes_0_empty_n,
        aPipes_0_read => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_0_read,
        aPipes_1_din => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_din,
        aPipes_1_num_data_valid => ap_const_lv3_0,
        aPipes_1_fifo_cap => ap_const_lv3_0,
        aPipes_1_full_n => aPipes_1_full_n,
        aPipes_1_write => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_write,
        bPipes_0_dout => bPipes_0_dout,
        bPipes_0_num_data_valid => ap_const_lv3_0,
        bPipes_0_fifo_cap => ap_const_lv3_0,
        bPipes_0_empty_n => bPipes_0_empty_n,
        bPipes_0_read => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_0_read,
        bPipes_1_din => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_1_din,
        bPipes_1_num_data_valid => ap_const_lv3_0,
        bPipes_1_fifo_cap => ap_const_lv3_0,
        bPipes_1_full_n => bPipes_1_full_n,
        bPipes_1_write => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_1_write,
        m0 => trunc_ln56_reg_467,
        cBuffer_address0 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_address0,
        cBuffer_ce0 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_ce0,
        cBuffer_we0 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_we0,
        cBuffer_d0 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_d0,
        cBuffer_address1 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_address1,
        cBuffer_ce1 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_ce1,
        cBuffer_q1 => cBuffer_q1,
        cmp111 => cmp111_reg_490,
        size_m => size_m,
        cond90 => cond90_reg_485,
        aBuffer_address0 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_address0,
        aBuffer_ce0 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_ce0,
        aBuffer_we0 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_we0,
        aBuffer_d0 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_d0,
        aBuffer_address1 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_address1,
        aBuffer_ce1 => grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_ce1,
        aBuffer_q1 => aBuffer_q1,
        mul => mul_reg_454,
        cond => cond_reg_495,
        size_n => size_n,
        brmerge282 => brmerge282_reg_500);

    grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211 : component MatrixMultiplicationKernel_ProcessingElement_1_Pipeline_WriteC_Flattened
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start,
        ap_done => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_done,
        ap_idle => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_idle,
        ap_ready => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_ready,
        cPipes_1_dout => cPipes_1_dout,
        cPipes_1_num_data_valid => ap_const_lv3_0,
        cPipes_1_fifo_cap => ap_const_lv3_0,
        cPipes_1_empty_n => cPipes_1_empty_n,
        cPipes_1_read => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_1_read,
        cPipes_0_din => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_0_din,
        cPipes_0_num_data_valid => ap_const_lv3_0,
        cPipes_0_fifo_cap => ap_const_lv3_0,
        cPipes_0_full_n => cPipes_0_full_n,
        cPipes_0_write => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_0_write,
        cBuffer_address0 => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cBuffer_address0,
        cBuffer_ce0 => grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cBuffer_ce0,
        cBuffer_q0 => cBuffer_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln54_fu_283_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call16))) then 
                    grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProcessingElement_1_Pipeline_1_fu_168_ap_ready = ap_const_logic_1)) then 
                    grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1_ignore_call17))) then 
                    grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProcessingElement_1_Pipeline_2_fu_174_ap_ready = ap_const_logic_1)) then 
                    grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_ready = ap_const_logic_1)) then 
                    grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln60_fu_335_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_ready = ap_const_logic_1)) then 
                    grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln60_fu_335_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_ready = ap_const_logic_1)) then 
                    grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    k_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                k_reg_157 <= k_31_reg_480;
            elsif (((icmp_ln56_fu_311_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                k_reg_157 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    m0_reg_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                m0_reg_146 <= add_ln56_reg_462;
            elsif (((icmp_ln54_fu_283_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                m0_reg_146 <= ap_const_lv24_0;
            end if; 
        end if;
    end process;

    n0_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                n0_fu_100 <= ap_const_lv24_0;
            elsif (((icmp_ln56_fu_311_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                n0_fu_100 <= add_ln54_reg_444;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln54_reg_444 <= add_ln54_fu_288_p2;
                cmp61_reg_449 <= cmp61_fu_294_p2;
                    mul_reg_454(26 downto 4) <= mul_fu_303_p3(26 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln56_reg_462 <= add_ln56_fu_316_p2;
                cmp64_reg_472 <= cmp64_fu_326_p2;
                trunc_ln56_reg_467 <= trunc_ln56_fu_322_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                brmerge282_reg_500 <= brmerge282_fu_385_p2;
                cmp111_reg_490 <= cmp111_fu_359_p2;
                    cond90_reg_485(4) <= cond90_fu_350_p3(4);
                    cond_reg_495(4) <= cond_fu_371_p3(4);
                k_31_reg_480 <= k_31_fu_340_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                div_i104_cast3_reg_421 <= sub_i103_fu_247_p2(32 downto 9);
                div_i_cast1_reg_416 <= sub_i_fu_228_p2(32 downto 9);
                sub60_reg_426 <= sub60_fu_263_p2;
                sub63_reg_431 <= sub63_fu_269_p2;
                sub66_reg_436 <= sub66_fu_275_p2;
            end if;
        end if;
    end process;
    mul_reg_454(3 downto 0) <= "0000";
    cond90_reg_485(3 downto 0) <= "0000";
    cond_reg_495(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_done, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_done, grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_done, icmp_ln54_fu_283_p2, ap_CS_fsm_state10, icmp_ln56_fu_311_p2, ap_CS_fsm_state9, ap_CS_fsm_state4, icmp_ln60_fu_335_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln54_fu_283_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln56_fu_311_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln60_fu_335_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    aBuffer_address0_assign_proc : process(ap_CS_fsm_state2, grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_address0, grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_address0, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_address0, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aBuffer_address0 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aBuffer_address0 <= grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            aBuffer_address0 <= grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_address0;
        else 
            aBuffer_address0 <= "XXXXX";
        end if; 
    end process;


    aBuffer_ce0_assign_proc : process(ap_CS_fsm_state2, grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_ce0, grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_ce0, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_ce0, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aBuffer_ce0 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aBuffer_ce0 <= grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            aBuffer_ce0 <= grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_ce0;
        else 
            aBuffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    aBuffer_ce1_assign_proc : process(grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aBuffer_ce1 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_ce1;
        else 
            aBuffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    aBuffer_d0_assign_proc : process(ap_CS_fsm_state2, grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_d0, grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_d0, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_d0, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aBuffer_d0 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aBuffer_d0 <= grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            aBuffer_d0 <= grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_d0;
        else 
            aBuffer_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    aBuffer_we0_assign_proc : process(ap_CS_fsm_state2, grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_we0, grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_we0, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_we0, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aBuffer_we0 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aBuffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aBuffer_we0 <= grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aBuffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            aBuffer_we0 <= grp_ProcessingElement_1_Pipeline_1_fu_168_aBuffer_we0;
        else 
            aBuffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    aPipes_0_read_assign_proc : process(grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_0_read, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_0_read, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aPipes_0_read <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_0_read;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aPipes_0_read <= grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_0_read;
        else 
            aPipes_0_read <= ap_const_logic_0;
        end if; 
    end process;


    aPipes_1_din_assign_proc : process(grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_1_din, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_din, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aPipes_1_din <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aPipes_1_din <= grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_1_din;
        else 
            aPipes_1_din <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_din;
        end if; 
    end process;


    aPipes_1_write_assign_proc : process(grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_1_write, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_write, ap_CS_fsm_state9, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            aPipes_1_write <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_aPipes_1_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            aPipes_1_write <= grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_aPipes_1_write;
        else 
            aPipes_1_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln54_fu_288_p2 <= std_logic_vector(unsigned(n0_fu_100) + unsigned(ap_const_lv24_1));
    add_ln56_fu_316_p2 <= std_logic_vector(unsigned(m0_reg_146) + unsigned(ap_const_lv24_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_done)
    begin
        if ((grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_done)
    begin
        if ((grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_done)
    begin
        if ((grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, size_n_c1_full_n, size_m_c9_full_n)
    begin
                ap_block_state1 <= ((size_m_c9_full_n = ap_const_logic_0) or (size_n_c1_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call16_assign_proc : process(real_start, ap_done_reg, size_n_c1_full_n, size_m_c9_full_n)
    begin
                ap_block_state1_ignore_call16 <= ((size_m_c9_full_n = ap_const_logic_0) or (size_n_c1_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call17_assign_proc : process(real_start, ap_done_reg, size_n_c1_full_n, size_m_c9_full_n)
    begin
                ap_block_state1_ignore_call17 <= ((size_m_c9_full_n = ap_const_logic_0) or (size_n_c1_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(grp_ProcessingElement_1_Pipeline_1_fu_168_ap_done, grp_ProcessingElement_1_Pipeline_2_fu_174_ap_done)
    begin
                ap_block_state2_on_subcall_done <= ((grp_ProcessingElement_1_Pipeline_2_fu_174_ap_done = ap_const_logic_0) or (grp_ProcessingElement_1_Pipeline_1_fu_168_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, icmp_ln54_fu_283_p2)
    begin
        if (((icmp_ln54_fu_283_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    bPipes_0_read_assign_proc : process(grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_0_read, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bPipes_0_read <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_0_read;
        else 
            bPipes_0_read <= ap_const_logic_0;
        end if; 
    end process;

    bPipes_1_din <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_1_din;

    bPipes_1_write_assign_proc : process(grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_1_write, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            bPipes_1_write <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_bPipes_1_write;
        else 
            bPipes_1_write <= ap_const_logic_0;
        end if; 
    end process;

    brmerge282_fu_385_p2 <= (tmp1_fu_380_p2 or cmp61_reg_449);

    cBuffer_address0_assign_proc : process(ap_CS_fsm_state2, grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_address0, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_address0, grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cBuffer_address0, ap_CS_fsm_state10, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cBuffer_address0 <= grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cBuffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cBuffer_address0 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cBuffer_address0 <= grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_address0;
        else 
            cBuffer_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    cBuffer_ce0_assign_proc : process(ap_CS_fsm_state2, grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_ce0, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_ce0, grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cBuffer_ce0, ap_CS_fsm_state10, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cBuffer_ce0 <= grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cBuffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cBuffer_ce0 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cBuffer_ce0 <= grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_ce0;
        else 
            cBuffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cBuffer_ce1_assign_proc : process(grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_ce1, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cBuffer_ce1 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_ce1;
        else 
            cBuffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cBuffer_d0_assign_proc : process(ap_CS_fsm_state2, grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_d0, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_d0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cBuffer_d0 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cBuffer_d0 <= grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_d0;
        else 
            cBuffer_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    cBuffer_we0_assign_proc : process(ap_CS_fsm_state2, grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_we0, grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            cBuffer_we0 <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_cBuffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cBuffer_we0 <= grp_ProcessingElement_1_Pipeline_2_fu_174_cBuffer_we0;
        else 
            cBuffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cPipes_0_din <= grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_0_din;

    cPipes_0_write_assign_proc : process(grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_0_write, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cPipes_0_write <= grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_0_write;
        else 
            cPipes_0_write <= ap_const_logic_0;
        end if; 
    end process;


    cPipes_1_read_assign_proc : process(grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_1_read, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cPipes_1_read <= grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_cPipes_1_read;
        else 
            cPipes_1_read <= ap_const_logic_0;
        end if; 
    end process;

    cmp111_fu_359_p2 <= "1" when (k_reg_157 = ap_const_lv32_0) else "0";
    cmp61_fu_294_p2 <= "1" when (unsigned(n0_fu_100) < unsigned(sub60_reg_426)) else "0";
    cmp64_fu_326_p2 <= "1" when (unsigned(m0_reg_146) < unsigned(sub63_reg_431)) else "0";
    cmp67_fu_366_p2 <= "1" when (unsigned(k_reg_157) < unsigned(sub66_reg_436)) else "0";
    cond90_fu_350_p3 <= 
        ap_const_lv5_10 when (trunc_ln60_fu_346_p1(0) = '1') else 
        ap_const_lv5_0;
    cond_fu_371_p3 <= 
        ap_const_lv5_0 when (trunc_ln60_fu_346_p1(0) = '1') else 
        ap_const_lv5_10;
    div_i104_cast3_fu_253_p4 <= sub_i103_fu_247_p2(32 downto 9);
    div_i_cast1_fu_234_p4 <= sub_i_fu_228_p2(32 downto 9);
    empty_312_fu_299_p1 <= n0_fu_100(23 - 1 downto 0);
    grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start <= grp_ProcessingElement_1_Pipeline_1_fu_168_ap_start_reg;
    grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start <= grp_ProcessingElement_1_Pipeline_2_fu_174_ap_start_reg;
    grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start <= grp_ProcessingElement_1_Pipeline_InitializeABuffer_Inner_InitializeABuffer_Outer_fu_180_ap_start_reg;
    grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start <= grp_ProcessingElement_1_Pipeline_Pipeline_N_Pipeline_M_fu_189_ap_start_reg;
    grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start <= grp_ProcessingElement_1_Pipeline_WriteC_Flattened_fu_211_ap_start_reg;
    icmp_ln54_fu_283_p2 <= "1" when (n0_fu_100 = div_i_cast1_reg_416) else "0";
    icmp_ln56_fu_311_p2 <= "1" when (m0_reg_146 = div_i104_cast3_reg_421) else "0";
    icmp_ln60_fu_335_p2 <= "1" when (k_reg_157 = size_k) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6, icmp_ln54_fu_283_p2)
    begin
        if (((icmp_ln54_fu_283_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    k_31_fu_340_p2 <= std_logic_vector(unsigned(k_reg_157) + unsigned(ap_const_lv32_1));
    mul_fu_303_p3 <= (empty_312_fu_299_p1 & ap_const_lv4_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    size_m_c9_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, size_m_c9_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            size_m_c9_blk_n <= size_m_c9_full_n;
        else 
            size_m_c9_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    size_m_c9_din <= size_m;
    size_m_c9_write <= size_m_c9_write_local;

    size_m_c9_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            size_m_c9_write_local <= ap_const_logic_1;
        else 
            size_m_c9_write_local <= ap_const_logic_0;
        end if; 
    end process;

    size_m_cast_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(size_m),33));

    size_n_c1_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, size_n_c1_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            size_n_c1_blk_n <= size_n_c1_full_n;
        else 
            size_n_c1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    size_n_c1_din <= size_n;
    size_n_c1_write <= size_n_c1_write_local;

    size_n_c1_write_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
            size_n_c1_write_local <= ap_const_logic_1;
        else 
            size_n_c1_write_local <= ap_const_logic_0;
        end if; 
    end process;

    size_n_cast_fu_225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(size_n),33));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub60_fu_263_p2 <= std_logic_vector(unsigned(div_i_cast1_fu_234_p4) + unsigned(ap_const_lv24_FFFFFF));
    sub63_fu_269_p2 <= std_logic_vector(unsigned(div_i104_cast3_fu_253_p4) + unsigned(ap_const_lv24_FFFFFF));
    sub66_fu_275_p2 <= std_logic_vector(unsigned(size_k) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_i103_fu_247_p2 <= std_logic_vector(unsigned(size_m_cast_fu_244_p1) + unsigned(ap_const_lv33_1FF));
    sub_i_fu_228_p2 <= std_logic_vector(unsigned(size_n_cast_fu_225_p1) + unsigned(ap_const_lv33_1FF));
    tmp1_fu_380_p2 <= (cmp67_fu_366_p2 or cmp64_reg_472);
    trunc_ln56_fu_322_p1 <= m0_reg_146(23 - 1 downto 0);
    trunc_ln60_fu_346_p1 <= k_reg_157(1 - 1 downto 0);
end behav;
